{"version":3,"sources":["oli.svg","serviceWorker.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/ModalTutorProfile.js","views/account/AccountView/Table.js","views/account/AccountView/Children.js","views/account/AccountView/FaveTutors.js","views/account/AccountView/index.js","views/account/AccountView/SubjectArea.js","views/customer/FindTutorView/Results.js","views/customer/FindTutorView/Toolbar.js","views/customer/FindTutorView/Bundle.js","views/customer/FindTutorView/ChildDetails.js","views/customer/FindTutorView/Calendar.js","views/customer/FindTutorView/Availability.js","views/customer/FindTutorView/SpecialRequests.js","views/customer/FindTutorView/Breakdown.js","views/customer/FindTutorView/Payment.js","views/customer/FindTutorView/Summary.js","Api.js","components/loadingBack.jsx","views/customer/FindTutorView/index.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/RequestPage/ModalConfRequest.js","views/RequestPage/ModalRequest.js","views/RequestPage/FaveTutorDecline.js","views/RequestPage/Table.js","views/RequestPage/RequestSummary.js","views/reports/DashboardView/ModalSessionDetails.js","views/reports/DashboardView/Table.js","views/reports/DashboardView/Upcoming.js","views/reports/DashboardView/Pending.js","views/reports/DashboardView/History.js","views/reports/DashboardView/Transaction.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/Calendar.js","views/reports/DashboardView/index.js","views/errors/NotFoundView.jsx","views/test/AuthView/index.js","views/settings/SettingsView/Notifications.js","views/product/ProductListView/Toolbar.js","views/product/ProductListView/ProductCard.js","views/product/ProductListView/data.js","views/product/ProductListView/index.js","views/settings/SettingsView/index.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/SavedPayMethod.js","views/TutorDashboardView/Budget.js","views/TutorDashboardView/LatestOrders.js","views/TutorDashboardView/LatestProducts.js","views/TutorDashboardView/RateChild.js","views/TutorDashboardView/ModalSessionDetails.js","views/TutorDashboardView/ModalZoomStart.js","views/TutorDashboardView/ModalSure.js","views/TutorDashboardView/Table.js","views/TutorDashboardView/Upcoming.js","views/TutorDashboardView/History.js","views/TutorDashboardView/Pending.js","views/TutorDashboardView/Transaction.js","views/TutorDashboardView/TotalProfit.js","views/TutorDashboardView/AveRating.js","views/TutorDashboardView/TotalStudents.js","views/TutorDashboardView/TotalHours.js","views/TutorDashboardView/MetricsBoxes.js","views/TutorDashboardView/Metrics.js","components/TutorExtensionForm.js","views/TutorDashboardView/Calendar.js","views/TutorDashboardView/index.js","components/ReactGiftedChat.js","views/chat/index.js","components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/testimonials.jsx","components/contact.jsx","components/pricing.jsx","components/freqask.jsx","LandingPage.jsx","components/loading.jsx","components/login.jsx","views/CreditStore/data.js","views/CreditStore/Bundle.js","views/CreditStore/CreditCardForm.js","views/CreditStore/Payment.js","views/CreditStore/Breakdown.js","views/CreditStore/Validity.js","views/CreditStore/PromoCode.js","views/CreditStore/PayPage.js","views/CreditStore/index.js","components/NoHourView.js","views/test/PlaygroundView/PayMongo.js","views/test/PlaygroundView/Brankas.js","views/test/PlaygroundView/Zoom.js","views/test/PlaygroundView/Twilio.js","views/test/PlaygroundView/Email.js","views/test/PlaygroundView/RandomFact.js","views/test/PlaygroundView/Chat.js","views/test/PlaygroundView/ModalSessionExtension.js","views/test/PlaygroundView/ModalDeclined.js","views/test/PlaygroundView/ModalCancelled.js","views/test/PlaygroundView/ModalWaiting.js","views/test/PlaygroundView/ModalSure.js","views/test/PlaygroundView/RateTutor.js","views/test/PlaygroundView/Table.js","views/test/PlaygroundView/RequestSummary.js","views/test/PlaygroundView/ModalRequest.js","views/test/PlaygroundView/ModalConfRequest.js","views/test/PlaygroundView/ModalTutorProfile.js","views/test/PlaygroundView/ExtensionPrompt.js","views/test/PlaygroundView/TutorExtensionForm.js","views/test/PlaygroundView/FaveTutorDecline.js","views/test/PlaygroundView/ModalTutorCancelling.js","views/test/PlaygroundView/index.js","components/Tutorial.jsx","layouts/DashboardLayout/index.js","layouts/TutorDashboardLayout/NavBar/NavItem.js","layouts/TutorDashboardLayout/NavBar/index.js","layouts/TutorDashboardLayout/TopBar.js","views/tutorAccount/AccountView/Profile.js","views/tutorAccount/AccountView/ProfileDetails.js","views/tutorAccount/AccountView/Table.js","views/tutorAccount/AccountView/Children.js","views/tutorAccount/AccountView/FaveTutors.js","views/tutorAccount/AccountView/SubjectArea.js","views/tutorAccount/AccountView/TotalProfit.js","views/tutorAccount/AccountView/AveRating.js","views/tutorAccount/AccountView/TotalStudents.js","views/tutorAccount/AccountView/TotalHours.js","views/tutorAccount/AccountView/MetricsBoxes.js","views/tutorAccount/AccountView/Metrics.js","views/tutorAccount/AccountView/index.js","views/PayoutHistory/ModalSessionDetails.js","views/PayoutHistory/Table.js","views/PayoutHistory/WeeklySessions.js","views/PayoutHistory/ModalReceipt.js","views/PayoutHistory/PayoutHeaders.js","views/PayoutHistory/index.js","views/RequestPage/Requests.js","views/RequestPage/index.js","components/NoRequestView.js","components/NoPayoutView.js","layouts/TutorDashboardLayout/index.js","views/errors/NotOnline.jsx","components/AccountDetails.jsx","components/PromoCode.jsx","components/ChildDetails.jsx","components/ParentRegister.js","components/signup.jsx","views/TutorApp/data.js","views/TutorApp/Results.js","views/TutorApp/Toolbar.js","views/TutorApp/FormDetails.js","views/TutorApp/AppSent.js","views/TutorApp/SpecialRequests.js","views/TutorApp/Payment.js","views/TutorApp/index.js","App.js","components/GlobalStyles.js","theme/index.js","theme/shadows.js","theme/typography.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","useStyles","makeStyles","theme","item","display","paddingTop","paddingBottom","button","color","palette","text","secondary","fontWeight","typography","fontWeightMedium","justifyContent","letterSpacing","padding","textTransform","width","icon","marginRight","spacing","title","active","primary","main","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","user","items","BarChartIcon","UsersIcon","UserIcon","SettingsIcon","SportsEsportsIcon","mobileDrawer","desktopDrawer","top","height","avatar","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","map","key","Hidden","lgUp","Drawer","anchor","paper","onClose","open","mdDown","defaultProps","Logo","props","alt","root","TopBar","credits","onMobileNavOpen","useState","confirm","useConfirm","React","left","bottom","right","state","setState","toggleDrawer","event","type","AppBar","elevation","flexGrow","xsDown","Container","Grid","container","direction","justify","sm","IconButton","mx","Badge","badgeContent","data","image","message","detailPage","header","option","onClick","console","log","description","then","localStorage","clear","replace","catch","smUp","SwipeableDrawer","onOpen","list","fullList","role","onKeyDown","index","ListItemText","toolbar","backgroundColor","background","default","overflow","wrapper","flex","contentContainer","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","my","picture","gutterBottom","first_name","last_name","CardActions","fullWidth","ProfileDetails","firstName","lastName","email","phone","country","values","setValues","handleChange","target","value","autoComplete","noValidate","CardHeader","subheader","md","xs","TextField","helperText","label","onChange","required","colors","red","differenceIcon","differenceValue","closeButton","float","marginTop","dialogTitle","dialogStyle","minWidth","iconFilled","iconHover","margin","ModalTutorProfile","setOpen","handleClose","DialogTitle","withStyles","other","Fragment","disableTypography","aria-label","Dialog","aria-labelledby","aria-describedby","id","DialogContent","align","mb","style","textAlign","rows","date","time","subject","tutor","paddingLeft","paddingRight","highlight","lighten","light","dark","marginBottom","table","visuallyHidden","border","clip","position","EnhancedTable","page","setPage","dense","rowsPerPage","setRowsPerPage","tableHeaders","tableRows","tableType","openTutor","setOpenTutor","Math","min","length","TableContainer","Table","TableHead","headerLabels","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","TableRow","renderHeaders","TableBody","undefined","slice","child","hover","age","gradeLevel","school","startIcon","renderRows","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","headers","Children","useTheme","push","year_level","favtutors","minHeight","Account","maxWidth","lg","xl","FaveTutors","importButton","exportButton","bundleButton","boxShadow","ChildDetails","setData","tutorOption","setTutorOption","nam","val","FormControl","formControl","InputLabel","Select","native","inputProps","tutees","tutee","lengths","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","disabled","subjects","subject_field","Autocomplete","multiple","options","freeSolo","renderTags","getTagProps","Chip","renderInput","params","placeholder","Example","handleDayClick","bind","selectedDays","day","selected","this","selectedIndex","findIndex","selectedDay","DateUtils","isSameDay","splice","getDays","toLocaleDateString","Moment","format","onDayClick","Component","flexWrap","textField","marginLeft","Availability","days","setDays","times","setTimes","setCount","placeItems","moment","InputLabelProps","shrink","step","getTime","SpecialRequests","multiline","payButton","Breakdown","Summary","topic","Object","keys","Date","Number","api_url","get_token","_callback","axios","post","res","setItem","token","err","verify_token","getItem","require","JSON","stringify","method","url","response","error","post_api","raw_data","get_user","jwt","create_paymentintent","amount","create_paymentmethod","card_number","exp_month","exp_year","cvc","attach_payment","payment_intent","payment_method","paymentMethodId","clientKey","paymentIntentId","split","attributes","client_key","paymentIntentStatus","status","backdrop","zIndex","drawer","Loading","Backdrop","processing","CircularProgress","Alert","nextButton","backButton","CustomerListView","detailsDone","setDetailsDone","success","setSuccess","setError","setProcessing","returnMessage","setMessage","topics","favTutor","files","specialRequest","allTutors","handleClickOpen","Snackbar","autoHideDuration","severity","DialogContentText","DialogActions","available_days","forEach","fromDay","untilDay","from","until","setUTCHours","postData","join","autoFocus","uuid","actions","subtract","ModalConfRequest","mt","ModalRequest","openConf","setOpenConf","setTime","setDate","handleChangeTime","labelId","MenuItem","FaveTutorDecline","openRequest","setOpenRequest","openDecline","setDecline","request","duration","student","parent","transaction","sessionNo","sessionType","openSessionDets","setOpenSessionDets","session","ModalSessionDetails","Upcoming","m","Sales","indigo","grey","divider","orange","green","Dashboard","ml","Calendar","upcoming","Pending","pending","History","history","Transaction","NotFoundView","statsItem","statsIcon","productCard","Notifications","wrap","Checkbox","defaultChecked","SettingsView","RateChild","Rating","precision","fontsize","ModalWaiting","ModalSure","openZoom","setOpenZoom","ModalZoomStart","openFeedback","setOpenFeedback","openSure","setOpenSure","currentDate","setUpcoming","setHistory","borderRadius","TutorExtensionForm","accept","decline","py","buttonContainer","selectedBtn","choicesBtn","selectExitBtn","exitBtn","selectedDate","changeDate","requests","loadingCircle","messages","loading","prevProps","previousState","GiftedChat","append","onSend","Chat","akadMessages","createdAt","joshMessages","changeMessage","joshUnread","changeJosh","akadsUnread","changeAkads","styles","channelList","chat","borderWidth","borderColor","borderRightStyle","borderLeftStyle","settings","changeChat","changeChatlist","chatListAkads","chatListJosh","subtitle","chatID","unread","statusColor","statusColorType","chatList","chatList2","i","Navigation","data-toggle","data-target","Header","opacity","features","d","about","paragraph","Why","Why2","TestimonialGrid","img","testimonials","Contact","address","facebook","twitter","youtube","ul","listStyle","appBar","borderBottom","toolbarTitle","link","heroContent","cardHeader","cardPricing","footer","borderTop","breakpoints","up","tiers","price","buttonText","buttonVariant","Pricing","tier","titleTypographyProps","subheaderTypographyProps","action","line","FreqAsk","LandingPage","landingPageData","JsonData","getlandingPageData","Features","About","Testimonials","Copyright","Link","getFullYear","LoginView","login","accessToken","tokenObj","access_token","idToken","id_token","login_tutor","loaded","CssBaseline","clientId","render","renderProps","onSuccess","onFailure","uxMode","onAutoLoadFinished","cookiePolicy","city","street","avatarUrl","bundleButtonRev","textPriceSingle","fontColor","textPriceSingleRev","textPrice","textPriceRev","textHours","textHoursRev","textOldPrice","fontSize","textOldPriceRev","Bundle","setAmount","setHours","bundleA","setBundleA","bundleB","setBundleB","bundleC","setBundleC","bundleClick","hours","PaymentForm","expiry","focus","number","handleInputFocus","e","handleInputChange","setCardState","focused","onFocus","Payment","discount","Validity","today","dd","String","getDate","padStart","endDate","getMonth","startDate","add","PromoCode","PayPage","paynow","CreditStore","themebp","useMediaQuery","down","cardState","exp_date","payment_method_id","checkout","addCredit","handleChangeNext","card","setCard","setExpMonth","setExpYear","setCVC","pay","closeSuccess","startAdornment","InputAdornment","button1","RandomFact","createZoomMeeting","start","start_url","join_url","dividers","recipient","setRecipient","send","fact","get","dataSource","ModalTutorCancelling","PayMongo","Email","Twilio","Zoom","Brankas","Tutorial","DashboardLayout","useRouteMatch","setLoaded","userData","setUserData","getUserData","TransitionGroup","CSSTransition","in","timeout","enter","exit","classNames","exact","path","DashboardView","NoHourView","FindTutorView","AccountView","PlaygroundView","Fade","notifications","notifs","setNotif","chatNotif","setChatNotif","markAsRead","TotalProfit","totalEarnings","AveRating","aveRating","TotalStudents","noStudents","totalHours","BoxContent","Metrics","TutorAccountView","grade","payout","WeeklySessions","stopPropagation","Modal","heading","pxToRem","secondaryHeading","verticalAlign","details","column","flexBasis","helper","borderLeft","makingEven","textDecoration","receiptButton","PayoutHeaders","openReceipt","setOpenReceipt","Accordion","AccordionSummary","expandIcon","aria-controls","handleClickReceipt","ModalReceipt","AccordionDetails","Requests","RequestView","TutorDashboardLayout","payoutPresent","changeUpcoming","changeHistory","user_id","receivedTime","interval","command","startPolling","stopPolling","isPolling","TutorDashboardView","NoRequestView","RequestPage","PayoutHistory","NoPayoutView","SignUp","submitHandler","preventDefault","register","changeHandler","setAccount","phoneChangeHandler","givenName","familyName","googleId","defaultCountry","onlyCountries","autoFormat","countryCodeEditable","form","submit","setPromo","promo","setChild","addChild","layout","stepper","buttons","alreadyLink","ParentRegister","activeStep","setActiveStep","accountDetails","childDetails","promoDetails","steps","Paper","Stepper","Step","StepLabel","AccountDetails","Error","getStepContent","changeState","row","InputProps","filesLimit","AppSent","FormDetails","App","checkBackend","timestamp","now","token_data","check_admin_token","registerProps","username","getParentData","getTutorData","offline","LandingView","TutorApp","NotOnline","withRouter","createStyles","boxSizing","html","body","a","GlobalStyles","createMuiTheme","common","white","second","third","fourth","whiteButton","shadows","h1","h2","h3","h4","h5","fontStyle","h6","overline","ReactDOM","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9cd6906.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oli.3ff8dc2f.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\n\nconst user = {\n  avatar: '/static/images/avatars/rolo.png',\n  jobTitle: 'Professional Breather',\n  name: 'Rolo Pena'\n};\n\nconst items = [\n  {\n    href: '/parent/dashboard',\n    icon: BarChartIcon,\n    title: 'Overview'\n  },\n  {\n    href: '/parent/customers',\n    icon: UsersIcon,\n    title: 'Book A Tutor'\n  },\n  // {\n  //   href: '/parent/products',\n  //   icon: ShoppingBagIcon,\n  //   title: 'Products'\n  // },\n  {\n    href: '/parent/account',\n    icon: UserIcon,\n    title: 'Profile'\n  },\n  {\n    href: '/parent/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  },\n  {\n    href: '/parent/playground',\n    icon: SportsEsportsIcon,\n    title: 'Testing Grounds'\n  },\n  {\n    href: '/parent/tutor-dashboard',\n    icon: BarChartIcon,\n    title: 'Tutor Dashboard'\n  },\n  // {\n  //   href: '/parent/authorization/login',\n  //   icon: LockIcon,\n  //   title: 'Login'\n  // },\n  // {\n  //   href: '/parent/authorization/register',\n  //   icon: UserPlusIcon,\n  //   title: 'Register'\n  // },\n  // {\n  //   href: '/parent/404',\n  //   icon: AlertCircleIcon,\n  //   title: 'Error'\n  // }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.avatar}\n          to=\"/account\"\n        />\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst Logo = (props) => {\n  return (\n    <img\n      alt=\"Logo\"\n      src=\"/static/whitelogo.png\"\n      {...props}\n    />\n  );\n};\n\nexport default Logo;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n  Container,\n  Grid,\n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from 'src/components/Logo';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport BookIcon from '@material-ui/icons/Book';\nimport StoreIcon from '@material-ui/icons/Store';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport FaceIcon from '@material-ui/icons/Face';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport InsertInvitationIcon from '@material-ui/icons/InsertInvitation';\nimport Notifications from \"react-notifications-menu\";\nimport { useConfirm } from 'material-ui-confirm';\nimport 'src/React-Notifs.css'\n\nimport 'intro.js/introjs.css';\nimport { Steps } from 'intro.js-react';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className, credits,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const anchor = 'left';\n  const [notifications] = useState([]);\n  const confirm = useConfirm();\n  const logout = () => {\n    confirm({ title:'Logout' ,description: 'Would you like to logout?' })\n      .then(() => {\n        localStorage.clear()\n        window.location.replace('/')\n      })\n      .catch(() => {\n\n      });\n\n  }\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Overview', 'Book A Tutor', 'Buy Credits', 'Profile', 'Settings'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const data = [\n    {\n      image :'https://synergi-dev.s3.ap-southeast-1.amazonaws.com/profile-pictures/6b9.png' ,\n      message : 'Lorem ipsum dolor sit amet.',\n      detailPage : '/events', \n      receivedTime:'12h ago'\n    }\n ];\n\n  return (\n    \n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden xsDown>\n        <Container>\n\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item sm={2}>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/\">\n                <DashboardIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Overview\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid sm={2}>\n              <IconButton color=\"inherit\" href=\"#/findtutor\">\n                <InsertInvitationIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Request\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/store\">\n                <ShoppingCartIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Buy Hours\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/account\">\n                <AccountCircleIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Profile\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/settings\">\n                <SettingsIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Settings\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n          </Grid>\n\n        </Container>\n\n        </Hidden>\n        <Box flexGrow={1} />\n\n        <Hidden xsDown>\n          <Box mx={2}>\n            <h5>\n              Hours: {credits}\n            </h5>\n          </Box>\n        </Hidden>\n        <IconButton color=\"inherit\" href=\"#/messages\">\n          <Badge\n            badgeContent={3}\n            color=\"primary\"\n            variant=\"dot\"\n          >\n            <ForumIcon/>\n          </Badge>\n        </IconButton>\n        <IconButton color=\"inherit\">\n          {/* <Badge\n            badgeContent={2}\n            color=\"secondary\"\n            variant=\"dot\"\n          > */}\n            {/* <NotificationsIcon /> */}\n            <Notifications\n              // data={data}\n              data={[\n                {\n                  image: '../static/images/oli-happy.png',\n                  message: 'Charles Samoy accepted your session request on December 3, 2020 for Nate Mercado',\n                  detailPage: '/',\n                },\n                {\n                  image: '../static/images/oli-happy.png',\n                  message: 'Carl Cornejo declined your session request',\n                  detailPage: '/',\n                },\n              ]}\n              header={{\n                title: 'Notifications',\n                option: { text: 'View All', onClick: () => console.log('Clicked') },\n              }}\n            />\n          {/* </Badge> */}\n        </IconButton>\n        <IconButton onClick={logout} color=\"inherit\">\n            <MeetingRoomIcon/>\n        </IconButton>\n        <Hidden smUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden smUp>\n        <SwipeableDrawer\n      anchor={anchor}\n      open={state[anchor]}\n      onClose={toggleDrawer(anchor, false)}\n      onOpen={toggleDrawer(anchor, true)}\n    >\n      {list(anchor)}\n    </SwipeableDrawer>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className, props, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box \n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Box my={2}>\n            <Avatar\n              className={classes.avatar}\n              src={props.picture}\n            />\n          </Box>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {props.first_name} {props.last_name}\n          </Typography>\n          {/* <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} ${user.country}`}\n          </Typography> */}\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, props, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: props.first_name,\n    lastName: props.last_name,\n    email: props.email,\n    phone: props.phone,\n    state: 'NCR',\n    country: 'Philippines'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            {/* <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid> */}\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  props: PropTypes.array\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Button,\n  Box,\n  Container,\n  TextField,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  rootRate: {\n    // width: 200,\n    display: 'flex',\n  },\n}));\n\nconst ModalTutorProfile = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Tutor Profile\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <Box align='center' mb={2} >\n            <Avatar>CS</Avatar>\n          </Box>\n          \n          <Typography variant=\"h4\" align=\"center\" mb={2}>\n            Charles Samoy\n          </Typography>\n          <Typography variant=\"h6\" align=\"center\" mb={2}>\n            Ateneo de Manila University\n          </Typography>\n          <Typography variant=\"h6\" align=\"center\" mb={2}>\n            4 BS Information Technology Techpreneurship\n          </Typography>\n          <Typography variant=\"h6\" align=\"center\" mb={2}>\n            Lan Kwai's DJ of the Year 2019\n          </Typography>\n\n          <Box my={5}>\n            <Grid container spacing={2} style={{textAlign: 'center'}}>\n              <Grid xs={6}>\n                <Typography variant=\"h3\" align=\"center\" mb={2}>\n                  40\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" mb={2}>\n                  hours\n                </Typography>\n              </Grid>\n              <Grid xs={6}>\n                <Typography variant=\"h4\" align=\"center\" mb={2}>\n                  40\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" mb={2}>\n                  Students\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </DialogContent>\n    </Dialog>\n  );\n};\n\nModalTutorProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalTutorProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport StarIcon from '@material-ui/icons/Star';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PageviewIcon from '@material-ui/icons/Pageview';\n\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ModalTutorProfile from './ModalTutorProfile';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n  const rows = [\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Math',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Science',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'LoL',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n  ]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {/* {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )} */}\n      <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n      </IconButton>\n      {/* {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )} */}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n  const tableHeaders = props.tableHeaders;\n  const tableRows = props.tableRows;\n  // const sessionType = props.sessionType;\n  const tableType = props.type;\n  const [openTutor, setOpenTutor] = React.useState(false);\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n  const renderHeaders =()=>{\n  \n    const headerLabels = tableHeaders.map((label, index)=>(\n      label === \"Date\" ?\n          <TableCell sortDirection=\"desc\">\n            <Tooltip\n                enterDelay={300}\n                title=\"Sort\"\n            >\n                <TableSortLabel\n                active\n                direction=\"desc\"\n                >\n                Date\n                </TableSortLabel>\n            </Tooltip>\n          </TableCell>\n        :\n          <TableCell>\n            {label}\n          </TableCell>\n        \n    ))\n\n\n    return (<TableRow>{headerLabels}</TableRow>)\n\n  };\n\n  const renderRows = () =>{\n    \n    if(tableRows != undefined){\n      if(tableType == \"childList\"){\n          const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((child, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={child.id}\n              >\n                  <TableCell>\n                  {child.name}\n                  </TableCell>\n                  <TableCell>\n                  {child.age}\n                  </TableCell>\n                  <TableCell>\n                  {child.gradeLevel}\n                  </TableCell>\n                  <TableCell>\n                  {child.school}\n                  </TableCell>                  \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary' startIcon={<EditIcon/>}>Edit</Button>\n                      </Box>\n                      {/* <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary'>Delete</Button>\n                      </Box> */}\n                  </TableCell>\n              </TableRow>\n          );\n          })\n\n        return rowsResult\n        \n      }else if(tableType == \"faveTutorList\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((tutor, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={tutor.id}\n              >\n                  <TableCell onClick={() => setOpenTutor(true)}>\n                  {tutor.name}\n                  </TableCell>\n                  <ModalTutorProfile open={openTutor} setOpen={setOpenTutor}/>\n                  <TableCell>\n                  {tutor.subject}\n                  </TableCell>\n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary' startIcon={<DeleteIcon/>}>Remove</Button>\n                      </Box>\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }else if(tableType == \"subjectList\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((tutor, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={tutor.id}\n              >\n\n                  <TableCell>\n                  {tutor.subject}\n                  </TableCell>\n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary'  startIcon={<DeleteIcon/>}>Remove</Button>\n                      </Box>\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }\n      \n    }\n\n    // if(rowsResult != undefined){\n    //   return (<TableRow>{rowsResult}</TableRow>)\n    // }\n    \n      // {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n      //   .map((session, index) => {\n      //   return (\n      //       <TableRow\n      //           hover\n      //           key={session.id}\n      //       >\n      //           <TableCell>\n      //           {session.date}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.time}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.subject}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.tutor.name}\n      //           </TableCell>\n      //           <TableCell>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>View</Button>\n      //               </Box>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>Chat</Button>\n      //               </Box>\n      //           </TableCell>\n      //       </TableRow>\n      //   );\n      //   })\n      // }\n  };\n\n  return (\n    <div className={classes.root}>\n        {/* <EnhancedTableToolbar/> */}\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size={dense}\n          >\n            <TableHead>\n                {renderHeaders()}\n\n                {/* <TableRow>\n                    <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                        enterDelay={300}\n                        title=\"Sort\"\n                    >\n                        <TableSortLabel\n                        active\n                        direction=\"desc\"\n                        >\n                        Date\n                        </TableSortLabel>\n                    </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                    Time\n                    </TableCell>\n                    <TableCell>\n                    Subject\n                    </TableCell>\n                    <TableCell>\n                    Tutor\n                    </TableCell>\n                    <TableCell>\n                    </TableCell>\n                </TableRow> */}\n            </TableHead>\n            <TableBody>\n              {renderRows()}\n                {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((session, index) => {\n                    return (\n                        <TableRow\n                            hover\n                            key={session.id}\n                        >\n                            <TableCell>\n                            {session.date}\n                            </TableCell>\n                            <TableCell>\n                            {session.time}\n                            </TableCell>\n                            <TableCell>\n                            {session.subject}\n                            </TableCell>\n                            <TableCell>\n                            {session.tutor.name}\n                            </TableCell>\n                            <TableCell>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>View</Button>\n                                </Box>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>Chat</Button>\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    );\n                    })\n                } */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[3]}\n          component=\"div\"\n          count={tableRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    name: 'Nate Mercado',\n    age: '14',\n    gradeLevel:'Grade 10',\n    school: 'Ateneo High School'\n  },\n  {\n    name: 'Nate Mercado',\n    age: '10',\n    gradeLevel:'Grade 6',\n    school: 'Ateneo High School'\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Name\", \"Age\", \"Grade Level\", \"School\", \"\"]\n\n// const sessionType = \"childrenList\"\n\nconst type = \"childList\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Children = ({ className, children, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const rows = []\n  children.map((child) => {\n    rows.push({\n      'name':child.first_name + ' ' + child.last_name,\n      'age':child.age,\n      'gradeLevel':child.year_level,\n      'school':child.school,\n    })\n  })\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Your Children\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nChildren.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Children;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  // {\n  //   name: 'Adam Crisostomo',\n  //   subject: 'English'\n  // },\n  // {\n  //   name: 'Carl Castillo',\n  //   subject: 'Math'\n  // },\n  // {\n  //   name: 'Eedijk Roque',\n  //   subject: 'Science'\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Name\", \"Subject\", \"\"]\n\n// const sessionType = \"childrenList\"\n\nconst type = \"faveTutorList\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Children = ({ className, favtutors, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Favorite Tutors\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nChildren.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Children;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\nimport Children from './Children';\nimport FaveTutors from './FaveTutors'; \nimport SubjectArea from './SubjectArea';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = (props) => {\n  const classes = useStyles();\n  const accountType = 'parent';\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Profile\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile props={props}/>\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails props={props}/>\n          </Grid>\n          {accountType == 'parent' ? \n          <React.Fragment>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <Children children={props.children}/>\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <FaveTutors favtutors={props.favtutors}/>\n          </Grid>\n          </React.Fragment>\n          :\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xl={6}\n            xs={6}\n          >\n            <SubjectArea/>\n          </Grid>\n          }\n          \n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    subject : 'Math',\n  },\n  {\n    subject : 'Science',\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Subject\", \"\"]\n\n// const sessionType = \"childrenList\"\n\nconst type = \"subjectList\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Children = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Your Subject Area\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nChildren.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Children;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, customers, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.length === customers.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCustomerIds.length > 0\n                      && selectedCustomerIds.length < customers.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Phone\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers.slice(0, limit).map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Avatar\n                        className={classes.avatar}\n                        src={customer.avatarUrl}\n                      >\n                        {getInitials(customer.name)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {customer.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {customer.email}\n                  </TableCell>\n                  <TableCell>\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\n                  </TableCell>\n                  <TableCell>\n                    {customer.phone}\n                  </TableCell>\n                  <TableCell>\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button className={classes.importButton}>\n          Import\n        </Button>\n        <Button className={classes.exportButton}>\n          Export\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add customer\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n    // border: \"3px solid #4655A5\",\n    // backgroundColor: \"white\",\n    // color: theme.color,\n    // borderRadius: \"10px\",\n    boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n  },\n}));\n\nconst Bundle = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n            title=\"Choose a Bundle\"\n          />\n          <Divider />\n          <CardContent>\n            <Box>\n              <Grid container spacing={2} \n                alignItems=\"center\"\n                justify=\"center\"\n                style={{placeItems: 'center'}}>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                  alignItems=\"center\"\n                  justify=\"center\"\n                  style={{placeItems: 'center'}}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  P550/hour\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  P500/hour for 10 hours\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  P450/hour for 20 hours\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nBundle.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Bundle;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  Select,\n  FormControl,\n  InputLabel,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { Search as SearchIcon } from 'react-feather';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FileUpload from './FileUpload';\nimport { DropzoneDialog } from 'material-ui-dropzone';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst ChildDetails = ({ className, data, setData, props, ...rest }) => {\n  const classes = useStyles();\n  const topicselections = ['Algebra', 'Calculus', 'Mga Tula', 'Vocabulary'];\n  const [tutorOption, setTutorOption] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n\n  const handleRadioChange = (event) => {\n    if(event.target.value == 'all-tutors'){\n      data['allTutors'] = true;\n      setTutorOption(true);\n    }else{\n      data['allTutors'] = false;\n      setTutorOption(false);\n    }\n  };\n\n  const handleChange = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    data[nam] = props[nam][val];\n    setData(data)\n  }\n\n  const handleFreeChange = (event, value) => {\n    data['topics'] = value; \n    setData(data)\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Tutoring Details\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card>\n        <CardHeader\n          subheader=\"Input the relevant information\"\n          title=\"Tutoring Details\"\n        />\n        <Divider />\n          <CardContent >\n            <Box>\n              <Grid container spacing={2} >\n                \n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <Grid container spacing={2}>\n\n                    <Grid item xs={12}>  \n                      <FormControl onChange={handleChange} variant=\"outlined\" className={classes.formControl} fullWidth>\n                        <InputLabel>Tutee's Name</InputLabel>\n                        <Select\n                          fullWidth\n                          native\n                          label=\"Child's Name\"\n                          inputProps={{\n                            name: 'tutees',\n                            id: 'tutees',\n                          }}\n                        >\n                        {props.tutees.map((tutee, index) =>\n                          <option value={index}>{tutee.first_name}</option>\n                        )}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n\n                    {/* <Grid item xs={12}>\n                      <Typography variant=\"h5\">\n                        Tutee's Grade Level\n                      </Typography>\n                    </Grid> */}\n\n                    <Grid item xs={12}>\n                      <FormControl onChange={handleChange} variant=\"outlined\" className={classes.formControl} fullWidth>\n                        <InputLabel>Grade Level</InputLabel>\n                        <Select\n                          native\n                          label=\"Grade Level\"\n                          inputProps={{\n                            name: 'year_level',\n                            id: 'year_level',\n                          }}\n                        >\n                        <option value={data['tutees'].year_level}>{data['tutees'].year_level}</option>\n                        </Select>\n                      </FormControl> \n                    </Grid>\n                    <Grid item xs={12}>\n                      \n                      <FormControl onChange={handleChange} variant=\"outlined\" className={classes.formControl} fullWidth>\n                        <InputLabel>Length of Session</InputLabel>\n                        <Select\n                          native\n      \n                          label=\"Length of Session\"\n                          inputProps={{\n                            name: 'lengths',\n                            id: 'lengths',\n                          }}\n                        >\n                          {props.lengths.map((length, index) => \n                            <option value={index}>{length.name}</option>\n                          )}\n                          {/* <option value={10}>1 hour</option>\n                          <option value={20}>1 hour 30 minutes</option>\n                          <option value={10}>2 hours</option> */}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                \n                </Grid>\n\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                <Grid container spacing={2}>\n                  {/* <Grid item xs={12}>\n                      <Typography variant=\"h5\">\n                          Sessions and Tutor Details\n                      </Typography>\n                    </Grid> */}\n                  \n                    <Grid item xs={12}>\n                      <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Tutor Options</FormLabel>\n                        <RadioGroup name=\"tutor-choice\" defaultValue=\"all-tutors\" onChange={handleRadioChange}>\n                          <FormControlLabel value=\"all-tutors\" control={<Radio />} label=\"All Tutors Accepted\" />\n                          <FormControlLabel value=\"fave-tutors\" control={<Radio />} label=\"Favorite Tutors Only\" />\n                          \n                        </RadioGroup>\n                      </FormControl>\n                     \n                    </Grid>\n                    <Grid item xs={12}>\n                      <FormControl onChange={handleChange} variant=\"outlined\" className={classes.formControl} fullWidth disabled={tutorOption}>\n                        <InputLabel>Favorite Tutors</InputLabel>\n                        <Select\n                          native\n      \n                          label=\"Favorite Tutors\"\n                          inputProps={{\n                            name: 'favtutors',\n                            id: 'favtutors',\n                          }}\n                        >\n                          {props.favtutors.map((tutor, index) => \n                            <option value={index}>{tutor}</option>\n                          )}\n                          {/* <option value={10}>Tolo Pena</option>\n                          <option value={20}>Charles Samoy</option> */}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <Grid container spacing={2}>\n                    {/* <Grid item xs={12}>\n                    <Typography variant=\"h5\">\n                        Let us know the subject, topics, and materials\n                    </Typography>\n                    </Grid> */}\n                    <Grid item xs={12}>\n                      <FormControl onChange={handleChange} variant=\"outlined\" className={classes.formControl} fullWidth>\n                        <InputLabel>Subject</InputLabel>\n                        <Select\n                          native\n                          label=\"Subject\"\n                          inputProps={{\n                            name: 'subjects',\n                            id: 'subjects',\n                          }}\n                        >\n                          {props.subjects.map((subject, index) => \n                            <option value={index}>{subject.subject_field}</option>\n                          )}\n                          {/* <option value={10}>Math</option>\n                          <option value={20}>Science</option>\n                          <option value={10}>Filipino</option>\n                          <option value={10}>English</option>\n                          <option value={20}>Chinese</option> */}\n                        </Select>\n                      </FormControl> \n                    </Grid>\n                    <Grid item xs={12}>\n                    {/* <TextField\n                        fullWidth\n                        label=\"Topic/s\"\n                        name=\"topics\"\n                        required\n                        variant=\"outlined\"\n                        helperText=\"(e.g. Algebra, Trigonometry, Vocalubary)\"\n                      /> */}\n                      <Autocomplete\n                        multiple\n                        id=\"tags-filled\"\n                        name='topics'\n                        options={topicselections.map((option) => option)}\n                        freeSolo\n                        variant=\"outlined\"\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField {...params} variant=\"outlined\" label=\"Topic/s\" placeholder=\"Topic\" helperText=\"(e.g. Algebra, Trigonometry, Vocalubary)\"/>\n                        )}\n                        onChange={handleFreeChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12} align='center'>\n                    <Typography variant=\"h6\">\n                        Upload any relevant materials such handouts or slides\n                    </Typography>\n                    <Button variant=\"contained\" color=\"primary\" startIcon={<PublishIcon/>} onClick={() => setOpen(true)}>\n                      Upload Files\n                    </Button>\n                    <DropzoneDialog open={open}\n                      onClose={() => setOpen(false)}\n                    \n                    />\n                      {/* <Button className={classes}  \n                        color=\"primary\"\n                        variant=\"contained\"\n                        startIcon={<PublishIcon/>}>\n                        Upload Files\n                      </Button> */}\n                    </Grid>\n                    \n                    \n                  </Grid>\n                  \n                </Grid>\n                \n                \n \n              </Grid>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nChildDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ChildDetails;\n","import React from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\n// import 'react-day-picker/lib/style.css';\nimport Moment from 'moment';\nimport 'src/CalendarPicker.css'\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDays: [],\n    };\n  }\n\n  handleDayClick(day, { selected }) {\n    const { selectedDays } = this.state;\n    if (selected) {\n      const selectedIndex = selectedDays.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      selectedDays.splice(selectedIndex, 1);\n    } else {\n      selectedDays.push(day);\n    }\n    this.setState({ selectedDays }, () => {\n      this.props.getDays(selectedDays);\n    });\n\n    console.log(day.toLocaleDateString('en-GB'));\n    console.log(Moment(day).format('YYYY-DD-MM'));\n  }\n\n  render() {\n    return (\n      <div>\n        <DayPicker\n          selectedDays={this.state.selectedDays}\n          onDayClick={this.handleDayClick}\n        />\n      </div>\n    );\n  }\n}","import React , {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { Search as SearchIcon } from 'react-feather';\nimport Calendar from './Calendar';\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst Availability = ({ className, data, setData, ...rest }) => {\n  const classes = useStyles();\n  const [days, setDays] = React.useState();\n  const [times, setTimes] = React.useState({\n\n  });\n  const [count, setCount] = React.useState(0);\n\n  useEffect(() => {\n    console.log(count)\n\n  }, [count])\n\n  const getDays=(selectedDays)=>{\n    setTimes(times)\n    console.log(times)\n    data['days'] = selectedDays;\n    setDays(selectedDays);\n    setCount(count + 1);\n  }\n\n  const changeFrom = (index, value) => {\n    if(!(index in times)){\n      times[index] = {}\n    }\n    times[index]['from'] = value;\n    data['times'] = times\n    setTimes(times)\n    setData(data)\n  }\n\n  const changeUntil = (index, value) => {\n    if(!(index in times)){\n      times[index] = {}\n    }\n    times[index]['until'] = value;\n    data['times'] = times\n    setTimes(times)\n    setData(data)\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            subheader=\"You can only book sessions for 2 weeks from now\"\n            title=\"Choose all available dates for the session\"\n          />\n          <Divider />\n          <CardContent >\n            <Box /*maxWidth={1000}*/>\n              <Grid container spacing={2}\n                \n                >\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={12}\n                  style={{justifyContent: 'center', placeItems: 'center', textAlign:'center'}}\n                  alignItems=\"center\"\n                  justify=\"center\"\n\n                >\n                  <Calendar getDays={getDays}/>\n                </Grid>\n                \n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={12}\n                > \n              \n                  <Typography variant=\"h6\" align= 'left' mb={2}>\n                    Write all the available times for the dates\n                  </Typography>\n                  <br/>\n                  {/* <MuiPickersUtilsProvider utils={DateFnsUtils}> */}\n                  \n                  {days != undefined &&\n                  <Grid container spacing={2}>\n                    {days.map(day=>(\n                    <Grid\n                    item\n                    lg={12}\n                    md={12}\n                    xl={12}\n                    xs={12}\n                    > \n                      <Grid container spacing={2}>\n                        <Grid \n                          item \n                          lg={4}\n                          md={4}\n                          xl={4}\n                          xs={12}>\n                            {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <KeyboardDatePicker\n                                  disableToolbar\n                                  variant=\"inline\"\n                                  format=\"MM/dd/yyyy\"\n                                  margin=\"normal\"\n                                  id=\"date-picker-inline\"\n                                  label=\"Date\"\n                                  value=\"11/20/2020\"\n                                  // onChange={handleDateChange}\n                                  KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                  }}\n                                />\n                            </MuiPickersUtilsProvider> */}\n                          <form className={classes.container} noValidate>\n                            <TextField\n                              id=\"date\"\n                              label=\"Date\"\n                              type=\"date\"\n                              format=\"MM/dd/yyyy\"\n                              // defaultValue=\"2017-05-24\"\n                              //day.toLocaleDateString()\n                              value={moment(day).format('YYYY-MM-DD')}\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                \n                            />\n                          </form>\n                        </Grid>\n                        <Grid \n                          item \n                          lg={4}\n                          md={4}\n                          xl={4}\n                          xs={12}>\n                            <form className={classes.container} noValidate>\n                              <TextField\n                                id=\"time\"\n                                label=\"From\"\n                                type=\"time\"\n                                // defaultValue=\"07:30\"\n                                className={classes.textField}\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                inputProps={{\n                                  step: 300, // 5 min\n                                }}\n                                onChange={(event) => changeFrom(day.getTime(), event.target.value)}\n                              />\n                            </form>\n                          {/* <Typography variant=\"h5\" >\n                            From: <input type=\"time\"></input>\n                          </Typography> */}\n                        </Grid>\n                        <Grid \n                          item \n                          lg={4}\n                          md={4}\n                          xl={4}\n                          xs={12}>\n                          <form className={classes.container} noValidate>\n                              <TextField\n                                id=\"time\"\n                                label=\"Until\"\n                                type=\"time\"\n                                // defaultValue=\"07:30\"\n                                className={classes.textField}\n                                InputLabelProps={{\n                                  shrink: true,\n                                }}\n                                inputProps={{\n                                  step: 300, // 5 min\n                                }}\n                                onChange={(event) => changeUntil(day.getTime(), event.target.value)}\n                              />\n                            </form>\n                        </Grid>\n                      </Grid>\n                      \n                    </Grid>\n                    ))}\n                  </Grid>\n                  }\n                  {/* </MuiPickersUtilsProvider> */}\n                  \n                </Grid>\n                \n              </Grid>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nAvailability.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Availability;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst SpecialRequests = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            // subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n            title=\"Write any special request you have\"\n          />\n          <Divider />\n          <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n            <TextField \n            id=\"special-request\" \n            label=\"Special Requests\" \n            variant=\"outlined\" fullWidth\n            multiline\n            rows={4}\n            />\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nSpecialRequests.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SpecialRequests;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  payButton: {\n    width: \"60%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    // paddingTop: \"7%\",\n    // paddingBottom: \"7%\",\n  },\n}));\n\nconst Breakdown = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Grid container spacing={2}>\n        {/* <Grid\n          item\n          lg={3}\n          md={3}\n          xl={3}\n          xs={0}\n          ></Grid> */}\n          <Grid\n          item\n          lg={12}\n          md={12}\n          xl={12}\n          xs={12}\n          >\n            <Box mx=\"auto\" /*mt={3}*/>\n              <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n                <CardHeader\n                  // subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n                  title=\"Breakdown\"\n                />\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Session/s\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        1\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Duration\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        1 hour\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Session No.\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        1234\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  </Box>\n                </CardContent>\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\">\n                          Total\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\" align=\"right\">\n                          P500.00\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </CardContent>\n                \n              </Card>\n            </Box>\n          </Grid> \n\n          {/* <Grid\n          item\n          lg={3}\n          md={3}\n          xl={3}\n          xs={0}\n          ></Grid> */}\n      </Grid>\n    </div>\n  );\n};\n\nBreakdown.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Breakdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n  Select,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst Payment = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            subheader=\"Choose your preferred payment method\"\n            title=\"Payment Methods\"\n          />\n          <Divider />\n          <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n            <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n              <Grid container spacing={2} style={{justifyContent: 'center', placeItems: 'center'}}>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <FormControl variant=\"outlined\" className={classes.formControl} style={{justifyContent: 'center', placeItems: 'center'}}>\n                    <InputLabel>Pay Through</InputLabel>\n                    <Select\n                      fullWidth\n                      native\n  \n                      label=\"Pay Through\"\n                      inputProps={{\n                        name: 'payment-method',\n                        id: 'payment-method',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={10}>Credit Cards  </option>\n                      <option value={20}>Bank Transfers    </option>\n                      <option value={20}>Gcash </option>\n                      <option value={20}>Grab Pay  </option>\n                    \n                    </Select>\n                  </FormControl>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                  </Grid>\n                  <Grid\n                    item\n                    lg={12}\n                    md={12}\n                    xl={12}\n                    xs={12}\n                  >\n                    <Divider />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                    <TextField\n                    \n                      label=\"Credit Card Number\"\n                      name=\"card_number\"\n                      variant=\"outlined\"\n                      // helperText=\"(e.g. Algebra, Trigonometry, Vocalubary)\"\n                      />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                    <TextField\n                    \n                      label=\"Expiry Date\"\n                      placeholder=\"MM/YYYY\"\n                      name=\"exp_date\"\n                      variant=\"outlined\"\n                      // helperText=\"MM/YYYY\"\n                      />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                    <TextField\n                    \n                      label=\"CVV Number\"\n                      name=\"ccvNo\"\n                      variant=\"outlined\"\n                  \n                      />\n                  </Grid>\n                \n              </Grid>\n              {/* <Grid container spacing={2} style={{justifyContent: 'center', placeItems: 'center'}}>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Credit Card\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Bank Transfer\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Gcash\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  GrabPay\n                  </Button>\n                </Grid>\n              </Grid> */}\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nPayment.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Payment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n  Chip,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  payButton: {\n    width: \"60%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    // paddingTop: \"7%\",\n    // paddingBottom: \"7%\",\n  },\n}));\n\nconst Summary = ({ className, data, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Grid container spacing={2}>\n          <Grid\n          item\n          lg={12}\n          md={12}\n          xl={12}\n          xs={12}\n          >\n            <Box mx=\"auto\" /*mt={3}*/>\n              <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n                <CardHeader\n                  // subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n                  title=\"Summary\"\n                />\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Tutee\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['tutees'].first_name}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Grade Level\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['tutees'].year_level}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Subject\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['subjects'].subject_field}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Topic\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['topics'].map(topic => <Chip size=\"small\" color=\"primary\" label={topic} />)}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Files\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['files']}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Length of Session\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['lengths'].name}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Tutor Options\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      {data['allTutors'] ? \n                      <Typography variant=\"h5\" align=\"right\">\n                        All Tutors\n                      </Typography>\n                      :\n                      <Typography variant=\"h5\" align=\"right\">\n                        Favorite Tutors Only\n                      </Typography>\n                      }\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Favorite Tutor\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['favTutor']}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Available Dates\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {Object.keys(data['times']).map(time => (\n                          // <Chip label={(day.getMonth()+1)+'/'+(day.getDay())+'/'+day.getFullYear()}/>\n                          <Chip color=\"primary\" size=\"small\" label={moment((new Date(Number(time)))).format('MMM Do')}/>\n                        ))}\n                        {/* <Chip label=\"27/11/20 2:00pm-4:00pm\" /> */}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Special Request\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h5\" align=\"right\">\n                        {data['specialRequest']}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  </Box>\n                </CardContent>\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\">\n                          Current Hours Credits\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\" align=\"right\">\n                          {data['credits']}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\">\n                          Hours Deducted\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\" align=\"right\">\n                          -{data['lengths'].value}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </CardContent>\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\">\n                          Hours Left\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\" align=\"right\">\n                          {data['credits'] - data['lengths'].value}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Box>\n          </Grid> \n\n      </Grid>\n    </div>\n  );\n};\n\nSummary.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Summary;\n","import axios from 'axios';\nimport jwt from 'jwt-decode';\n\n// const api_url = 'https://akadsph-staging.herokuapp.com'\nconst api_url = 'https://akadsph-backend.herokuapp.com'\nconst username = 'admin'\nconst password = 'password'\n// const api_url = 'http://127.0.0.1:8000'\nconst paymongo_public = 'pk_test_LiBiYthx1D36hQYVcPSRB2MJ'\n// axios.defaults.withCredentials = true;\n\nconst get_token = (_callback) => {\n  localStorage.clear()\n  const data = {\n    'username': username,\n    'password': password\n  }\n  axios.post(api_url+'/'+'api-token-auth'+'/', data)\n  .then(res => {\n    localStorage.setItem('token',res.data.token)\n    _callback(true)\n  }).catch(err => {\n    _callback(false)\n  })\n}\n\nexport const check_admin_token = (_callback) => {\n  const token = localStorage.getItem('token')\n  const timestamp = Number(Date.now());\n  if(token == null){\n    get_token((res) => {\n      _callback(res)\n    })\n  }else{\n    const token_data = jwt(token)\n    const expiry = Number(token_data['exp']) * 1000\n    if(timestamp > expiry){\n      get_token((res) => {\n        _callback(res)\n      })\n    }\n    _callback(true)\n  }\n}\n\n\nexport const verify_token = (_callback) => {\n  const headers = {\n    'Authorization': 'JWT '+localStorage.getItem('token'), \n    'Content-Type': 'application/json'\n  }\n\n  var axios = require('axios');\n  var token = localStorage.getItem('session_token')\n  var data = JSON.stringify({\n    'session_token': token\n  });\n  \n  var config = {\n    method: 'post',\n    url: api_url+'/'+'tokeninfo'+'/',\n    headers: headers, \n    data : data\n  };\n  \n  axios(config)\n  .then(function (response) {\n    _callback(response.data)\n  })\n  .catch(function (error) {\n    _callback({\n      'verified': false\n    })\n  });\n\n}\n\n\nexport const get_api = (url, _callback) => {\n  const headers = {\n    'Authorization': 'JWT '+localStorage.getItem('token'), \n    'Content-Type': 'application/json'\n  }\n\n  axios.get(api_url+'/'+url+'/',{\n    headers\n  })\n  .then(res => {\n    _callback(res.data)\n  })\n}\n\nexport const post_api = (url, raw_data, _callback) => {\n  const headers = {\n    'Authorization': 'JWT '+localStorage.getItem('token'), \n    'Content-Type': 'application/json'\n  }\n\n  var axios = require('axios');\n  var data = JSON.stringify(raw_data);\n  \n  var config = {\n    method: 'post',\n    url: api_url+'/'+url+'/',\n    headers, \n    data : data\n  };\n  \n  axios(config)\n  .then(function (response) {\n    _callback(response.data)\n  })\n  .catch(function (error) {\n    console.log(error.response);\n  });\n  \n}\n\nexport const get_user = (_callback) => {\n  const data = jwt(localStorage.getItem('session_token'))\n  _callback(data)\n}\n\nexport const api = (url, method, raw_data, _callback) => {\n  verify_token()\n\n}\n\nexport const checkout = (amount, card_number, exp_date, cvc, _callback) => {\n  create_paymentintent(amount, (payment_intent) => {\n    const exp_month = exp_date.split('/')[0] \n    const exp_year = exp_date.split('/')[1] \n    create_paymentmethod(card_number, exp_month, exp_year, cvc, (payment_method) =>  {\n      console.log(payment_method)\n      const payment_method_id = payment_method['data']['id']\n      attach_payment(payment_intent, payment_method_id, (res) => {\n        _callback(res)\n      });\n    });\n  });\n}\n\nexport const create_paymentintent = (amount, _callback) => {\n  get_user((res) => {\n    const id = res['id']\n    const data = {\n      'parent_id':id,\n      'amount':amount\n    }\n    post_api('paymongo', data, (res) => {\n      _callback(res)\n    })\n\n  })\n}\n\nexport const create_paymentmethod = (card_number, exp_month, exp_year, cvc, _callback) => {\n  var axios = require('axios');\n  var data = JSON.stringify({\"data\":{\"attributes\":{\"details\":{\"card_number\":\"4343434343434345\",\"exp_month\":7,\"exp_year\":2025,\"cvc\":\"545\"},\"type\":\"card\"}}});\n  \n  var config = {\n    method: 'post',\n    url: 'https://api.paymongo.com/v1/payment_methods',\n    headers: { \n      'Authorization': 'Basic cGtfdGVzdF9MaUJpWXRoeDFEMzZoUVlWY1BTUkIyTUo6', \n      'Content-Type': 'application/json'\n    },\n    data : data\n  };\n  \n  axios(config)\n  .then(function (response) {\n    _callback(response.data)\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n\n}\n\nexport const attach_payment = (payment_intent, payment_method, _callback) => {\n  var paymentMethodId = payment_method;\n\n  var clientKey = payment_intent;\n\n  // Get the payment intent id from the client key\n  var paymentIntentId = payment_intent.split('_client')[0];\n\n  console.log(paymentMethodId)\n  console.log(clientKey)\n  console.log(paymentIntentId)\n  \n  axios.post(\n    'https://api.paymongo.com/v1/payment_intents/' + paymentIntentId + '/attach/',\n    {\n      data: {\n        attributes: {\n          client_key: clientKey,\n          payment_method: paymentMethodId,\n        }\n      }\n    },\n    {\n      headers: { \n        'Authorization': 'Basic cGtfdGVzdF9MaUJpWXRoeDFEMzZoUVlWY1BTUkIyTUo6'\n      },\n    }\n  ).then(function(response) {\n    console.log(response)\n    var paymentIntent = response.data.data;\n    var paymentIntentStatus = paymentIntent.attributes.status;\n    \n    if (paymentIntentStatus === 'awaiting_next_action') {\n      console.log('wait')\n      // Render your modal for 3D Secure Authentication since next_action has a value. You can access the next action via paymentIntent.attributes.next_action.\n    } else if (paymentIntentStatus === 'succeeded') {\n      console.log('success')\n      get_user((res) => {\n        const id = res['id']\n        const data = {\n          'parent_id': id,\n          'client_key': clientKey,\n          'payment_intent': paymentIntentId\n        }\n        post_api('verify-paymongo', data, (res) => {\n          console.log(res)\n          _callback(res)\n        })\n      })\n\n      // You already received your customer's payment. You can show a success message from this condition.\n    } else if(paymentIntentStatus === 'awaiting_payment_method') {\n      console.log('await')\n      // The PaymentIntent encountered a processing error. You can refer to paymentIntent.attributes.last_payment_error to check the error and render the appropriate error message.\n    }  else if (paymentIntentStatus === 'processing'){\n      console.log('processing')\n      // You need to requery the PaymentIntent after a second or two. This is a transitory status and should resolve to `succeeded` or `awaiting_payment_method` quickly.\n    }\n  }).catch(err => {\n    console.log(err)\n    console.log(err.response)\n    _callback(false)\n  })\n}","import React, { Component } from \"react\";\nimport {\n  Container,\n  Box,\n  CircularProgress,\n  Backdrop,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nfunction Loading(props) {\n  const classes = useStyles();\n\n    return (\n      <Backdrop className={classes.backdrop} open={props.processing}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"md\">\n            <Box mb={4} textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Loading...\"\n                src=\"/img/backdrop-logo.png\"\n              />\n            </Box>\n            <Box textAlign=\"center\">\n              <CircularProgress color=\"inherit\" />\n            </Box>\n            {/* <h2 align=\"center\">\n              Loading...\n            </h2> */}\n          </Container>\n        </Box>\n      </Backdrop>\n    );\n}\n\nexport default Loading;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Typography,\n  Grid,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Snackbar,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport Bundle from './Bundle';\nimport ChildDetails from './ChildDetails';\nimport Availability from './Availability';\nimport SpecialRequests from './SpecialRequests';\nimport Payment from './Payment';\nimport Breakdown from './Breakdown';\nimport Summary from './Summary';\nimport {get_user, post_api} from 'src/Api'\nimport LoadingBack from 'src/components/loadingBack';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  nextButton: {\n    placeItems: \"center\",\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    width: \"30vh\",\n    padding: \"1%\"\n   \n  },\n  backButton: {\n    // backgroundColor: \"white\",\n    // color: theme.palette.primary,\n    // textColor: theme.palette.primary,\n    // border: \"10px solid theme.palette.primary\",\n    // borderColor: theme.palette.primary,\n    // // marginRight: theme.spacing(1)\n    // \"&:hover\": {\n    //   backgroundColor: theme.palette.primary,\n    // }\n  },\n}));\n\n\n\n\nconst CustomerListView = (props) => {\n  const classes = useStyles();\n  const [detailsDone, setDetailsDone] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const [processing, setProcessing] = React.useState(false);\n  const [returnMessage, setMessage] = React.useState('');\n  const [data, setData] = React.useState({\n    tutees: props.tutees[0],\n    subjects: props.subjects[0],\n    lengths: props.lengths[0],\n    topics: [],\n    times: [],\n    favTutor: [],\n    files: [],\n    specialRequest: '',\n    allTutors: true,\n    credits: props.credits,\n  });\n\n  const handleChangeNext = (event) => {\n    setDetailsDone(!detailsDone);\n  };\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n  const submitData = () => {\n    setOpen(false);\n    setProcessing(true);\n    get_user((res) => {\n      const id = res['id']\n      const available_days = []\n      Object.keys(data['times']).forEach(time => {\n        const fromDay = new Date(Number(time))\n        const untilDay = new Date(Number(time))\n        const from = data['times'][time].from.split(':')\n        const until = data['times'][time].until.split(':')\n        fromDay.setUTCHours(Number(from[0]), Number(from[1]))\n        untilDay.setUTCHours(Number(until[0]), Number(until[1]))\n        available_days.push({\n          'start_date_time': fromDay,\n          'end_date_time': untilDay,\n          'time': data['lengths'].value,\n        })\n      })\n      const postData = {\n        'parent_id': id,\n        'child_id': data['tutees'].id,\n        'extra_files': '',\n        'is_favourite': !data['allTutors'],\n        'subject': data['subjects'].id,\n        'topics': data['topics'].join(),\n        'special_request': 'None',\n        'available_days': available_days,\n        'fav_tutor': null,\n        'time': data['lengths'].value,\n      }\n      post_api('parent-make-request', postData, (res) => {\n        console.log(res)\n        if(res['return_status'] == 'success'){\n          setMessage(res['return_message']);\n          setSuccess(true);\n        }else if(res['return_status'] == 'error'){\n          setMessage(res['return_message']);\n          setError(true);\n        }\n        setProcessing(false);\n      })\n    })\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Request A Tutor\" \n    >\n      <Container maxWidth={false}>\n        {/* <Toolbar /> */}\n        <Box mb={2}>\n          <Typography variant=\"h1\" align='left'>\n            Find A Tutor\n          </Typography>\n        </Box>\n        {!detailsDone ? \n        <React.Fragment>\n          <Snackbar open={success} autoHideDuration={6000} onClose={() => setSuccess(false)}>\n            <Alert onClose={() => setSuccess(false)} severity=\"success\">\n              {returnMessage}\n            </Alert>\n          </Snackbar>\n          <Snackbar open={error} autoHideDuration={6000} onClose={() => setError(false)}>\n            <Alert onClose={() => setError(false)} severity=\"error\">\n              {returnMessage}\n            </Alert>\n          </Snackbar>\n          <LoadingBack processing={processing}/>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              {/* <Bundle/> */}\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              <ChildDetails data={data} setData={setData} props={props}/>\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              <Availability data={data} setData={setData}/>\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              <SpecialRequests data={data} setData={setData}/>\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n              align='right'\n            >\n              <Button className={classes.nextButton}  \n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleClickOpen}\n                >\n                  Submit Request\n              </Button>\n            \n              <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">{\"Tutor Request Confirmation\"}</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      <Summary data={data}/>\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                      Cancel\n                    </Button>\n                    <Button onClick={submitData} color=\"primary\" autoFocus>\n                      Send Request\n                    </Button>\n                  </DialogActions>\n              </Dialog>\n            </Grid>\n          </Grid>\n        </React.Fragment>\n        : \n        \n        <React.Fragment>\n          <Grid container spacing={2}>\n            <Grid item \n                xs={12}\n            >\n              <Breakdown/>\n            </Grid>\n            <Grid item \n              xs={12}\n            >\n              {/* <Payment/> */}\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container spacing={0}>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={0}\n                  xs={0}\n                  ></Grid>\n                <Grid item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={6}\n                  >\n                  \n                  <Button className={classes.backButton}  \n                    color=\"primary\"\n                    \n                    onClick={handleChangeNext}\n                    variant=\"outlined\"\n                    >\n                    Back\n                  </Button>\n                  \n                  {/* <Box component='span' m={2}>\n                    <Button className={classes.nextButton}  \n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={handleClickOpen}\n                    >\n                    Submit\n                  </Button>\n                  <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                  >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Transaction Complete!\"}</DialogTitle>\n                    <DialogContent>\n                      <DialogContentText id=\"alert-dialog-description\">\n                        Please wait for a tutor to accept your request. You will receive a notification once it has been accepted. Thank you!\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                      </Button>\n                      <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Done\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                  </Box> */}\n                </Grid> \n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={6}\n                  align='right'\n                  >\n                    <Button className={classes.payButton}  \n                      color=\"primary\"\n                      variant=\"contained\"\n                      \n                      align='right'\n                      onClick={handleClickOpen}\n                      >\n                      Pay Now\n                    </Button>\n                    \n                </Grid>\n              </Grid>\n            </Grid>\n          \n            \n          </Grid>\n        </React.Fragment>\n        }\n        {/* <Box mt={3}>\n          <Results customers={customers} />\n        </Box> */}\n      </Container>\n    </Page>\n  );\n};\n\nexport default CustomerListView;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              BUDGET\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $24,000\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Order Ref\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Date\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>\n                    {order.ref}\n                  </TableCell>\n                  <TableCell>\n                    {order.customer.name}\n                  </TableCell>\n                  <TableCell>\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      color=\"primary\"\n                      label={order.status}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst useStyles = makeStyles(({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n}));\n\nconst LatestProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [products] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest Products\"\n      />\n      <Divider />\n      <List>\n        {products.map((product, i) => (\n          <ListItem\n            divider={i < products.length - 1}\n            key={product.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src={product.imageUrl}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RequestSummary from './RequestSummary';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalConfRequest = ({open, setOpen, date, time, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    // fullWidth={true}\n    // maxWidth={'md'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Details Confirmation\"}</DialogTitle>\n        <DialogContent >\n          <Box mx={8}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Student\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Rolo Pena\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Subject\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Math\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Topic\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Algebra\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Duration\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  1 hour\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Special Request\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  None\n                </Typography>\n              </Grid>\n            </Grid>\n            <Box mt={8} mb={2}>\n              <Grid container spacing={2}>\n                <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                      Date\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='right'>\n                      {date}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                    Time\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='right'>\n                    {time}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </DialogContent>\n        \n        \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Confirm\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalConfRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalConfRequest;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RequestSummary from './RequestSummary';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ModalConfRequest from './ModalConfRequest'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"100vh\",\n  },\n}));\n\nconst ModalRequest = ({open, setOpen, /*setOpenConf,*/ rows, className, ...rest }) => {\n  const classes = useStyles();\n  const [openConf, setOpenConf] = React.useState(false);\n  const [time, setTime] = React.useState('');\n  const [date, setDate] = React.useState('1');\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAccept = () => {\n    setOpen(false);\n    setOpenConf(true);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setDate(event.target.value);\n  };\n\n  const handleChangeTime = (event) => {\n    setTime(event.target.value);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  const onChange = (event) => {\n    console.log(event.target.value)\n  }\n\n  return (\n    <React.Fragment>\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    fullWidth={true}\n    maxWidth={'md'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Request\"}</DialogTitle>\n        <DialogContent >\n          {/* <RequestSummary rows={rows}/> */}\n          {/* <Typography variant=\"body1\" mb={2}  mt={3}>\n            Special Request: None\n          </Typography> */}\n          <Grid container>\n            <Grid item xs={8}>\n\n            <Box mx={8}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Parent\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Joshua Manzano\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Student\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Rolo Pena\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Subject\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Math\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Topic\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Algebra\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Duration\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  1 hour\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Special Request\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  None\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n\n            </Grid>\n            <Grid item xs={4}>\n\n            <FormControl onChange={onChange} component=\"fieldset\" >\n              <FormLabel component=\"legend\">Available Schedules</FormLabel>\n              <RadioGroup aria-label=\"sched-date\" name=\"sched-date\" onChange={handleChange}>\n                <FormControlLabel value=\"December 1st\" control={<Radio />} label=\"December 1st, 2:00PM - 4:00PM\" />\n                <FormControlLabel value=\"December 2nd\" control={<Radio />} label=\"December 2nd, 1:00PM - 3:00PM\" />\n              </RadioGroup>\n            </FormControl>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Start Time</InputLabel>\n              \n                  { date == \"December 1st\" ?\n                    <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    onChange={handleChangeTime}\n                    label=\"Start Time\"\n                    value={time}\n                  >\n                    <MenuItem value={\"2:00PM - 3:00PM\"}>2:00PM</MenuItem>\n                    <MenuItem value={\"2:30PM - 3:30PM\"}>2:30PM</MenuItem>\n                    <MenuItem value={\"3:00PM - 4:00PM\"}>3:00PM</MenuItem>\n                    </Select>\n                   :\n                    <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      onChange={handleChangeTime}\n                      label=\"Start Time\"\n                      value={time}\n                    >\n                    <MenuItem value={\"1:00PM - 2:00PM\"}>1:00PM</MenuItem>\n                    <MenuItem value={\"1:30PM - 2:30PM\"}>1:30PM</MenuItem>\n                    <MenuItem value={\"2:00PM - 3:00PM\"}>2:00PM</MenuItem>\n                    </Select>\n                  \n                  }\n            \n\n              </FormControl>\n\n            </Grid>\n          </Grid>\n \n        </DialogContent>\n        \n        \n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleAccept} color=\"primary\" autoFocus>\n              Accept\n          </Button>\n        </DialogActions>\n    </Dialog>\n    <ModalConfRequest open={openConf} setOpen={setOpenConf} time={time} date={date}/>\n    </React.Fragment>\n  );\n};\n\nModalRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalRequest;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  rootRate: {\n    // width: 200,\n    display: 'flex',\n  },\n}));\n\nconst FaveTutorDecline = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Reason for Declining Session\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <DialogContentText> \n            <Typography variant=\"h6\" align=\"center\" mb={5}>\n              (for fave tutors only)\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\" mb={5}>\n              Session Declined\n            </Typography>\n          </DialogContentText> \n\n          <Box my={5}>\n            <TextField \n              id=\"reason\" \n              label=\"Reason\" \n              variant=\"outlined\" fullWidth\n              multiline\n              rows={4}\n              placeholder=\"Optional\"\n              />\n          </Box>\n            \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Confirm\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nFaveTutorDecline.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FaveTutorDecline;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport StarIcon from '@material-ui/icons/Star';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PageviewIcon from '@material-ui/icons/Pageview';\n\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ModalRequest from './ModalRequest';\nimport ModalConfRequest from './ModalConfRequest';\nimport FaveTutorDecline from './FaveTutorDecline';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\n\nimport { useConfirm } from 'material-ui-confirm';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n  \n  \n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const confirm = useConfirm();\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n  \n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const tableHeaders = props.tableHeaders;\n  const tableRows = props.tableRows;\n  const rows = props.tableRows;\n  // const sessionType = props.sessionType;\n  const tableType = props.type;\n  const [openRequest, setOpenRequest] = React.useState(false);\n \n  const [openDecline, setModalDecline] = React.useState(false);\n  const confirm = useConfirm()\n\n  const setDecline = () => {\n    confirm({ title:'Confirm Decline' , description: 'Are you sure you would like to decline this session?' })\n      .then(() => {\n      })\n      .catch(() => {\n      });\n  }\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const renderHeaders =()=>{\n  \n    const headerLabels = tableHeaders.map((label, index)=>(\n      label === \"Date\" ?\n          <TableCell sortDirection=\"desc\">\n            <Tooltip\n                enterDelay={300}\n                title=\"Sort\"\n            >\n                <TableSortLabel\n                active\n                direction=\"desc\"\n                >\n                Date\n                </TableSortLabel>\n            </Tooltip>\n          </TableCell>\n        :\n          <TableCell>\n            {label}\n          </TableCell>\n        \n    ))\n\n\n    return (<TableRow>{headerLabels}</TableRow>)\n\n  };\n\n  const renderRows = () =>{\n    \n    if(tableRows != undefined){\n      if(tableType == \"requests\"){\n          const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((request, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={request.id}\n              >\n                  <TableCell>\n                  {request.subject}\n                  </TableCell>\n                  <TableCell>\n                  {request.topic}\n                  </TableCell>\n                  <TableCell>\n                  {request.duration}\n                  </TableCell>\n                  <TableCell>\n                  {request.student}\n                  </TableCell>\n                  \n                  {tableType == \"history\" ?  \n                    <React.Fragment>\n                     \n                      <TableCell>\n                        {request.parent}\n                      </TableCell> \n                      </React.Fragment>\n                    : \n                    console.log()\n                  }\n\n                  {tableType == \"requests\" ? \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary' onClick={() => setOpenRequest(true)} startIcon={<PageviewIcon/>}>View</Button>\n                      </Box>\n                      <ModalRequest open={openRequest} rows={rows} setOpen={setOpenRequest} /*setOpenConf={setOpenConf}*//> \n                      \n                      <Box mx={1} component='span'>\n                      <Button variant='outlined' color='secondary' startIcon={<CancelIcon/>} onClick={() => setDecline()}>Decline</Button>\n                      </Box>\n                      <FaveTutorDecline open={openDecline} setOpen={setDecline}/>\n                  </TableCell>\n                  :\n                 \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary' startIcon={<FeedbackIcon/>}>Give Feedback</Button>\n                      </Box>\n                  </TableCell>\n                  }\n              </TableRow>\n          );\n          })\n\n        return rowsResult\n        \n      }else if(tableType == \"transaction\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((transaction, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={transaction.id}\n              >\n                  <TableCell>\n                  {transaction.date}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.time}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.subject}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.student}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.parent}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.amount}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.sessionNo}\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }\n      \n    }\n\n    // if(rowsResult != undefined){\n    //   return (<TableRow>{rowsResult}</TableRow>)\n    // }\n    \n      // {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n      //   .map((session, index) => {\n      //   return (\n      //       <TableRow\n      //           hover\n      //           key={session.id}\n      //       >\n      //           <TableCell>\n      //           {session.date}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.time}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.subject}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.tutor.name}\n      //           </TableCell>\n      //           <TableCell>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>View</Button>\n      //               </Box>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>Chat</Button>\n      //               </Box>\n      //           </TableCell>\n      //       </TableRow>\n      //   );\n      //   })\n      // }\n  };\n\n  return (\n    <div className={classes.root}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size={dense}\n          >\n            <TableHead>\n                {renderHeaders()}\n\n                {/* <TableRow>\n                    <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                        enterDelay={300}\n                        title=\"Sort\"\n                    >\n                        <TableSortLabel\n                        active\n                        direction=\"desc\"\n                        >\n                        Date\n                        </TableSortLabel>\n                    </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                    Time\n                    </TableCell>\n                    <TableCell>\n                    Subject\n                    </TableCell>\n                    <TableCell>\n                    Tutor\n                    </TableCell>\n                    <TableCell>\n                    </TableCell>\n                </TableRow> */}\n            </TableHead>\n            <TableBody>\n              {renderRows()}\n                {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((session, index) => {\n                    return (\n                        <TableRow\n                            hover\n                            key={session.id}\n                        >\n                            <TableCell>\n                            {session.date}\n                            </TableCell>\n                            <TableCell>\n                            {session.time}\n                            </TableCell>\n                            <TableCell>\n                            {session.subject}\n                            </TableCell>\n                            <TableCell>\n                            {session.tutor.name}\n                            </TableCell>\n                            <TableCell>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>View</Button>\n                                </Box>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>Chat</Button>\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    );\n                    })\n                } */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[3]}\n          component=\"div\"\n          count={tableRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    subject: \"Math\",\n    topic: \"Algebra\",\n    duration: \"1 hour\",\n    student: \"Rolo Pena\"\n  },\n \n]\n\nconst headers = [\"Subject\", \"Topic\", \"Duration\", \"Student\", \"Files\"]\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    // <Card\n    //   className={clsx(classes.root, className)}\n    //   {...rest}\n    // >\n    //   <CardHeader\n    //     title=\"Upcoming Sessions\"\n    //   />\n    //   <Divider />\n    //   <CardContent>\n        <Table tableHeaders={headers} tableRows={rows}/>\n    //   </CardContent>\n    // </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RequestSummary from '../../RequestPage/RequestSummary';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalConfRequest = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    // fullWidth={true}\n    // maxWidth={'md'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Details\"}</DialogTitle>\n        <DialogContent >\n          <Box mx={8}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Student\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Rolo Pena\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Subject\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Math\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Topic\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Algebra\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Duration\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  1 hour\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Special Request\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  None\n                </Typography>\n              </Grid>\n            </Grid>\n            <Box mt={8} mb={2}>\n              <Grid container spacing={2}>\n                <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                      Date\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='right'>\n                      December 3, 2020\n                    </Typography>\n                  </Grid>\n                  <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                    Time\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='right'>\n                    2:00PM - 3:00PM\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </DialogContent>\n{/*         \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Confirm\n          </Button>\n        </DialogActions> */}\n    </Dialog>\n  );\n};\n\nModalConfRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalConfRequest;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport StarIcon from '@material-ui/icons/Star';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PageviewIcon from '@material-ui/icons/Pageview';\n\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport Grid from '@material-ui/core/Grid';\nimport CastForEducationIcon from '@material-ui/icons/CastForEducation';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  // DialogTitle,\n} from '@material-ui/core';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ModalSessionDetails from './ModalSessionDetails';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n  const rows = [\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Math',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Science',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'LoL',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n  ]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  \n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n  const tableHeaders = props.tableHeaders;\n  const tableRows = props.tableRows;\n  const sessionType = props.sessionType;\n  const tableType = props.type;\n  const [open, setOpen] = React.useState(false);\n  const [openSessionDets, setOpenSessionDets] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <Typography variant=\"h4\">{children}</Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  });\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const renderHeaders =()=>{\n  \n    const headerLabels = tableHeaders.map((label, index)=>(\n      label === \"Date\" ?\n          <TableCell sortDirection=\"desc\">\n            <Tooltip\n                enterDelay={300}\n                title=\"Sort\"\n            >\n                <TableSortLabel\n                active\n                direction=\"desc\"\n                >\n                Date\n                </TableSortLabel>\n            </Tooltip>\n          </TableCell>\n        :\n          <TableCell>\n            {label}\n          </TableCell>\n        \n    ))\n\n\n    return (<TableRow>{headerLabels}</TableRow>)\n\n  };\n\n  const renderRows = () =>{\n    \n    if(tableRows != undefined){\n      if(tableType == \"session\"){\n          const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((session, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={session.id}\n              >\n                  {sessionType != \"upcoming/pending\" ?\n                    <TableCell>\n                    {session.date}\n                    </TableCell>\n                  :\n                    <React.Fragment></React.Fragment>\n                  }\n                  <TableCell>\n                  {session.time}\n                  </TableCell>\n                  <TableCell>\n                  {session.subject}\n                  </TableCell>\n                  <TableCell>\n                  {session.tutor.name}\n                  </TableCell>\n                  \n                  {sessionType == \"history\" ?  \n                    \n                    <TableCell>\n                        {session.student}\n                    </TableCell> \n                    : \n                    console.log()\n                  }\n\n                  {sessionType == \"upcoming/pending\" ? \n                    <React.Fragment>\n                    {session.date == \"November 19\" ? \n                      <React.Fragment>\n                        <TableCell>\n                            <Grid container spacing={1}>\n                              <Grid item xs={4}>\n                                <Button variant='outlined' color='primary' onClick={handleClickOpen}startIcon={<CastForEducationIcon/>}>Join</Button>\n                              </Grid>\n                              <Dialog\n                                open={open}\n                                onClose={handleClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                                \n                                >\n                                  <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"\"}</DialogTitle>\n                                  <DialogContent>\n                                    <Box align='center' mb={2}>\n                                    <img width='100' src='../static/images/oli-happy.png'></img>\n                                    </Box>\n                                    <DialogContentText id=\"alert-dialog-description\" align='center'>\n                                      Your tutorial session is about to start!<br/>Join the call now.\n                                    </DialogContentText>\n                                  </DialogContent>\n                                  <DialogActions>\n                                    <Button onClick={handleClose} color=\"primary\">\n                                      Cancel\n                                    </Button>\n                                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                                      Join Session\n                                    </Button>\n                                  </DialogActions>\n                              </Dialog>\n                              <Grid item xs={4}>\n                                <Button variant='outlined' color='primary' startIcon={<PageviewIcon/>} onClick={() => setOpenSessionDets(true)}>View</Button>\n                                <ModalSessionDetails open={openSessionDets} setOpen={setOpenSessionDets}/>\n                              </Grid>\n                              <Grid item xs={4}>\n                                <Button variant='outlined' color='primary' href='/#/messages' startIcon={<ForumIcon/>}>Chat</Button>\n                              </Grid>\n                            </Grid>\n                            \n                        </TableCell>\n                      </React.Fragment>\n                    : \n                      <React.Fragment>\n                        <TableCell>\n                            <Grid container spacing={1}>\n                              <Grid item xs={4}>\n                                {/* <Button variant='outlined' color='primary' onClick={handleClickOpen}startIcon={<CastForEducationIcon/>}>Join</Button> */}\n                              </Grid>\n                              <Grid item xs={4}>\n                              <Button variant='outlined' color='primary' startIcon={<PageviewIcon/>} onClick={() => setOpenSessionDets(true)}>View</Button>\n                                <ModalSessionDetails open={openSessionDets} setOpen={setOpenSessionDets}/>\n                              </Grid>\n                              <Grid item xs={4}>\n                                <Button variant='outlined' color='primary' href='/#/messages' startIcon={<ForumIcon/>}>Chat</Button>\n                              </Grid>\n                            </Grid>\n                            \n                        </TableCell>\n                      </React.Fragment>\n                    }\n                    </React.Fragment>\n                  :\n                 \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary' startIcon={<StarIcon/>}>Add to Favorites List</Button>\n                      </Box>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary' startIcon={<FeedbackIcon/>}>Give Feedback</Button>\n                      </Box>\n                  </TableCell>\n                  }\n              </TableRow>\n          );\n          })\n\n        return rowsResult\n        \n      }else if(tableType == \"transaction\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((transaction, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={transaction.id}\n              >\n                  <TableCell>\n                  {transaction.date}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.time}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.subject}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.tutor.name}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.amount}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.sessionNo}\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }\n      \n    }\n\n    // if(rowsResult != undefined){\n    //   return (<TableRow>{rowsResult}</TableRow>)\n    // }\n    \n      // {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n      //   .map((session, index) => {\n      //   return (\n      //       <TableRow\n      //           hover\n      //           key={session.id}\n      //       >\n      //           <TableCell>\n      //           {session.date}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.time}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.subject}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.tutor.name}\n      //           </TableCell>\n      //           <TableCell>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>View</Button>\n      //               </Box>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>Chat</Button>\n      //               </Box>\n      //           </TableCell>\n      //       </TableRow>\n      //   );\n      //   })\n      // }\n  };\n\n  return (\n    <div className={classes.root}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size={dense}\n          >\n            <TableHead>\n                {renderHeaders()}\n\n                {/* <TableRow>\n                    <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                        enterDelay={300}\n                        title=\"Sort\"\n                    >\n                        <TableSortLabel\n                        active\n                        direction=\"desc\"\n                        >\n                        Date\n                        </TableSortLabel>\n                    </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                    Time\n                    </TableCell>\n                    <TableCell>\n                    Subject\n                    </TableCell>\n                    <TableCell>\n                    Tutor\n                    </TableCell>\n                    <TableCell>\n                    </TableCell>\n                </TableRow> */}\n            </TableHead>\n            <TableBody>\n              {renderRows()}\n                {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((session, index) => {\n                    return (\n                        <TableRow\n                            hover\n                            key={session.id}\n                        >\n                            <TableCell>\n                            {session.date}\n                            </TableCell>\n                            <TableCell>\n                            {session.time}\n                            </TableCell>\n                            <TableCell>\n                            {session.subject}\n                            </TableCell>\n                            <TableCell>\n                            {session.tutor.name}\n                            </TableCell>\n                            <TableCell>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>View</Button>\n                                </Box>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>Chat</Button>\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    );\n                    })\n                } */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[3]}\n          component=\"div\"\n          count={tableRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Math',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Science',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Time\", \"Subject\", \"Tutor\", \"\"]\n\nconst sessionType = \"upcoming/pending\"\n\nconst type = \"session\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Upcoming = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const className = props.className;\n  const rest = props.rest;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Upcoming Sessions\"\n      />\n      <Divider />\n      {(rows).length != 0 ? \n        <React.Fragment>\n          <CardContent>\n            <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n          </CardContent>\n        </React.Fragment>\n      :\n        <React.Fragment>\n          <Box m={6}>\n            <Typography variant='h3' align='center'>\n              No upcoming sessions\n            </Typography>\n          </Box>\n        </React.Fragment>\n      }\n    </Card>\n  );\n};\n\nexport default Upcoming;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Typography,\n  Box,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table'\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Tutor\", \"\"]\n\nconst sessionType = \"upcoming/pending\"\n\nconst type = \"session\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, rows, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={(\n        //   <Button\n        //     endIcon={<ArrowDropDownIcon />}\n        //     size=\"small\"\n        //     variant=\"text\"\n        //   >\n        //     Last 7 days\n        //   </Button>\n        // )}\n        title=\"Pending Requests\"\n      />\n      <Divider />\n      {(rows).length != 0 ? \n        <React.Fragment>\n          <CardContent>\n            <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n          </CardContent>\n        </React.Fragment>\n      :\n        <React.Fragment>\n          <Box m={6}>\n            <Typography variant='h3' align='center'>\n              No pending requests\n            </Typography>\n          </Box>\n        </React.Fragment>\n      }\n  \n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string,\n  rows: PropTypes.array\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Typography,\n  Box,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table'\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Tutor\", \"Student\", \"\"]\n\nconst sessionType = \"history\"\n\nconst type = \"session\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, rows, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={(\n        //   <Button\n        //     endIcon={<ArrowDropDownIcon />}\n        //     size=\"small\"\n        //     variant=\"text\"\n        //   >\n        //     Last 7 days\n        //   </Button>\n        // )}\n        title=\"Session History\"\n      />\n      <Divider />\n      {(rows).length != 0 ? \n        <React.Fragment>\n          <CardContent>\n            <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n          </CardContent>\n        </React.Fragment>\n      :\n        <React.Fragment>\n          <Box m={6}>\n            <Typography variant='h3' align='center'>\n              No past sessions\n            </Typography>\n          </Box>\n        </React.Fragment>\n      }\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string,\n  rows: PropTypes.array\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table'\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Tutor\", \"Amount\", \"Session Number\"]\n\nconst sessionType = \"N/A\"\n\nconst type = \"transaction\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, rows, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={(\n        //   <Button\n        //     endIcon={<ArrowDropDownIcon />}\n        //     size=\"small\"\n        //     variant=\"text\"\n        //   >\n        //     Last 7 days\n        //   </Button>\n        // )}\n        title=\"Transactions\"\n      />\n      <Divider />\n      {(rows).length != 0 ? \n        <React.Fragment>\n          <CardContent>\n            <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n          </CardContent>\n        </React.Fragment>\n      :\n        <React.Fragment>\n          <Box m={6}>\n            <Typography variant='h3' align='center'>\n              No previous transactions\n            </Typography>\n          </Box>\n        </React.Fragment>\n      }\n\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string,\n  rows: PropTypes.array\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.orange[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TasksProgress = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TASKS PROGRESS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              75.5%\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box mt={3}>\n          <LinearProgress\n            value={75.5}\n            variant=\"determinate\"\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalCustomers = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL CUSTOMERS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              1,600\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            16%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalCustomers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalCustomers;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL PROFIT\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $23,200\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n          colors.orange[600]\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Tablet',\n      value: 15,\n      icon: TabletIcon,\n      color: colors.red[600]\n    },\n    {\n      title: 'Mobile',\n      value: 23,\n      icon: PhoneIcon,\n      color: colors.orange[600]\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              p={1}\n              textAlign=\"center\"\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <CardHeader\n        title=\"Calendar\"\n      /> */}\n      {/* <Divider /> */}\n      <CardContent>\n        <Grid alignItems=\"center\" direction=\"column\" container>\n          <Grid item xs={12}>\n            <Calendar\n            defaultValue={new Date()}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  Box,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget';\nimport LatestOrders from './LatestOrders';\nimport LatestProducts from './LatestProducts';\nimport Upcoming from './Upcoming';\nimport Pending from './Pending';\nimport History from './History';\nimport Transaction from './Transaction';\nimport TasksProgress from './TasksProgress';\nimport TotalCustomers from './TotalCustomers';\nimport TotalProfit from './TotalProfit';\nimport TrafficByDevice from './TrafficByDevice';\n\n\nimport Calendar from './Calendar'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Overview\"\n    >\n      <Container maxWidth={false}>\n      <Box mb={2}>\n\n      <Grid container spacing={3}>\n        <Grid\n          item\n          lg={1}\n          md={1}\n          xl={1}\n          xs={12}\n        >\n        <img width='100' src='../static/images/oli-happy.png'>\n        </img>\n        </Grid>\n        <Grid\n          item\n          lg={11}\n          md={11}\n          xl={11}\n          xs={12}\n        >\n        <Box ml={2} mt={2}>\n          <Grid container spacing={0}\n          direction=\"column\"\n          >\n            <Grid item>\n            <Box flexGrow={1}/>\n            </Grid>\n            <Grid item>\n              <Typography id='selector1' variant=\"h1\">\n                Welcome {props.first_name}! \n              </Typography>\n            </Grid>\n            <Grid item>\n              {props.credits > 0 ?\n              <Typography id='selector1' variant=\"h2\">\n                You have {props.credits} credit hours left.\n              </Typography>\n              :\n              <Typography id='selector1' variant=\"h2\">\n                You have no credit hours.\n              </Typography>\n              }\n            </Grid>\n          </Grid>\n        </Box>\n        </Grid>\n      </Grid>\n\n      </Box>\n        <Grid\n          container\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid\n            item\n            lg={4}\n            md={4}\n            xl={4}\n            xs={12}\n          >\n            <Calendar id='selector2' />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={8}\n            xl={8}\n            xs={12}\n            id='selector3'\n          >\n            <Upcoming rows={props.upcoming} />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <Pending rows={props.pending} />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <History rows={props.history}/>\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <Transaction rows={props.transaction}/>\n          </Grid>\n          {/* <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid> */}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nexport class NotFoundView extends Component {\n\n  render(){\n    return (\n      <Page\n        title=\"404\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"md\">\n            <h2 align=\"center\">\n              404: The page you are looking for isn’t here\n            </h2>\n            <Box mb={4}>\n            <h3 align=\"center\">\n              You either tried some shady route or you came here by mistake.\n              Whichever it is, try using the navigation\n            </h3>\n            </Box>\n            <Box textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Under development\"\n                src=\"/static/images/oli-confused.png\"\n              />\n            </Box>\n          </Container>\n        </Box>\n      </Page>\n    );\n  }\n\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport {Container, Box, Typography, makeStyles} from '@material-ui/core'\nimport {useLocation} from 'react-router-dom'\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const search = useLocation().search;\n  const code = new URLSearchParams(search).get('code');\n\n  localStorage.setItem('zoom_token',code)\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <Box mb={4}>\n          <Typography variant=\"h1\">\n            Authenticated with Zoom!\n          </Typography>\n        </Box>\n        <Box mb={4}>\n          <Typography variant=\"h1\">\n            Code: {code}\n          </Typography>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button className={classes.importButton}>\n          Import\n        </Button>\n        <Button className={classes.exportButton}>\n          Export\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add product\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search product\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst ProductCard = ({ className, product, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mb={3}\n        >\n          <Avatar\n            alt=\"Product\"\n            src={product.media}\n            variant=\"square\"\n          />\n        </Box>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.title}\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"body1\"\n        >\n          {product.description}\n        </Typography>\n      </CardContent>\n      <Box flexGrow={1} />\n      <Divider />\n      <Box p={2}>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={2}\n        >\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <AccessTimeIcon\n              className={classes.statsIcon}\n              color=\"action\"\n            />\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              Updated 2hr ago\n            </Typography>\n          </Grid>\n          <Grid\n            className={classes.statsItem}\n            item\n          >\n            <GetAppIcon\n              className={classes.statsIcon}\n              color=\"action\"\n            />\n            <Typography\n              color=\"textSecondary\"\n              display=\"inline\"\n              variant=\"body2\"\n            >\n              {product.totalDownloads}\n              {' '}\n              Downloads\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nProductCard.propTypes = {\n  className: PropTypes.string,\n  product: PropTypes.object.isRequired\n};\n\nexport default ProductCard;\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    createdAt: '27/03/2019',\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    media: '/static/images/products/product_1.png',\n    title: 'Dropbox',\n    totalDownloads: '594'\n  },\n  {\n    id: uuid(),\n    createdAt: '31/03/2019',\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    media: '/static/images/products/product_2.png',\n    title: 'Medium Corporation',\n    totalDownloads: '625'\n  },\n  {\n    id: uuid(),\n    createdAt: '03/04/2019',\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    media: '/static/images/products/product_3.png',\n    title: 'Slack',\n    totalDownloads: '857'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\n    media: '/static/images/products/product_4.png',\n    title: 'Lyft',\n    totalDownloads: '406'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\n    media: '/static/images/products/product_5.png',\n    title: 'GitHub',\n    totalDownloads: '835'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    media: '/static/images/products/product_6.png',\n    title: 'Squarespace',\n    totalDownloads: '835'\n  }\n];\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport ProductCard from './ProductCard';\nimport data from './data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  productCard: {\n    height: '100%'\n  }\n}));\n\nconst ProductList = () => {\n  const classes = useStyles();\n  const [products] = useState(data);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Products\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          <Grid\n            container\n            spacing={3}\n          >\n            {products.map((product) => (\n              <Grid\n                item\n                key={product.id}\n                lg={4}\n                md={6}\n                xs={12}\n              >\n                <ProductCard\n                  className={classes.productCard}\n                  product={product}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n        <Box\n          mt={3}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Pagination\n            color=\"primary\"\n            count={3}\n            size=\"small\"\n          />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProductList;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\nimport SavedPayMethod from './SavedPayMethod';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Notifications />\n        {/* Assume that google will handle passwords and also we won't be saving the payments */}\n        {/* <Box mt={3}>\n          <Password />\n        </Box>\n        <Box mt={3}>\n          <SavedPayMethod />\n        </Box> */}\n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Select,\n  FormControl,\n  InputLabel,\n  Grid,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst SavedPayMethod = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const [passConfirmed, setPassConfirmed] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handlePassSubmit = () =>{\n    setPassConfirmed(!passConfirmed);\n    setOpen(false);\n\n  }\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          title=\"Payment Details\"\n        />\n        <Divider />\n        <CardContent>\n        {!passConfirmed ? \n          <React.Fragment>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"subtitle1\"\n          >\n            Bank: BDO\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"subtitle1\"\n          >\n            Credit Card #: **** **** **** 1234\n          </Typography>\n\n          <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n          >\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            onClick={handleClickOpen}\n          >\n            Edit\n          </Button>\n\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n              <DialogTitle id=\"form-dialog-title\">Edit Payment Method/s</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Input your password to continue editing your payment details\n                </DialogContentText>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={handlePassSubmit} color=\"primary\">\n                  Done\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </Box>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <CardContent>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={12}\n              >\n                <FormControl variant=\"outlined\" className={classes.formControl} style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <InputLabel>Pay Through</InputLabel>\n                  <Select\n                    fullWidth\n                    native\n\n                    label=\"Pay Through\"\n                    inputProps={{\n                      name: 'payment-method',\n                      id: 'payment-method',\n                    }}\n                  >\n                    <option aria-label=\"None\" value=\"\" />\n                    <option value={10}>Credit Cards  </option>\n                    <option value={20}>Bank Transfers    </option>\n                    <option value={20}>Gcash </option>\n                    <option value={20}>Grab Pay  </option>\n                  \n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={12}\n              >\n                <FormControl variant=\"outlined\" className={classes.formControl} style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <InputLabel>Banks</InputLabel>\n                  <Select\n                    fullWidth\n                    native\n\n                    label=\"Choose Bank\"\n                    inputProps={{\n                      name: 'choose-bank',\n                      id: 'choose-bank',\n                    }}\n                  >\n                    <option aria-label=\"None\" value=\"\" />\n                    <option value={10}>BDO</option>\n                    <option value={20}>BPI</option>\n                    <option value={20}>RCBC</option>\n                    <option value={20}>Metrobank</option>\n                  \n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={12}\n              >\n                <TextField\n                  label=\"Credit Card #\"\n                  margin=\"normal\"\n                  name=\"ccno\"\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.confirm}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n              \n              \n            {/* <TextField\n              fullWidth\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            /> */}\n            \n              <Box\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n              p={2}\n              >\n                <Button\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  onClick={handlePassSubmit}\n                >\n                  Update\n                </Button>\n              </Box>\n            </CardContent>\n          </React.Fragment>   \n          }\n        </CardContent>\n        <Divider />\n        \n      </Card>\n    </form>\n  );\n};\n\nSavedPayMethod.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SavedPayMethod;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              BUDGET\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              $24,000\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <MoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Order Ref\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Date\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>\n                    {order.ref}\n                  </TableCell>\n                  <TableCell>\n                    {order.customer.name}\n                  </TableCell>\n                  <TableCell>\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      color=\"primary\"\n                      label={order.status}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst useStyles = makeStyles(({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n}));\n\nconst LatestProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [products] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest Products\"\n      />\n      <Divider />\n      <List>\n        {products.map((product, i) => (\n          <ListItem\n            divider={i < products.length - 1}\n            key={product.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src={product.imageUrl}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  rootRate: {\n    // width: 200,\n    display: 'flex',\n  },\n}));\n\nconst RateChild = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Rate Tutee\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <DialogContentText id=\"alert-dialog-description\" align='center'>\n              How was the session?\n          </DialogContentText>\n          <Box align='center' mb={2} >\n            <Avatar>AM</Avatar>\n          </Box>\n          \n          <Typography variant=\"h4\" align=\"center\" mb={5}>\n            Angel Manzano\n          </Typography>\n          <Box mb={3} align='center' size=\"large\">\n            <Rating\n              size=\"large\"\n              name=\"tutor-rate\"\n              defaultValue={0}\n              precision={0.5}\n              fontsize=\"large\"\n              icon={<StarIcon size=\"large\" />}\n            />\n          </Box>\n\n          <TextField \n            id=\"comments\" \n            label=\"Comments\" \n            variant=\"outlined\" fullWidth\n            multiline\n            rows={4}\n            />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\" variant=\"outlined\">\n              Report\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" autoFocus>\n              Finish\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nRateChild.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RateChild;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RequestSummary from '../RequestPage/RequestSummary';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalConfRequest = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    // fullWidth={true}\n    // maxWidth={'md'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Details\"}</DialogTitle>\n        <DialogContent >\n          <Box mx={8}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Student\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Angel Manzano\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Subject\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Math\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Topic\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Algebra\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Duration\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  1 hour\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Special Request\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  None\n                </Typography>\n              </Grid>\n            </Grid>\n            <Box mt={8} mb={2}>\n              <Grid container spacing={2}>\n                <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                      Date\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='right'>\n                      December 7, 2020\n                    </Typography>\n                  </Grid>\n                  <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                    Time\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='right'>\n                    2:00PM - 3:00PM\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </DialogContent>\n{/*         \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Confirm\n          </Button>\n        </DialogActions> */}\n    </Dialog>\n  );\n};\n\nModalConfRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalConfRequest;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n  CircularProgress,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n}));\n\nconst ModalWaiting = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Starting\"}</DialogTitle>\n        <DialogContent mx={4}>\n          <Box align='center' mb={2}>\n          <img width='100' src='../static/images/oli-happy.png'></img>\n          </Box>\n          <DialogContentText id=\"alert-dialog-description\" align='center'>\n              Preparing Zoom call to start.\n          </DialogContentText>\n          <Box textAlign=\"center\" mb={3}>\n            <CircularProgress color=\"inherit\" />\n          </Box>\n        </DialogContent>\n    </Dialog>\n  );\n};\n\nModalWaiting.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalWaiting;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ModalZoomStart from './ModalZoomStart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalSure = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  const [openZoom, setOpenZoom] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleStart = () => {\n    setOpenZoom(true);\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      \n      >\n          <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Start Session\"}</DialogTitle>\n          <DialogContent className={classes.dialogStyle}>\n            <DialogContentText id=\"alert-dialog-description\" align='center' >\n                Are you ready to start the Zoom call?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={()=> handleStart()} color=\"primary\">\n                Yes\n            </Button>\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n                No\n            </Button>\n          </DialogActions>\n      </Dialog>\n      <ModalZoomStart open={openZoom} setOpen={setOpenZoom}/>\n    </React.Fragment>\n  );\n};\n\nModalSure.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalSure;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport StarIcon from '@material-ui/icons/Star';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PageviewIcon from '@material-ui/icons/Pageview';\n\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport CastForEducationIcon from '@material-ui/icons/CastForEducation';\nimport RateChild from './RateChild';\nimport ModalSessionDetails from './ModalSessionDetails';\nimport ModalSure from './ModalSure';\n\n\n  const rows = [\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Math',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Science',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'LoL',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n  ]\n\nconst headCells = []\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n  const tableHeaders = props.tableHeaders;\n  const tableRows = props.tableRows;\n  const sessionType = props.sessionType;\n  const tableType = props.type;\n  const [openFeedback, setOpenFeedback] = React.useState(false);\n  const [openSessionDets, setOpenSessionDets] = React.useState(false);\n  const [openSure, setOpenSure] = React.useState(false);\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const renderHeaders =()=>{\n  \n    const headerLabels = tableHeaders.map((label, index)=>(\n      label === \"Date\" ?\n          <TableCell sortDirection=\"desc\">\n            <Tooltip\n                enterDelay={300}\n                title=\"Sort\"\n            >\n                <TableSortLabel\n                active\n                direction=\"desc\"\n                >\n                Date\n                </TableSortLabel>\n            </Tooltip>\n          </TableCell>\n        :\n          <TableCell>\n            {label}\n          </TableCell>\n        \n    ))\n\n\n    return (<TableRow>{headerLabels}</TableRow>)\n\n  };\n\n  const renderRows = () =>{\n    \n    if(tableRows != undefined){\n      if(tableType == \"session\"){\n          const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((session, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={session.id}\n              >\n                  <TableCell>\n                  {session.date}\n                  </TableCell>\n                  <TableCell>\n                  {session.time}\n                  </TableCell>\n                  <TableCell>\n                  {session.subject}\n                  </TableCell>\n                  <TableCell>\n                  {session.student}\n                  </TableCell>\n                  \n                  {sessionType == \"history\" ?  \n                    <React.Fragment>\n                     \n                      <TableCell>\n                        {session.parent}\n                      </TableCell> \n                      </React.Fragment>\n                    : \n                    console.log()\n                  }\n\n                  {sessionType == \"upcoming\" ? \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary' startIcon={<PageviewIcon/>} onClick={() => setOpenSessionDets(true)}>View</Button>\n                      </Box>\n                      <ModalSessionDetails open={openSessionDets} setOpen={setOpenSessionDets}/>\n                      <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary' href='/#/messages' startIcon={<ForumIcon/>}>Chat</Button>\n                      </Box>\n                      <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary' onClick={() => setOpenSure(true)} startIcon={<CastForEducationIcon/>}>Start</Button>\n                      <ModalSure open={openSure} setOpen={setOpenSure}/>\n                      </Box>\n                  </TableCell>\n                  :\n                 \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary' onClick={() => setOpenFeedback(true)} startIcon={<FeedbackIcon/>}>Give Feedback</Button>\n                      </Box>\n                      <RateChild open={openFeedback} setOpen={setOpenFeedback}/>\n                  </TableCell>\n                  }\n              </TableRow>\n          );\n          })\n\n        return rowsResult\n        \n      }else if(tableType == \"transaction\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((transaction, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={transaction.id}\n              >\n                  <TableCell>\n                  {transaction.date}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.time}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.subject}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.student}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.parent}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.amount}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.sessionNo}\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }\n      \n    }\n\n    // if(rowsResult != undefined){\n    //   return (<TableRow>{rowsResult}</TableRow>)\n    // }\n    \n      // {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n      //   .map((session, index) => {\n      //   return (\n      //       <TableRow\n      //           hover\n      //           key={session.id}\n      //       >\n      //           <TableCell>\n      //           {session.date}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.time}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.subject}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.tutor.name}\n      //           </TableCell>\n      //           <TableCell>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='contained' color='primary'>View</Button>\n      //               </Box>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='contained' color='primary'>Chat</Button>\n      //               </Box>\n      //           </TableCell>\n      //       </TableRow>\n      //   );\n      //   })\n      // }\n  };\n\n  return (\n    <div className={classes.root}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size={dense}\n          >\n            <TableHead>\n                {renderHeaders()}\n\n                {/* <TableRow>\n                    <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                        enterDelay={300}\n                        title=\"Sort\"\n                    >\n                        <TableSortLabel\n                        active\n                        direction=\"desc\"\n                        >\n                        Date\n                        </TableSortLabel>\n                    </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                    Time\n                    </TableCell>\n                    <TableCell>\n                    Subject\n                    </TableCell>\n                    <TableCell>\n                    Tutor\n                    </TableCell>\n                    <TableCell>\n                    </TableCell>\n                </TableRow> */}\n            </TableHead>\n            <TableBody>\n              {renderRows()}\n                {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((session, index) => {\n                    return (\n                        <TableRow\n                            hover\n                            key={session.id}\n                        >\n                            <TableCell>\n                            {session.date}\n                            </TableCell>\n                            <TableCell>\n                            {session.time}\n                            </TableCell>\n                            <TableCell>\n                            {session.subject}\n                            </TableCell>\n                            <TableCell>\n                            {session.tutor.name}\n                            </TableCell>\n                            <TableCell>\n                                <Box mx={1} component='span'>\n                                <Button variant='contained' color='primary'>View</Button>\n                                </Box>\n                                <Box mx={1} component='span'>\n                                <Button variant='contained' color='primary'>Chat</Button>\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    );\n                    })\n                } */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[3]}\n          component=\"div\"\n          count={tableRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Typography,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \nimport moment from 'moment';\n\nconst rows = [\n  {\n    date: 'Dec 7',\n    time: '4 PM',\n    subject: 'Math',\n    student: 'Angel Manzano',\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Math',\n  //   student: 'Rolo Pena',\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Science',\n  //   student: 'Rolo Pena',\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Student\", \"\"]\n\nconst sessionType = \"upcoming\"\n\nconst type = \"session\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, currentDate, setUpcoming, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Upcoming Sessions\"\n      />\n      <Divider />\n      {/* {(rows).length != 0 ?  */}\n      {setUpcoming ?\n        <React.Fragment>\n          <CardContent>\n            <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n          </CardContent>\n        </React.Fragment>\n      :\n        <React.Fragment>\n          <Box m={6}>\n            <Typography variant='h3' align='center'>\n              No upcoming sessions \n            </Typography>\n            <Typography variant='h3' align='center'>\n              on {moment(currentDate).format('MMMM Do YYYY')}\n            </Typography>\n          </Box>\n        </React.Fragment>\n      }\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Typography,\n  Box\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table'\n\nconst rows = [\n  {\n    date: 'Dec 4',\n    time: '4 PM',\n    subject: 'Math',\n    student: 'Angel',\n    parent: 'Joshua Manzano'\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Math',\n  //   student: 'Josh Manzano',\n  //   parent: 'Tadhg McHearty'\n    \n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Science',\n  //   student: 'Josh Manzano',\n  //   parent: 'Tadhg McHearty'\n   \n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   student: 'Josh Manzano',\n  //   parent: 'Tadhg McHearty'\n    \n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   student: 'Josh Manzano',\n  //   parent: 'Tadhg McHearty'\n\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   student: 'Josh Manzano',\n  //   parent: 'Tadhg McHearty'\n    \n  // },\n]\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Student\", \"Parent\",\"\"]\n\nconst sessionType = \"history\"\n\nconst type = \"session\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, setHistory, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={(\n        //   <Button\n        //     endIcon={<ArrowDropDownIcon />}\n        //     size=\"small\"\n        //     variant=\"text\"\n        //   >\n        //     Last 7 days\n        //   </Button>\n        // )}\n        title=\"Session History\"\n      />\n      <Divider />\n      {setHistory ?\n        <React.Fragment>\n          <CardContent>\n            <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n          </CardContent>\n        </React.Fragment>\n      :\n        <React.Fragment>\n          <Box m={6}>\n            <Typography variant='h3' align='center'>\n              No past sessions\n            </Typography>\n          </Box>\n        </React.Fragment>\n      }\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table'\n\nconst rows = [\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Filipino',\n    tutor: {\n      name: 'Adrienne Soliven'\n    },\n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Math',\n    tutor: {\n      name: 'Adrienne Soliven'\n    },\n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Science',\n    tutor: {\n      name: 'Adrienne Soliven'\n    },\n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'LoL',\n    tutor: {\n      name: 'Adrienne Soliven'\n    },\n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Filipino',\n    tutor: {\n      name: 'Adrienne Soliven'\n    },\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Tutor\", \"\"]\n\nconst sessionType = \"upcoming/pending\"\n\nconst type = \"session\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={(\n        //   <Button\n        //     endIcon={<ArrowDropDownIcon />}\n        //     size=\"small\"\n        //     variant=\"text\"\n        //   >\n        //     Last 7 days\n        //   </Button>\n        // )}\n        title=\"Pending Requests\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n        {/* <Box\n          height={400}\n          position=\"relative\"\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box> */}\n      </CardContent>\n      {/* <Divider /> */}\n      {/* <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box> */}\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table'\n\nconst rows = [\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Filipino',\n    amount: 'P300.00',\n    sessionNo: '1234',\n    student: 'Rolo Pena',\n    parent: 'Joshua Manzano Pena'\n    \n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Math',\n    amount: 'P300.00',\n    sessionNo: '1034',\n    student: 'Rolo Pena',\n    parent: 'Joshua Manzano Pena'\n    \n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Science',\n    amount: 'P300.00',\n    sessionNo: '1204',\n    student: 'Rolo Pena',\n    parent: 'Joshua Manzano Pena'\n    \n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'LoL',\n    amount: 'P300.00',\n    sessionNo: '1231',\n    student: 'Rolo Pena',\n    parent: 'Joshua Manzano Pena'\n    \n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Filipino',\n    amount: 'P300.00',\n    sessionNo: '1203',\n    student: 'Rolo Pena',\n    parent: 'Joshua Manzano Pena'\n    \n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Filipino',\n    amount: 'P300.00',\n    sessionNo: '1014',\n    student: 'Rolo Pena',\n    parent: 'Joshua Manzano Pena'\n    \n  },\n]\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Student\", \"Parent\", \"Amount\", \"Session Number\"]\n\nconst sessionType = \"N/A\"\n\nconst type = \"transaction\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        // action={(\n        //   <Button\n        //     endIcon={<ArrowDropDownIcon />}\n        //     size=\"small\"\n        //     variant=\"text\"\n        //   >\n        //     Last 7 days\n        //   </Button>\n        // )}\n        title=\"Transactions\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n        {/* <Box\n          height={400}\n          position=\"relative\"\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box> */}\n      </CardContent>\n      {/* <Divider /> */}\n      {/* <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box> */}\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, totalEarnings, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Total Earnings\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              Php {totalEarnings}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.orange[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst AveRating = ({ className, aveRating, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Average Rating\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {aveRating}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <StarBorderIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAveRating.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AveRating;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalStudents = ({ className, noStudents, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              # of Students\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {noStudents}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalStudents.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalStudents;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, totalHours, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Total Hours\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {totalHours}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <HourglassEmptyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box, Grid, Container} from '@material-ui/core';\n\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TimelineIcon from '@material-ui/icons/Timeline';\n\nimport TotalProfit from './TotalProfit';\nimport AveRating from './AveRating';\nimport TotalStudents from './TotalStudents';\nimport TotalHours from './TotalHours';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      // margin: theme.spacing(1),\n      // width: theme.spacing(16),\n      // height: theme.spacing(16),\n      // margin: '5vh',\n      width: '110vh',\n      height: '25vh',\n      // marginBottom: '10vh',\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function BoxContent(props) {\n  const classes = useStyles();\n  const noStudents = props.noStudents;\n  const aveRating = props.aveRating;\n  const totalHours = props.totalHours;\n  const totalEarnings = props.totalEarnings;\n\n\n  return (\n  \n    <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n\n          <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={12}\n          >\n            <AveRating aveRating={aveRating}/>\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={12}\n          >  \n            <TotalStudents noStudents={noStudents}/>\n            </Grid>\n            <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={12}\n            >\n                <TotalHours totalHours={totalHours}/>\n            </Grid>\n            <Grid\n              item\n              lg={6}\n              sm={6}\n              xl={6}\n              xs={12}\n            >\n                <TotalProfit totalEarnings={totalEarnings}/>\n                {/* <div className={classes.root}>\n                  <Paper elevation={3}>Total Earnings</Paper>\n                </div> */}\n            </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n          </Grid>\n        </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Typography,\n} from '@material-ui/core';\n\nimport MetricsBoxes from './MetricsBoxes';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Metrics = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    // <Card\n    //   className={clsx(classes.root, className)}\n    //   {...rest}\n    // >\n    //   <CardHeader\n    //     title=\"Upcoming Sessions\"\n    //   />\n    //   <Divider />\n    //   <CardContent>\n    //     <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n    //   </CardContent>\n    // </Card>\n   <React.Fragment>\n   <Divider/>\n    <Grid container spacing={2}>\n      <Grid\n        item\n        lg={12}\n        md={12}\n        xl={12}\n        xs={12}\n      >\n      <Box mt={2}>\n        <Typography variant='h1'>\n          Metrics\n        </Typography>\n      </Box>\n      </Grid>\n      <Grid\n        item\n        lg={6}\n        md={6}\n        xl={6}\n        xs={12}\n      >\n        <Box mb={2}>\n         <Typography variant='h2' align='center' gutterBottom='true'>\n            This Month\n          </Typography>\n        </Box>\n          <MetricsBoxes noStudents={0} aveRating={'N/A'} totalHours={0} totalEarnings={0}/>\n      </Grid>\n      <Grid\n        item\n        lg={6}\n        md={6}\n        xl={6}\n        xs={12}\n      >\n        <Box mb={2}>\n          <Typography variant='h2' align='center' gutterBottom='true'>\n            All-Time\n          </Typography>\n        </Box>\n        <MetricsBoxes noStudents={0} aveRating={'N/A'} totalHours={0} totalEarnings={0}/>\n      </Grid>\n    </Grid>\n    </React.Fragment>\n  );\n};\n\nMetrics.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Metrics;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Button,\n  Box,\n  Container,\n  TextField,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  choicesBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    \"&:hover\": {\n      backgroundColor: '#75c2b7',\n      color: 'white !important',\n    }\n  },\n  selectedBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    backgroundColor: '#75c2b7',\n    color: 'white',\n  },\n  exitBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #EB5531',\n    color: '#EB5531',\n    \"&:hover\": {\n      backgroundColor: '#EB5531',\n      color: 'white !important',\n    }\n  },\n  selectExitBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #EB5531',\n    backgroundColor: '#EB5531',\n    color: 'white',\n  },\n}));\n\nconst TutorExtensionForm = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  const [accept, setAccept] =  React.useState(false);\n  const [decline, setDecline] =  React.useState(false);\n \n\n  function buttonClick(type){\n \n    if(type == 'accept'){\n      setAccept(true);\n      setDecline(false);\n    }else if(type == 'decline'){\n      setAccept(false);\n      setDecline(true);\n    }\n\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    fullWidth={true}\n    maxWidth={'sm'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Extension\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <Box align='center' mb={3} >\n            <Typography variant=\"h5\" align=\"center\" mb={2}>\n              The parent wants to extend the session by 1 hour.\n            </Typography>\n          </Box>\n\n          <Box py={6}>\n            \n            <Grid container spacing={2} \n              alignItems=\"center\"\n              justify=\"center\"\n              style={{placeItems: 'center', textAlign: 'center'}}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={12}\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{placeItems: 'center'}}\n                className={classes.buttonContainer}\n              >\n                <Button className={ !accept? classes.choicesBtn : classes.selectedBtn} onClick={()=>setOpen(false) } variant=\"outlined\">\n                  Accept\n                </Button>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={12}\n              >\n                {/* <FormControlLabel value=\"20 hours P9,000\" control={<Radio color=\"primary\" />} label=\"20 hours P9,000\" /> */}\n                <Button className={ !decline? classes.exitBtn : classes.selectExitBtn} onClick={()=>setOpen(false) } variant=\"outlined\">\n                  Decline\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          \n          <Box my={5}>\n            <Typography variant=\"body1\" align=\"center\" >\n              Accepting the extension will bring you directly to the video call.\n            </Typography>\n          </Box>\n        </DialogContent>\n        {/* <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n              Done\n          </Button>\n        </DialogActions> */}\n    </Dialog>\n  );\n};\n\nTutorExtensionForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TutorExtensionForm;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, selectedDate, changeDate, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <CardHeader\n        title=\"Calendar\"\n      /> */}\n      {/* <Divider /> */}\n      <CardContent>\n        <Grid alignItems=\"center\" direction=\"column\" container>\n          <Grid item xs={12}>\n            <Calendar\n            onChange={changeDate}\n            value={selectedDate}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React, {useState} from 'react';\nimport {\n  Container,\n  Grid,\n  Box,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Budget from './Budget';\nimport LatestOrders from './LatestOrders';\nimport LatestProducts from './LatestProducts';\nimport Upcoming from './Upcoming';\nimport Pending from './Pending';\nimport History from './History';\nimport Transaction from './Transaction';\nimport Metrics from './Metrics';\nimport TutorExtensionForm from 'src/components/TutorExtensionForm'; //asking tutor if he accepts the extension\n\n\nimport Calendar from './Calendar'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = (props) => {\n  const classes = useStyles();\n  const [selectedDate, changeDate] = useState(new Date())\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Overview\"\n    >\n      <Container maxWidth={false}>\n        <TutorExtensionForm open={props.open} setOpen={props.setOpen}/>\n      <Box mb={2}>\n\n      <Grid container spacing={3}>\n        <Grid\n          item\n          lg={1}\n          md={1}\n          xl={1}\n          xs={12}\n        >\n        <img width='100' src='../static/images/oli-happy.png'>\n        </img>\n        </Grid>\n        <Grid\n          item\n          lg={11}\n          md={11}\n          xl={11}\n          xs={12}\n        >\n        <Box ml={2} mt={2}>\n          <Grid container\n          direction=\"column\"\n          >\n            <Grid item>\n            <Box flexGrow={1}/>\n            </Grid>\n            <Grid item>\n            <Typography id='selector1' variant=\"h1\">\n              Welcome {props.first_name}! \n            </Typography>\n            </Grid>\n            <Grid item>\n              {props.requests == 0 &&\n              <Typography id='selector1' variant=\"h2\">\n                There are no new requests.\n              </Typography>\n              }\n              {props.requests == 1 &&\n              <Typography id='selector1' variant=\"h2\">\n                There is {props.requests} new request.\n              </Typography>\n              }\n              {props.requests > 1 &&\n              <Typography id='selector1' variant=\"h2\">\n                There are {props.requests} new requests.\n              </Typography>\n              }\n            </Grid>\n            </Grid>\n        </Box>\n        </Grid>\n      </Grid>\n\n      </Box>\n        <Grid\n          container\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid\n            item\n            lg={4}\n            md={4}\n            xl={4}\n            xs={12}\n          >\n            <Calendar changeDate={changeDate} selectedDate={selectedDate} id='selector2' />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={8}\n            xl={8}\n            xs={12}\n            id='selector3'\n          >\n            <Upcoming currentDate={selectedDate} setUpcoming={props.setUpcoming} rows={props.upcoming} />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <History setHistory={props.setHistory} rows={props.history}/>\n          </Grid>\n          {/* <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <Metrics/>\n          </Grid> */}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component, Fragment, useState } from 'react';\nimport { GiftedChat } from 'react-web-gifted-chat';\nimport {\n  Container,\n  Box,\n  CircularProgress,\n} from '@material-ui/core';\n\nclass Example extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      messages: this.props.messages,\n      loading: false,\n    };\n  }\n\n  loadingCircle = () => {\n    return (\n      <Container>\n        <CircularProgress/>\n      </Container>\n    )\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.messages !== prevProps.messages){\n      this.setState({loading: true},() => {\n        this.setState({messages:this.props.messages}, () => {\n          this.setState({loading:false})\n        })\n      })\n    }\n  }\n\n  onSend(messages = []) {\n    this.setState((previousState) => ({\n      messages: GiftedChat.append(previousState.messages, messages),\n    }));\n  }\n\n  render() {\n    return (\n      <Fragment>\n      {this.state.loading ? \n        this.loadingCircle\n      :\n      <GiftedChat\n        messages={this.state.messages}\n        onSend={(messages) => this.onSend(messages)}\n        user={{\n          id: 1,\n        }}\n      />\n      }\n      </Fragment>\n    );\n  }\n\n}\n\nexport default Example;","import React, {useState} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Grid,\n  Hidden,\n} from '@material-ui/core';\nimport {Button,ChatItem, ChatList, Input, Popup, Sidebar, Navbar} from 'react-chat-elements';\nimport './main.css';\nimport ReactGifted from 'src/components/ReactGiftedChat'\n\nconst Chat = () => {\n\n  const akadMessages = [\n    {\n      id: 1,\n      text: 'Welcome to AKADS!\\nIf you need any help, don\\'t hesitate to message us!',\n      createdAt: new Date(),\n      user: {\n        id: 2,\n        name: 'AKADS Buddy',\n        avatar: '/static/images/oli-happy.png',\n      },\n    },\n  ]\n\n  const joshMessages = [\n    {\n      id: 1,\n      text: 'Good morning! May I know what we would need to prepare\\nfor the tutoring session?',\n      createdAt: new Date(),\n      user: {\n        id: 2,\n        name: 'Joshua Manzano',\n        avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n      },\n    },\n  ]\n\n  const [messages, changeMessage] = useState(joshMessages)\n  const [joshUnread, changeJosh] = useState(1)\n  const [akadsUnread, changeAkads] = useState(1)\n\n  const styles = {\n    container: {\n      flex: 1,\n      display: \"flex\",\n      flexDirection: \"row\",\n      height: \"100%\",\n      background: \"#FFF\",\n    },\n    channelList: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n    },\n    chat: {\n      display: \"flex\",\n      flex: 3,\n      flexDirection: \"column\",\n      borderWidth: \"1px\",\n      borderColor: \"#ccc\",\n      borderRightStyle: \"solid\",\n      borderLeftStyle: \"solid\",\n    },\n    settings: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\",\n    },\n  };\n\n  const changeChat = (id) => {\n    if(id == 0){\n      changeMessage(akadMessages)\n      changeChatlist(chatListAkads)\n      changeAkads(0)\n    }else if (id == 1){\n      changeMessage(joshMessages)\n      changeChatlist(chatListJosh)\n      changeJosh(0)\n    }else if (id == 2){\n    }\n\n  }\n\n  const chatListJosh = [\n    {\n        avatar: '/static/images/oli-chat.png',\n        alt: 'Oli',\n        title: 'AKADS Buddy',\n        subtitle: 'Welcome to AKADS!',\n        date: new Date(),\n        onClick:{changeChat},\n        chatID: 0,\n        unread: akadsUnread,\n    },\n    {\n        avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n        alt: 'Joshua',\n        title: 'Joshua Manzano',\n        subtitle: 'Hello! Can I have more details about...',\n        date: new Date(),\n        chatID: 1,\n        unread: joshUnread,\n        className: 'selectedChat',\n    },\n    {\n        avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n        alt: 'Carl Cornejo',\n        title: 'Carl Cornejo (Inactive)',\n        subtitle: 'Thank you!',\n        date: new Date(1603958808000),\n        chatID: 2,\n        unread: 0,\n        statusColor: '#D4D4D4',\n        statusColorType: 'encircle',\n        className: 'inactiveChat',\n        // statusText: 'Done',\n    },\n  ]\n\n  const chatListAkads = [\n    {\n        avatar: '/static/images/oli-chat.png',\n        alt: 'Oli',\n        title: 'AKADS Buddy',\n        subtitle: 'Welcome to AKADS!',\n        date: new Date(),\n        onClick:{changeChat},\n        chatID: 0,\n        unread: akadsUnread,\n        className: 'selectedChat',\n    },\n    {\n        avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n        alt: 'Joshua',\n        title: 'Joshua Manzano',\n        subtitle: 'Hello! Can I have more details about...',\n        date: new Date(),\n        chatID: 1,\n        unread: joshUnread,\n    },\n    {\n        avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n        alt: 'Carl Cornejo',\n        title: 'Carl Cornejo (Inactive)',\n        subtitle: 'Thank you!',\n        date: new Date(1603958808000),\n        chatID: 2,\n        unread: 0,\n        statusColor: '#D4D4D4',\n        statusColorType: 'encircle',\n        className: 'inactiveChat',\n        // statusText: 'Done',\n    },\n  ]\n\n  const [chatList , changeChatlist] = useState(chatListJosh)\n\n  const chatList2 = [\n    {\n        avatar: '/static/images/oli-chat.png',\n        alt: 'Oli',\n        title: 'AKADS Buddy',\n        subtitle: 'Welcome to AKADS!',\n        date: new Date(),\n        unread: 1,\n    },\n    {\n        avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n        alt: 'Joshua',\n        title: 'Joshua Manzano',\n        subtitle: 'Hello! Can I have more details about...',\n        date: new Date(),\n        unread: 1,\n    },\n\n  ]\n\n\n  for(var i = 0; i < 5 ; i++){\n    chatList2.push({\n      avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n      alt: 'Anon',\n      title: 'Anon',\n      subtitle: 'Lorem ipsum',\n      date: new Date(),\n      unread: 1,\n    })\n  }\n  chatList2.push(\n    {\n        avatar: 'https://lh4.googleusercontent.com/-mxVpz__Ts-M/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuckmHZi5Zpu2DZtViCFKRTK55uLgRQ/s96-c/photo.jpg',\n        alt: 'Carl Cornejo',\n        title: 'Carl Cornejo (Inactive)',\n        subtitle: 'Thank you!',\n        date: new Date(1603958808000),\n        unread: 0,\n        statusColor: '#D4D4D4',\n        statusColorType: 'encircle',\n        className: 'inactiveChat',\n        // statusText: 'Done',\n    }\n  )\n\n\n  \n\n  return (\n    <div style={styles.container}>\n      <div style={styles.channelList}>\n        {chatList.map(chat => (\n          <ChatItem\n          avatar={chat.avatar}\n          alt={chat.alt}\n          title={chat.title}\n          subtitle={chat.subtitle}\n          date={chat.date}\n          unread={chat.unread}\n          className={chat.className}\n          onClick={() => changeChat(chat.chatID)}\n          />\n        ))}\n        </div>\n      <div style={styles.chat}>\n        <ReactGifted messages={messages}/>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n} from '@material-ui/core';\n\nexport class Navigation extends Component {\n\n  render() {\n    return (\n      <nav id=\"menu\" className=\"navbar navbar-default navbar-fixed-top\">\n        <div className=\"container\">\n          <div className=\"navbar-header\">\n            <button\n              type=\"button\"\n              className=\"navbar-toggle collapsed\"\n              data-toggle=\"collapse\"\n              data-target=\"#bs-example-navbar-collapse-1\"\n            >\n              {\" \"}\n              <span className=\"sr-only\">Toggle navigation</span>{\" \"}\n              <span className=\"icon-bar\"></span>{\" \"}\n              <span className=\"icon-bar\"></span>{\" \"}\n              <span className=\"icon-bar\"></span>{\" \"}\n            </button>\n            {/* <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\n              <img src='../img/logo.png'></img>\n            </a>{\" \"} */}\n            <a href=\"/#/#page-top\">\n              <img height=\"50\" src='../img/logo.png'></img>\n            </a>{\" \"}\n          </div>\n\n          <div\n            className=\"collapse navbar-collapse\"\n            id=\"bs-example-navbar-collapse-1\"\n          >\n            <ul className=\"nav navbar-nav navbar-right\">\n              <li>\n                <a href=\"#/#about\" className=\"page-scroll\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a href=\"#/#services\" className=\"page-scroll\">\n                  Pricing\n                </a>\n              </li>\n              <li>\n                <a href=\"#/#testimonials\" className=\"page-scroll\">\n                  Testimonials\n                </a>\n              </li>\n              <li>\n                <a href=\"#/#contact\" className=\"page-scroll\">\n                  Become A Tutor\n                </a>\n              </li>\n              <li>\n                <Button onClick={() => window.location.replace('#/login')} variant=\"outlined\" color=\"secondary\" id=\"loginButton\">\n                  Login\n                </Button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Grid,\n  Button,\n} from '@material-ui/core';\n\nexport class Header extends Component {\n  render() {\n    return (\n      <header id=\"header\">\n        <div className=\"intro\">\n          <div className=\"overlay\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 intro-text\">\n                  <h1>\n                    {this.props.data ? this.props.data.title : \"Loading\"}\n                    <span></span>\n                  </h1>\n                  <p>\n                    Akads helps you match with a tutor that is most suited for your child. <b>Create an account now</b> and have your <b>first hour for FREE.</b>\n                  </p>\n                  <Grid container>\n                    <Grid item xs={3}/>\n                    <Grid item xs={3}>\n                      <Button href=\"#/login\" style={{borderRadius: \"25px\"}} size=\"large\" color=\"default\" variant=\"outlined\">\n                        Get started\n                      </Button>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Button href=\"#/tutor-form\" style={{borderRadius: \"25px\"}} size=\"large\" color=\"default\" variant=\"outlined\">\n                        Become A Tutor\n                      </Button>\n                    </Grid>\n                    <Grid item xs={3}/>\n                  </Grid>\n                </div>\n                <div className=\"intro-text\">\n                  <img style={{opacity: 0.2}} width=\"350\" src=\"../static/images/oli-white.png\"></img>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Grid,\n} from '@material-ui/core';\n\nexport class features extends Component {\n  render() {\n    return (\n      <div id=\"features\" className=\"text-center\">\n        <Container>\n          {/* <div className=\"col-md-10 col-md-offset-1 section-title\">\n            <h2>Features</h2>\n          </div> */}\n          <div className=\"row\">\n            <Grid container spacing={2}>\n            {this.props.data\n              ? this.props.data.map((d,i) => (\n                  <Grid item xs={4} key={`${d.title}-${i}`}>\n                    {\" \"}\n                    <img width=\"90\" src={d.icon}/>\n                    <h3>{d.title}</h3>\n                    <p>{d.text}</p>\n                  </Grid>\n                ))\n              : \"Loading...\"}\n            </Grid>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default features;\n","import React, { Component } from 'react'\n\nexport class about extends Component {\n  render() {\n    return (\n        <div id=\"about\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-6\"> <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\"/> </div>\n            <div className=\"col-xs-12 col-md-6\">\n              <div className=\"about-text\">\n                <h2>About Us</h2>\n                <p>{this.props.data ? this.props.data.paragraph : 'loading...'}</p>\n                <h3>Subjects taught</h3>\n                <div className=\"list-style\">\n                  <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                    <ul>\n                      {this.props.data ? this.props.data.Why.map((d, i) => <li  key={`${d}-${i}`}>{d}</li>) : 'loading'}\n                    </ul>\n                  </div>\n                  <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                    <ul>\n                    {this.props.data ? this.props.data.Why2.map((d, i) => <li  key={`${d}-${i}`}> {d}</li>) : 'loading'}\n\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default about\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Grid,\n  Paper,\n  Button,\n  Box,\n} from '@material-ui/core';\n\nimport Carousel from 'react-material-ui-carousel'\n\nfunction TestimonialGrid(props){\n  return (\n    <Grid container spacing={1}>\n    {props.d\n      ? props.d.map((d, i) => (\n        <Grid item xs={4}>\n          <div key={`${d.name}-${i}`}>\n            <div className=\"testimonial\">\n              <div className=\"testimonial-image\">\n                {\" \"}\n                <img src={d.img} alt=\"\" />{\" \"}\n              </div>\n              <div className=\"testimonial-content\">\n                <p>\"{d.text}\"</p>\n                <div className=\"testimonial-meta\"> - {d.name} </div>\n              </div>\n            </div>\n          </div>\n        </Grid>\n        ))\n      : \"loading\"}\n    </Grid>\n  )\n}\nexport class testimonials extends Component {\n  render() {\n    var items = [\n      {\n          name: \"Random Name #1\",\n          description: \"Probably the most random thing you have ever seen!\"\n      },\n      {\n          name: \"Random Name #2\",\n          description: \"Hello World!\"\n      }\n  ]\n    return (\n      <div id=\"testimonials\">\n        <Container>\n          <Box>\n            <div className=\"section-title text-center\">\n              <h2>Testimonials</h2>\n            </div>\n            <div className=\"row\">\n              {this.props.data &&\n                <Carousel>\n                {\n                    this.props.data.map( (d, i) => <TestimonialGrid d={d} i={i} /> )\n                }\n                </Carousel>\n              }\n\n            </div>\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default testimonials;\n","import React, { Component } from \"react\";\n\nexport class Contact extends Component {\n  render() {\n    return (\n      <div>\n        <div id=\"contact\">\n          <div className=\"container\">\n            <div className=\"col-md-8\">\n              <div className=\"row\">\n                <div className=\"section-title\">\n                  <h2>Get In Touch</h2>\n                  <p>\n                    Please fill out the form below to send us an email and we\n                    will get back to you as soon as possible.\n                  </p>\n                </div>\n                <form name=\"sentMessage\" id=\"contactForm\" noValidate>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          className=\"form-control\"\n                          placeholder=\"Name\"\n                          required=\"required\"\n                        />\n                        <p className=\"help-block text-danger\"></p>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                      <div className=\"form-group\">\n                        <input\n                          type=\"email\"\n                          id=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Email\"\n                          required=\"required\"\n                        />\n                        <p className=\"help-block text-danger\"></p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      name=\"message\"\n                      id=\"message\"\n                      className=\"form-control\"\n                      rows=\"4\"\n                      placeholder=\"Message\"\n                      required\n                    ></textarea>\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                  <div id=\"success\"></div>\n                  <button type=\"submit\" className=\"btn btn-custom btn-lg\">\n                    Send Message\n                  </button>\n                </form>\n              </div>\n            </div>\n            <div className=\"col-md-3 col-md-offset-1 contact-info\">\n              <div className=\"contact-item\">\n                <h3>Contact Info</h3>\n                <p>\n                  <span>\n                    <i className=\"fa fa-map-marker\"></i> Address\n                  </span>\n                  {this.props.data ? this.props.data.address : \"loading\"}\n                </p>\n              </div>\n              <div className=\"contact-item\">\n                <p>\n                  <span>\n                    <i className=\"fa fa-phone\"></i> Phone\n                  </span>{\" \"}\n                  {this.props.data ? this.props.data.phone : \"loading\"}\n                </p>\n              </div>\n              <div className=\"contact-item\">\n                <p>\n                  <span>\n                    <i className=\"fa fa-envelope-o\"></i> Email\n                  </span>{\" \"}\n                  {this.props.data ? this.props.data.email : \"loading\"}\n                </p>\n              </div>\n            </div>\n            <div className=\"col-md-12\">\n              <div className=\"row\">\n                <div className=\"social\">\n                  <ul>\n                    <li>\n                      <a\n                        href={this.props.data ? this.props.data.facebook : \"/\"}\n                      >\n                        <i className=\"fa fa-facebook\"></i>\n                      </a>\n                    </li>\n                    <li>\n                      <a href={this.props.data ? this.props.data.twitter : \"/\"}>\n                        <i className=\"fa fa-twitter\"></i>\n                      </a>\n                    </li>\n                    <li>\n                      <a href={this.props.data ? this.props.data.youtube : \"/\"}>\n                        <i className=\"fa fa-youtube\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"footer\">\n          <div className=\"container text-center\">\n            <p>\n              &copy; AkadsPH 2020{\" \"}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst tiers = [\n  {\n    title: 'Free Trial',\n    price: '0',\n    description: ['First-time Users Only', 'College-Student Tutor', 'Zoom Video Chat', '1 Hour Session'],\n    buttonText: 'Sign Up for Free',\n    buttonVariant: 'outlined',\n  },\n  {\n    title: 'Full Session',\n    price: '400',\n    description: [\n      'College-Student Tutor',\n      'Any Mode Of Payment',\n      'Zoom Video Chat',\n      '1 Hour Session',\n    ],\n    buttonText: 'Book A Session',\n    buttonVariant: 'outlined',\n  },\n  {\n    title: '10-Sessions',\n    price: '3600',\n    description: [\n      'Pay for 9, Get 1 FREE',\n      'College-Student Tutor',\n      'Any Mode Of Payment',\n      'Zoom Video Chat',\n    ],\n    buttonText: 'Book 10 Sessions',\n    buttonVariant: 'outlined',\n  },\n];\n\nexport default function Pricing() {\n  const classes = useStyles();\n\n  return (\n      <div id=\"pricing\">\n        <Container>\n          <Box>\n            <div className=\"section-title text-center\">\n              <h2>Pricing</h2>\n            </div>\n            <div className=\"row\">\n      <Container maxWidth=\"lg\" component=\"main\">\n        <Grid container spacing={5} alignItems=\"flex-end\">\n          {tiers.map((tier) => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: 'center' }}\n                  subheaderTypographyProps={{ align: 'center' }}\n                  action={tier.title === 'Pro' ? <StarIcon /> : null}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <div className={classes.cardPricing}>\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\n                      ₱{tier.price}\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"textSecondary\">\n                      /hr\n                    </Typography>\n                  </div>\n                  <ul>\n                    {tier.description.map((line) => (\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                        {line}\n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n                <CardActions>\n                  <Button fullWidth variant={tier.buttonVariant} color=\"primary\">\n                    {tier.buttonText}\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n\n            </div>\n          </Box>\n        </Container>\n      </div>\n  );\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nconst tiers = [\n  {\n    title: 'Free',\n    price: '0',\n    description: ['10 users included', '2 GB of storage', 'Help center access', 'Email support'],\n    buttonText: 'Sign up for free',\n    buttonVariant: 'outlined',\n  },\n  {\n    title: 'Pro',\n    subheader: 'Most popular',\n    price: '15',\n    description: [\n      '20 users included',\n      '10 GB of storage',\n      'Help center access',\n      'Priority email support',\n    ],\n    buttonText: 'Get started',\n    buttonVariant: 'contained',\n  },\n  {\n    title: 'Enterprise',\n    price: '30',\n    description: [\n      '50 users included',\n      '30 GB of storage',\n      'Help center access',\n      'Phone & email support',\n    ],\n    buttonText: 'Contact us',\n    buttonVariant: 'outlined',\n  },\n];\nconst footers = [\n  {\n    title: 'Company',\n    description: ['Team', 'History', 'Contact us', 'Locations'],\n  },\n  {\n    title: 'Features',\n    description: ['Cool stuff', 'Random feature', 'Team feature', 'Developer stuff', 'Another one'],\n  },\n  {\n    title: 'Resources',\n    description: ['Resource', 'Resource name', 'Another resource', 'Final resource'],\n  },\n  {\n    title: 'Legal',\n    description: ['Privacy policy', 'Terms of use'],\n  },\n];\n\nexport default function FreqAsk() {\n  const classes = useStyles();\n\n  return (\n      <div id=\"freqask\">\n        <Container>\n          <Box height=\"50%\">\n            <div className=\"section-title text-center\">\n              <h2>Frequently Asked Questions</h2>\n            </div>\n            <div className=\"row\">\n            </div>\n          </Box>\n        </Container>\n      </div>\n  );\n}","import React, { Component } from 'react'\n\nimport Navigation from './components/navigation';\nimport Header from './components/header';\nimport Features from './components/features';\nimport About from './components/about';\n// import Services from './components/services';\n// import Gallery from './components/gallery';\nimport Testimonials from './components/testimonials';\n// import Team from './components/Team';\nimport Contact from './components/contact';\nimport Pricing from './components/pricing';\nimport FreqAsk from './components/freqask';\nimport JsonData from './data/data.json';\n\nexport class LandingPage extends Component {\n  state = {\n    landingPageData: {},\n  }\n  getlandingPageData() {\n    this.setState({landingPageData : JsonData})\n  }\n\n  componentDidMount() {\n    this.getlandingPageData();\n  }\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Header data={this.state.landingPageData.Header} />\n        <Features data={this.state.landingPageData.Features} />\n        <About data={this.state.landingPageData.About} />\n        {/* <Services data={this.state.landingPageData.Services} /> */}\n        {/* <Gallery /> */}\n        <Pricing/>\n        <Testimonials data={this.state.landingPageData.Testimonials} />\n        <FreqAsk />\n        {/* <Team data={this.state.landingPageData.Team} /> */}\n        <Contact data={this.state.landingPageData.Contact} />\n      </div>\n    )\n\n  }\n}\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Box,\n  CircularProgress,\n} from '@material-ui/core';\n\nclass Loading extends Component {\n  render() {\n    return (\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"md\">\n            <Box mb={4} textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Under development\"\n                src=\"/img/loginIcon.png\"\n              />\n            </Box>\n            {/* <h2 align=\"center\">\n              Loading...\n            </h2> */}\n          </Container>\n        </Box>\n    );\n  }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { BrowserRouter as Redirect } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Modal } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\n\nimport Loading from './loading.jsx'\nimport LoadingBack from 'src/components/loadingBack';\n\nimport {FaUser, FaGraduationCap} from 'react-icons/fa';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://akadsph.com/\">\n        AkadsPH\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport class LoginView extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      loading: false \n    }\n  }\n\n  login = (response) => {\n    this.setState({loading:true}, () => {\n      const accessToken = response.tokenObj.access_token\n      const idToken = response.tokenObj.id_token\n      this.props.login(accessToken, idToken)\n    })\n  }\n\n  login_tutor = (response) => {\n    this.setState({loading:true}, () => {\n      const accessToken = response.tokenObj.access_token\n      const idToken = response.tokenObj.id_token\n      this.props.login_tutor(accessToken, idToken)\n    })\n  }\n\n  loaded = () => {\n    this.setState({loading: false})\n  }\n\n  handleClose = () => {\n    console.log('hello')\n\n  }\n\n  render(){\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <LoadingBack processing={this.state.loading}/>\n        <div>\n          <Box mt={6}>\n            <Container align=\"center\">\n              <img height=\"100\" src='./img/logo.png'/>\n            </Container>\n          </Box>\n          <Box mt={8}>\n              <Container>\n              <h2 align=\"center\">\n              Sign in as \n              </h2>\n              </Container>\n          </Box>\n          <Box>\n              <div id=\"login\" className=\"text-center\">\n                  <Container>\n                  {/* <div className=\"col-md-10 col-md-offset-1 section-title\">\n                      <h2>Features</h2>\n                  </div> */}\n                  <div className=\"row\">\n                      <Grid container spacing={9}>\n                          <Grid item xs={6}>\n                          <GoogleLogin\n                            clientId=\"906211324056-odf07j9kh30r75r6vfpk5qfq3i7jh6nt.apps.googleusercontent.com\"\n                            render={renderProps => (\n                              <div>\n                              <a\n                                  onClick={renderProps.onClick}\n                                  href=\"/\"\n                                  className=\"\"\n                              >\n                                  <i className={'fa'}>\n                                    <FaUser/>\n\n                                  </i>\n                              </a>{\" \"}\n                                  <h3>{'Parent'}</h3>\n                              </div>\n                            )}\n                            buttonText=\"Login\"\n                            onSuccess={this.login}\n                            onFailure={this.login}\n                            uxMode={'popup'}\n                            onAutoLoadFinished={this.loaded}\n                            cookiePolicy={'single_host_origin'}\n                          />\n                          </Grid>\n                          <Grid item xs={6}>\n                          <GoogleLogin\n                            clientId=\"906211324056-odf07j9kh30r75r6vfpk5qfq3i7jh6nt.apps.googleusercontent.com\"\n                            render={renderProps => (\n                              <div>\n                              <a\n                                  onClick={renderProps.onClick}\n                                  href=\"/\"\n                                  className=\"\"\n                              >\n                                  <i className={'fa'}>\n                                    <FaGraduationCap/>\n\n                                  </i>\n                              </a>{\" \"}\n                                  <h3>{'Tutor'}</h3>\n                              </div>\n                            )}\n                            buttonText=\"Login\"\n                            onSuccess={this.login_tutor}\n                            onFailure={this.login_tutor}\n                            uxMode={'popup'}\n                            onAutoLoadFinished={this.loaded}\n                            cookiePolicy={'single_host_origin'}\n                          />\n                          </Grid>\n                      </Grid>\n                  </div>\n                  </Container>\n              </div>\n          </Box>\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n\n  }\n}\n\nexport default LoginView;","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    width: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    \"&:hover\": {\n      backgroundColor: '#75c2b7',\n      color: 'white !important',\n    }\n  },\n  bundleButtonRev: {\n    width: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    backgroundColor: '#75c2b7',\n    color: 'white',\n  },\n  textPriceSingle:{\n    fontWeight: 'bold',\n    marginTop: '25%',\n    marginBottom: '42%',\n    \"&:hover\": {\n      color: 'white',\n      fontColor: 'white',\n    }\n  },\n  textPriceSingleRev:{\n    fontWeight: 'bold',\n    marginTop: '25%',\n    marginBottom: '42%',\n    color: 'white',\n  },\n  textPrice:{\n    fontWeight: 'bold',\n    marginTop: '25%',\n    marginBottom: '25%',\n    \"&:hover\": {\n      color: 'white',\n      fontColor: 'white',\n    }\n  },\n  textPriceRev:{\n    fontWeight: 'bold',\n    marginTop: '25%',\n    marginBottom: '25%',\n    color: 'white',\n  },\n  textHours:{\n    // position: 'absolute',\n    color: '#75c2b7',\n    \"&:hover\": {\n      color: 'white',\n    }\n  },\n  textHoursRev:{\n    color: 'white',\n  },\n  textOldPrice:{\n    color: '#D4D4D4',\n    fontSize: '9px',\n    \"&:hover\": {\n      color: 'white',\n    }\n  },\n  textOldPriceRev:{\n    color: 'white',\n    fontSize: '9px',\n  },\n  buttonContainer:{\n\n    \"&:hover\": {\n      color: 'white',\n    }\n  },\n  buttonContainer: {\n    \"&:hover\": {\n        color: 'white !important',\n      }\n  },\n}));\n\nconst Bundle = ({ className, setAmount, setItem, setHours, ...rest }) => {\n  const classes = useStyles();\n  const [bundleA, setBundleA] =  React.useState(false);\n  const [bundleB, setBundleB] =  React.useState(false);\n  const [bundleC, setBundleC] =  React.useState(false);\n\n  function bundleClick(type, amount, item, hours){\n    console.log(amount)\n\n    if(type == 'bundleA'){\n      setBundleA(true);\n      setBundleB(false);\n      setBundleC(false);\n    }else if(type == 'bundleB'){\n      setBundleA(false);\n      setBundleB(true);\n      setBundleC(false);\n    }else if(type == 'bundleC'){\n      setBundleA(false);\n      setBundleB(false);\n      setBundleC(true);\n    }\n\n    setAmount(Number(amount))\n    setItem(item)\n    setHours(hours)\n  }\n  \n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            // subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n            title=\"Choose a Bundle\"\n          />\n          <Divider />\n          <CardContent>\n          \n         \n            <Box py={6}>\n            \n              <Grid container spacing={2} \n                alignItems=\"center\"\n                justify=\"center\"\n                style={{placeItems: 'center', textAlign: 'center'}}>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                  alignItems=\"center\"\n                  justify=\"center\"\n                  style={{placeItems: 'center'}}\n                  className={classes.buttonContainer}\n                >\n                  \n                  <Button className={ !bundleA ? classes.bundleButton : classes.bundleButtonRev} onClick={()=>bundleClick('bundleA', 549, '1 hour', 1) }\n                  // color=\"primary\"\n                  variant=\"outlined\">\n                    <Grid container className={classes.buttonContainer}>\n                      <Grid item xs={12} align='left' className={classes.buttonContainer}> \n                        <Typography variant=\"caption\" display=\"inline\" className={ !bundleA ? classes.textHours : classes.textHoursRev} align='left'>\n                          1 hour\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} align='center' className={classes.buttonContainer}>\n                        <Typography variant=\"h4\" display=\"block\" className={ !bundleA ? classes.textPriceSingle : classes.textPriceSingleRev}>\n                          ₱549\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} align='left'>\n                        \n                      </Grid>\n                    </Grid>\n            \n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  \n                  <Button className={ !bundleB ? classes.bundleButton : classes.bundleButtonRev}  onClick={()=>bundleClick('bundleB', 4999, '10 hours', 10)}\n                  // color=\"primary\"\n                  variant=\"outlined\">\n                    <Grid container>\n                      <Grid item xs={12} align='left' className={classes.buttonContainer}>\n                        <Typography variant=\"caption\" display=\"inline\" className={ !bundleB ? classes.textHours : classes.textHoursRev} align='left'>\n                          10 Hours\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} align='center'>\n                        <Typography variant=\"h4\" display=\"block\" className={ !bundleB ? classes.textPrice : classes.textPriceRev}>\n                          ₱4,999\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} align='right'>\n                        <Typography variant=\"caption\" display=\"inline\" className={ !bundleB ? classes.textOldPrice : classes.textOldPriceRev} align='left'>\n                          From ₱5,490\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  {/* <FormControlLabel value=\"20 hours P9,000\" control={<Radio color=\"primary\" />} label=\"20 hours P9,000\" /> */}\n                  <Button className={ !bundleC ? classes.bundleButton : classes.bundleButtonRev}  onClick={()=>bundleClick('bundleC', 7199, '15 hours', 15)}\n                  // color=\"primary\"\n                  variant=\"outlined\">\n                    <Grid container>\n                      <Grid item xs={12} align='left'>\n                        <Typography variant=\"caption\" display=\"inline\" className={ !bundleC ? classes.textHours : classes.textHoursRev} align='left'>\n                          15 Hours\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} align='center'>\n                        <Typography variant=\"h4\" display=\"block\" className={ !bundleC ? classes.textPrice : classes.textPriceRev}>\n                          ₱7,199\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12} align='right'>\n                        <Typography variant=\"caption\" display=\"inline\" className={ !bundleC ? classes.textOldPrice : classes.textOldPriceRev} align='left'>\n                          From ₱8,235\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Button>\n                </Grid>\n              </Grid>\n            </Box>\n           \n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nBundle.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Bundle;\n","import React from 'react';\nimport Cards from 'react-credit-cards';\n\nimport 'react-credit-cards/es/styles-compiled.css';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport 'react-credit-cards/es/styles-compiled.css';\n\nexport default class PaymentForm extends React.Component {\n  state = {\n    cvc: '',\n    expiry: '',\n    focus: '',\n    name: '',\n    number: '',\n  };\n\n  handleInputFocus = (e) => {\n    this.setState({ focus: e.target.name });\n  }\n  \n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    this.setState({ [name]: value });\n\n    this.props.setCardState(this.state);\n  }\n  \n  render() {\n    return (\n      <div id=\"PaymentForm\">\n        <Cards\n          cvc={this.state.cvc}\n          expiry={this.state.expiry}\n          focused={this.state.focus}\n          name={this.state.name}\n          number={this.state.number}\n        />\n        <br/>\n        <Container>\n        \n          <form>\n          <Grid container spacing={2}>\n              <Grid item xs={12}>\n              <TextField variant=\"outlined\" fullWidth\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Card Number\"\n                onChange={this.handleInputChange}\n                onFocus={this.handleInputFocus}\n              />\n              </Grid>\n              <Grid item xs={12}>\n              <TextField variant=\"outlined\" fullWidth\n                type=\"tel\"\n                name=\"name\"\n                placeholder=\"Card Holder's Name\"\n                onChange={this.handleInputChange}\n                onFocus={this.handleInputFocus}\n              />\n              </Grid>\n              <Grid item xs={6}>\n              <TextField variant=\"outlined\" fullWidth\n                type=\"tel\"\n                name=\"expiry\"\n                placeholder=\"Expiry Date\"\n                onChange={this.handleInputChange}\n                onFocus={this.handleInputFocus}\n              />\n              </Grid>\n              \n              <Grid item xs={6}>\n              <TextField variant=\"outlined\" fullWidth\n                type=\"tel\"\n                name=\"cvc\"\n                placeholder=\"CVC\"\n                onChange={this.handleInputChange}\n                onFocus={this.handleInputFocus}\n              />\n              </Grid>\n            \n            \n            \n            </Grid>\n          </form>\n          \n        </Container>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n  Select,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport CreditCardForm from './CreditCardForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst Payment = ({ className, setCardState, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/ style={{boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",}}>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            // subheader=\"Choose your preferred payment method\"\n            title=\"Payment Details\"\n          />\n          <Divider />\n          <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n            <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n              <CreditCardForm setCardState={setCardState}></CreditCardForm>\n              {/* <Grid container spacing={2} style={{justifyContent: 'center', placeItems: 'center'}}>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Credit Card\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Bank Transfer\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Gcash\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  GrabPay\n                  </Button>\n                </Grid>\n              </Grid> */}\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nPayment.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Payment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  payButton: {\n    width: \"60%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    // paddingTop: \"7%\",\n    // paddingBottom: \"7%\",\n  },\n}));\n\nconst Breakdown = ({ className, amount, item, discount, hours, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Grid container spacing={2}>\n        {/* <Grid\n          item\n          lg={3}\n          md={3}\n          xl={3}\n          xs={0}\n          ></Grid> */}\n          <Grid\n          item\n          lg={12}\n          md={12}\n          xl={12}\n          xs={12}\n          >\n            <Box mx=\"auto\" /*mt={3}*/ style={{boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",}}>\n              <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n                <CardHeader\n                  // subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n                  title=\"Transaction Summary\"\n                />\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Type\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\" align=\"right\">\n                        {item}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Quantity\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\" align=\"right\">\n                        1\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\">\n                        Promo Code Discount\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"h6\" align=\"right\">\n                        Php {discount}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12}></Grid>\n                    <Grid item xs={12}></Grid>\n                    <Grid item xs={12}></Grid>\n                    <Grid item xs={12}></Grid>\n                    <Grid item xs={12}></Grid>\n                    <Grid item xs={12}></Grid>\n                    <Grid item lg={12} md={0} xl={0} xs={0}></Grid>\n                    <Grid item lg={12} md={0} xl={0} xs={0}></Grid>\n                    <Grid item lg={12} md={0} xl={0} xs={0}></Grid>\n                    <Grid item lg={12} md={0} xl={0} xs={0}></Grid>\n                  </Grid>\n                  </Box>\n                </CardContent>\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\">\n                          Total\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\" align=\"right\">\n                          Php {amount}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </CardContent>\n                <Divider />\n                <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n                  <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n                    <Grid container spacing={2}>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\">\n                          Total Credit Hours\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Typography variant=\"h5\" align=\"right\">\n                          {hours}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}></Grid>\n                    </Grid>\n                  </Box>\n                </CardContent>\n                \n              </Card>\n            </Box>\n          </Grid> \n\n          {/* <Grid\n          item\n          lg={3}\n          md={3}\n          xl={3}\n          xs={0}\n          ></Grid> */}\n      </Grid>\n    </div>\n  );\n};\n\nBreakdown.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Breakdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst Validity = ({ className, ...rest }) => {\n  const classes = useStyles();\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, '0');\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  var mm6 = String(today.getMonth() + 7).padStart(2, '0');\n  var yyyy = today.getFullYear();\n  // var startDate = mm + '/' + dd + '/' + yyyy;\n  var endDate = mm6 + '/' + dd + '/' + yyyy;\n\n  var startDate = moment().format('MM/DD/YYYY');\n  var endDate = moment().add(6, 'M').format('MM/DD/YYYY');\n  // var futureMonthEnd = moment(futureMonth).endOf('month');\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            // subheader=\"*Note these hours will expire after 6 MONTHS please use them before then.\"\n            title=\"Period of Validity\"\n          />\n          <Box ml={2}>\n            <Typography variant=\"caption\" display=\"block\" >\n              *Note: these hours will expire after 6 MONTHS please use them before then\n            </Typography>\n          </Box>\n          <Divider />\n          <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n            <Typography variant=\"h4\" align='center'>\n              {startDate} - {endDate}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nValidity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Validity\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst PromoCode = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            // subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n            title=\"Promo Code\"\n          />\n          <Divider />\n          <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n            <Grid container>\n              {/* <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={0}\n              >\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={12}\n              > */}\n                <TextField \n                id=\"special-request\" \n                label=\"Promo Code\" \n                variant=\"outlined\" fullWidth\n                defaultValue=\"AKADS2020\"\n                />\n              {/* </Grid>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={0}\n              >\n              </Grid> */}\n            </Grid>\n            \n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nPromoCode.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PromoCode;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n  Select,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport CreditCardForm from './CreditCardForm';\nimport Payment from './Payment';\nimport Breakdown from './Breakdown';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n  payButton: {\n    width: \"80%\",\n    marginLeft: \"10%\",\n    marginRight: \"10%\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    // paddingTop: \"7%\",\n    // paddingBottom: \"7%\",\n  },\n}));\n\nconst PayPage = ({ className, setCardState, paynow, amount, item, discount, hours, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      \n      <Box >\n        <Grid container spacing={2}>\n          <Grid\n            item\n            lg={1}\n            md={1}\n            xl={1}\n            xs={0}\n          ></Grid>\n          <Grid\n            item\n            lg={6}\n            md={6}\n            xl={6}\n            xs={12}\n          >\n            <Payment setCardState={setCardState}/>\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={4}\n            xl={4}\n            xs={12}\n          >\n            <Breakdown amount={amount} item={item} discount={discount} hours={hours}/>\n          </Grid>\n          <Grid\n            item\n            lg={1}\n            md={1}\n            xl={1}\n            xs={0}\n          ></Grid>\n          {/* <Grid\n            item\n            lg={1}\n            md={1}\n            xl={1}\n            xs={0}\n          ></Grid>\n          <Grid\n            item\n            lg={5}\n            md={5}\n            xl={5}\n            xs={5}\n          >\n            <Button color=\"primary\" variant=\"contained\" onClick={paynow} className={classes.payButton}>\n              Pay Now\n            </Button>\n          </Grid>\n          <Grid\n            item\n            lg={1}\n            md={1}\n            xl={1}\n            xs={0}\n          ></Grid> */}\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nPayPage.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default PayPage;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Typography,\n  Grid,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Backdrop,\n  Paper,\n  CircularProgress,\n  Snackbar,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport data from './data';\nimport Bundle from './Bundle';\nimport Payment from './Payment';\nimport Breakdown from './Breakdown';\nimport Validity from './Validity';\nimport PromoCode from './PromoCode';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {checkout} from 'src/Api';\n\nimport PayPage from './PayPage';\nimport LoadingBack from 'src/components/loadingBack';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  nextButton: {\n    placeItems: \"center\",\n    justifyContent: \"center\",\n    // marginRight: theme.spacing(1)\n   \n  },\n  backButton: {\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n  },\n  payButton: {\n    width: \"40%\",\n    // marginLeft: \"10%\",\n    // marginRight: \"10%\",\n    marginTop: \"5%\",\n    marginBottom: \"5%\",\n    // paddingTop: \"7%\",\n    // paddingBottom: \"7%\",\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\n\n\nfunction CreditStore(props){\n  const classes = useStyles();\n  const [customers] = useState(data);\n  const [detailsDone, setDetailsDone] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [processing, setProcessing] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const themebp = useTheme();\n  const fullScreen = useMediaQuery(themebp.breakpoints.down('sm'));\n\n  const [cardState, setCardState] = React.useState();\n  const [amount, setAmount] = React.useState(0);\n  const [item, setItem] = React.useState('');\n  const [hours, setHours] = React.useState(0);\n  const [discount, setDiscount] = React.useState(0);\n  \n  useEffect(() => {\n    if(processing){\n      checkout(amount, cardState['number'], cardState['expiry'], cardState['cvc'], (res) => {\n        setProcessing(false);\n        if(res){\n          setSuccess(true);\n          props.addCredit(hours);\n        }else{\n          setError(true);\n        }\n      });\n    }\n  },[processing])\n\n  const handleChangeNext = (event) => {\n    setDetailsDone(!detailsDone);\n  };\n\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      console.log(cardState)\n      setOpen(false);\n    };\n    \n    const paynow = () => {\n      setProcessing(true);\n\n    }\n\n    const DialogTitle = withStyles(useStyles)((props) => {\n      const { children, classes, onClose, ...other } = props;\n      return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n      );\n    });\n  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Buy Hours\" \n    >\n      <Snackbar open={success} autoHideDuration={6000} onClose={() => setSuccess(false)}>\n        <Alert onClose={() => setSuccess(false)} severity=\"success\">\n          Transaction successful!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={error} autoHideDuration={6000} onClose={() => setError(false)}>\n        <Alert onClose={() => setError(false)} severity=\"success\">\n          Transaction failed!\n        </Alert>\n      </Snackbar>\n      <LoadingBack processing={processing}/>\n      <Container maxWidth={false}>\n        {/* <Toolbar /> */}\n        <Box mb={4}>\n          <Typography variant=\"h1\" align='left'>\n            Buy Hours\n          </Typography>\n        </Box>\n        {!detailsDone ? \n        <React.Fragment>\n          <Grid\n            container\n            spacing={2}\n          >\n            <Grid\n              item\n              lg={7}\n              md={7}\n              xl={7}\n              xs={12}\n             \n            >\n              <Bundle setAmount={setAmount} setItem={setItem} setHours={setHours}/>\n            </Grid>\n            <Grid\n              item\n              lg={5}\n              md={5}\n              xl={5}\n              xs={12}\n            >\n              <Validity/>\n              <br/>\n              <PromoCode/>\n            </Grid>\n            {/* <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              <PromoCode/>\n            </Grid> */}\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              {/* <Payment/> */}\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n              align='right'\n            >\n              <Button className={classes.nextButton}  \n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleChangeNext}\n                >\n                Proceed to Checkout\n              </Button>\n                \n            </Grid>\n          </Grid>\n        </React.Fragment>\n        : \n        \n        <React.Fragment>\n          <PayPage amount={amount} item={item} discount={discount} hours={hours} setCardState={setCardState}/>\n          <Grid container spacing={0}>\n            <Grid\n              item\n              lg={1}\n              md={1}\n              xl={0}\n              xs={0}\n              ></Grid>\n            <Grid item\n              lg={5}\n              md={5}\n              xl={5}\n              xs={6}\n              >\n              \n              <Button className={classes.backButton}  \n                color=\"primary\"\n                onClick={handleChangeNext}\n                variant=\"outlined\"\n                >\n                Back\n              </Button>\n              \n            </Grid> \n            <Grid\n              item\n              lg={5}\n              md={5}\n              xl={5}\n              xs={6}\n              align='right'\n              >\n              <Button className={classes.payButton}  \n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={paynow}\n                  >\n                  Pay Now\n                </Button>\n                <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                >\n                  <DialogTitle id=\"alert-dialog-title\">{\"Payment Confirmed & Request Sent!\"}</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Payment was successful. You will be notified once a tutor accepts your request.\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                      Cancel\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                      Done\n                    </Button>\n                  </DialogActions>\n              </Dialog>\n            </Grid>\n          </Grid>\n        \n          \n        </React.Fragment>\n        }\n  \n      </Container>\n    </Page>\n  );\n};\n\nexport default CreditStore;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n}));\n\nconst CustomerListView = (props) => {\n\n  let classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Find Tutor\" \n    >\n      <Container maxWidth={false}>\n      <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          mt={8}\n        >\n          <Container maxWidth=\"md\">\n            <Box mb={4} textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Under development\"\n                src=\"/static/images/oli-confused.png\"\n              />\n            </Box>\n            <h2 align=\"center\">\n              You don't have any hours yet.\n            </h2>\n            <Box mt={4} align=\"center\">\n            <Button size=\"large\" color=\"primary\" variant=\"contained\">\n              Buy Hours\n            </Button>\n            </Box>\n          </Container>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CustomerListView;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  InputAdornment,\n  Snackbar\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction pay(amount, card, exp_month, exp_year, cvc){\n    var axios = require('axios');\n    var data = JSON.stringify({\"data\":{\"attributes\":{\"amount\":parseInt(amount)*100,\"payment_method_allowed\":[\"card\"],\"payment_method_options\":{\"card\":{\"request_three_d_secure\":\"any\"}},\"currency\":\"PHP\"}}});\n    \n    var config = {\n      method: 'post',\n      url: 'https://api.paymongo.com/v1/payment_intents',\n      headers: { \n        'Content-Type': 'application/json', \n        'Authorization': 'Basic c2tfdGVzdF9WRVFQbzVTeXVvWEFNaks2QTM2Skg2QUU6'\n      },\n      data : data\n    };\n    \n    axios(config)\n    .then(function (response) {\n        const payment_intent = response.data.data.id\n        // console.log(payment_intent)\n\n        var data = JSON.stringify({\"data\":{\"attributes\":{\"details\":{\"card_number\":String(card),\"exp_month\":parseInt(exp_month),\"exp_year\":parseInt(exp_year),\"cvc\":String(cvc)},\"type\":\"card\"}}});\n\n        var config = {\n          method: 'post',\n          url: 'https://api.paymongo.com/v1/payment_methods',\n          headers: { \n            'Content-Type': 'application/json', \n            'Authorization': 'Basic c2tfdGVzdF9WRVFQbzVTeXVvWEFNaks2QTM2Skg2QUU6'\n          },\n          data : data\n        };\n        \n        axios(config)\n        .then(function (response) {\n            const payment_method = response.data.data.id\n            var data = JSON.stringify({\"data\":{\"attributes\":{\"payment_method\":payment_method}}});\n\n            var config = {\n              method: 'post',\n              url: 'https://api.paymongo.com/v1/payment_intents/'+payment_intent+'/attach',\n              headers: { \n                'Content-Type': 'application/json', \n                'Authorization': 'Basic c2tfdGVzdF9WRVFQbzVTeXVvWEFNaks2QTM2Skg2QUU6'\n              },\n              data : data\n            };\n            \n            axios(config)\n            .then(function (response) {\n                console.log(JSON.stringify(response.data));\n                return true;\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n\n        //   console.log(JSON.stringify(response.data));\n        })\n        .catch(function (error) {\n          console.log(error);\n          console.log(error.response);\n        });\n        \n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n}\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [amount, setAmount] = React.useState(0);\n  const [card, setCard] = React.useState(0);\n  const [exp_month, setExpMonth] = React.useState(0);\n  const [exp_year, setExpYear] = React.useState(0);\n  const [cvc, setCVC] = React.useState(0);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const changeAmount = (e) => {\n      setAmount(e.target.value)\n      console.log(amount)\n  };\n  const changeCard = (e) => {\n      setCard(e.target.value)\n      console.log(card)\n  };\n  const changeExpMonth = (e) => {\n      setExpMonth(e.target.value)\n      console.log(exp_month)\n  };\n  const changeExpYear = (e) => {\n      setExpYear(e.target.value)\n      console.log(exp_year)\n  };\n  const changeCVC = (e) => {\n      setCVC(e.target.value)\n      console.log(cvc)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    if(pay(amount, card, exp_month, exp_year, cvc)){\n        console.log(\"Success!\")\n    }\n    setSuccess(true);\n  };\n\n  const closeSuccess = () => {\n      setSuccess(false);\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"PayMongo\"\n      />\n      <Divider />\n      <CardContent>\n        <Button onClick={handleClickOpen} variant='contained' color='primary'>\n            Pay Tutor\n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Pay Tutor</DialogTitle>\n            <DialogContent>\n            <TextField\n                onChange={changeAmount}\n                margin=\"dense\"\n                id=\"amount\"\n                label=\"Amount\"\n                startAdornment={<InputAdornment position=\"start\">Php</InputAdornment>}\n            />\n            <TextField\n                onChange={changeCard}\n                margin=\"dense\"\n                id=\"card\"\n                label=\"Card Number\"\n            />\n            <TextField\n                onChange={changeExpMonth}\n                margin=\"dense\"\n                id=\"exp_month\"\n                label=\"Expiry Month\"\n            />\n            <TextField\n                onChange={changeExpYear}\n                margin=\"dense\"\n                id=\"exp_year\"\n                label=\"Expiry Year\"\n            />\n            <TextField\n                onChange={changeCVC}\n                margin=\"dense\"\n                id=\"cvc\"\n                label=\"CVC\"\n            />\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n                Cancel\n            </Button>\n            <Button onClick={handleClose} color=\"primary\">\n                Pay\n            </Button>\n            </DialogActions>\n        </Dialog>\n        <Snackbar open={success} autoHideDuration={6000} onClose={closeSuccess}>\n            <Alert onClose={closeSuccess} severity=\"success\">\n                Payment successful!\n            </Alert>\n        </Snackbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst button1 = () => {\n  var axios = require('axios');\n  var data = JSON.stringify({\"data\":{\"attributes\":{\"amount\":10000,\"payment_method_allowed\":[\"card\"],\"payment_method_options\":{\"card\":{\"request_three_d_secure\":\"any\"}},\"currency\":\"PHP\"}}});\n  \n  var config = {\n    method: 'post',\n    url: 'https://api.paymongo.com/v1/payment_intents',\n    headers: { \n      'Content-Type': 'application/json', \n      'Authorization': 'Basic c2tfdGVzdF9WRVFQbzVTeXVvWEFNaks2QTM2Skg2QUU6'\n    },\n    data : data\n  };\n  \n  axios(config)\n  .then(function (response) {\n    console.log(JSON.stringify(response.data));\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Brankas\"\n      />\n      <Divider />\n      <CardContent>\n        <Button disabled={true} onClick={button1} variant='contained' color='primary'>\n          Get Authorization Token\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography\n} from '@material-ui/core';\n\nimport axios from  'axios';\n\n\nclass RandomFact extends React.Component {\n  useStyles = makeStyles(() => ({\n    root: {}\n  }));\n\n  createZoomMeeting = () => {\n    const data = {\n      'tutee': 'TEST TUTEE',\n      'subject': 'TEST',\n    }\n    axios.post('https://akadsph-backend.herokuapp.com/zoom/', data)\n    .then(res => {\n      console.log(res.data)\n      this.setState({\n        'start_url':res.data.start,\n        'join_url':res.data.join\n      },()=>{\n        this.setState({open: true})\n      })\n    })\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      open: false,\n      success: false,\n      start_url: '',\n      join_url: '',\n    };\n  }\n\n  componentDidMount(){\n  }\n\n  handleClose = () => {\n    this.setState({open: false})\n    this.setState({success:true})\n  };\n\n  closeSuccess = () => {\n    this.setState({success:false})\n  }\n\n  render() {\n    return (\n    <Card\n    >\n      <CardHeader\n        title=\"Zoom\"\n      />\n      <Divider />\n      <CardContent>\n        <Button onClick={this.createZoomMeeting} variant='contained' color='primary'>\n            Create Zoom Meeting\n        </Button>\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>,\n          Meeting Details\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography>\n            Start URL: <a href={this.state.start_url}>Click here</a> \n          </Typography>\n          <Typography>\n            Join URL: <a href={this.state.join_url}>Click here</a> \n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </CardContent>\n    </Card>\n    )\n  }\n}\n\nexport default RandomFact;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  InputAdornment,\n  Snackbar,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst sendEmail = () => {\n  var axios = require('axios');\n  var data = JSON.stringify({\"data\":{\"attributes\":{\"amount\":10000,\"payment_method_allowed\":[\"card\"],\"payment_method_options\":{\"card\":{\"request_three_d_secure\":\"any\"}},\"currency\":\"PHP\"}}});\n  \n  var config = {\n    method: 'post',\n    url: 'https://api.paymongo.com/v1/payment_intents',\n    headers: { \n      'Content-Type': 'application/json', \n      'Authorization': 'Basic c2tfdGVzdF9WRVFQbzVTeXVvWEFNaks2QTM2Skg2QUU6'\n    },\n    data : data\n  };\n  \n  axios(config)\n  .then(function (response) {\n    console.log(JSON.stringify(response.data));\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction send(recipient){\n    console.log(recipient)\n    return true\n}\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [recipient, setRecipient] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const changeRecipient = (e) => {\n      setRecipient(e.target.value)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    if(send(recipient)){\n        console.log(\"Success!\")\n    }\n    setSuccess(true);\n  };\n\n  const closeSuccess = () => {\n      setSuccess(false);\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Twilio\"\n      />\n      <Divider />\n      <CardContent>\n        <Button onClick={handleClickOpen} variant='contained' color='primary'>\n          Send SMS Message \n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Send SMS</DialogTitle>\n            <DialogContent>\n            <TextField\n                onChange={changeRecipient}\n                margin=\"dense\"\n                id=\"recipient\"\n                label=\"Phone Number\"\n                defaultValue='+63'\n            />\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n                Cancel\n            </Button>\n            <Button onClick={handleClose} color=\"primary\">\n                Send\n            </Button>\n            </DialogActions>\n        </Dialog>\n      </CardContent>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  InputAdornment,\n  Snackbar,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst sendEmail = () => {\n  var axios = require('axios');\n  var data = JSON.stringify({\"data\":{\"attributes\":{\"amount\":10000,\"payment_method_allowed\":[\"card\"],\"payment_method_options\":{\"card\":{\"request_three_d_secure\":\"any\"}},\"currency\":\"PHP\"}}});\n  \n  var config = {\n    method: 'post',\n    url: 'https://api.paymongo.com/v1/payment_intents',\n    headers: { \n      'Content-Type': 'application/json', \n      'Authorization': 'Basic c2tfdGVzdF9WRVFQbzVTeXVvWEFNaks2QTM2Skg2QUU6'\n    },\n    data : data\n  };\n  \n  axios(config)\n  .then(function (response) {\n    console.log(JSON.stringify(response.data));\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction send(recipient, message){\n    console.log(recipient)\n    console.log(message)\n    return true\n}\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [recipient, setRecipient] = React.useState('');\n  const [message, setMessage] = React.useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const changeRecipient = (e) => {\n      setRecipient(e.target.value)\n  };\n  const changeMessage = (e) => {\n      setMessage(e.target.value)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    if(send(recipient, message)){\n        console.log(\"Success!\")\n    }\n    setSuccess(true);\n  };\n\n  const closeSuccess = () => {\n      setSuccess(false);\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Email\"\n      />\n      <Divider />\n      <CardContent>\n        <Button onClick={handleClickOpen} variant='contained' color='primary'>\n          Send Email\n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Send Email</DialogTitle>\n            <DialogContent>\n            <TextField\n                onChange={changeRecipient}\n                margin=\"dense\"\n                id=\"recipient\"\n                label=\"Recipient\"\n            />\n            <TextField\n                onChange={changeMessage}\n                margin=\"dense\"\n                id=\"message\"\n                label=\"Message\"\n            />\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n                Cancel\n            </Button>\n            <Button onClick={handleClose} color=\"primary\">\n                Send\n            </Button>\n            </DialogActions>\n        </Dialog>\n      </CardContent>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Typography,\n} from '@material-ui/core';\nimport axios from  'axios';\n\nclass RandomFact extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      fact: '...',\n    };\n  }\n\n  componentDidMount(){\n    axios.get('https://uselessfacts.jsph.pl/random.json?language=en')\n    .then(res => {\n      this.setState({fact: res.data['text']})\n    })\n  }\n\n  render() {\n    return (\n    <Box my={2}>\n      <Typography variant=\"p\">\n        {this.state.fact}\n      </Typography>\n    </Box>\n    )\n  }\n}\n\nexport default RandomFact;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography\n} from '@material-ui/core';\n\nimport {Widget} from 'react-chat-widget';\nimport {ChatList, Navbar} from 'react-chat-elements';\nimport 'react-chat-elements/dist/main.css';\n\nclass Chat extends React.Component {\n  useStyles = makeStyles(() => ({\n    root: {}\n  }));\n\n\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  componentDidMount(){\n  }\n\n  render() {\n    return (\n      <Container>\n        <Widget/>\n        <ChatList\n    className='chat-list'\n    dataSource={[\n        {\n            // avatar: 'https://facebook.github.io/react/img/logo.svg',\n            alt: 'AD',\n            title: 'Adrienne Soliven',\n            subtitle: 'What are you doing?',\n            date: new Date(),\n            unread: 0,\n        },\n        {\n            // avatar: 'https://facebook.github.io/react/img/logo.svg',\n            alt: 'RP',\n            title: 'Romeo Pena',\n            subtitle: 'What are you doing?',\n            date: new Date(),\n            unread: 0,\n        },\n    ]} />\n      </Container>\n    )\n  }\n}\n\nexport default Chat;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n}));\n\nconst ModalSessionExtension = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Success!\"}</DialogTitle>\n        <DialogContent>\n          <Box align='center' mb={2}>\n          <img width='100' src='../static/images/boy-1-wave.png'></img>\n          </Box>\n          <DialogContentText id=\"alert-dialog-description\" align='center'>\n              The tutor has accepted the session extension\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Join Zoom Call\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalSessionExtension.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalSessionExtension;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n}));\n\nconst ModalDeclined = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Book Again\"}</DialogTitle>\n        <DialogContent>\n          <Box align='center' mb={2}>\n          <img width='100' src='../static/images/oli-sad.png'></img>\n          </Box>\n          <DialogContentText id=\"alert-dialog-description\" align='center'>\n              Your favorite tutor declined\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Book Again\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalDeclined.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalDeclined;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n}));\n\nconst ModalCancelled = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Cancelled\"}</DialogTitle>\n        <DialogContent>\n          <Box align='center' mb={2}>\n          <img width='100' src='../static/images/oli-sad.png'></img>\n          </Box>\n          <DialogContentText id=\"alert-dialog-description\" align='center'>\n              Your tutor has cancelled the session\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Book Again\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalCancelled.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalCancelled;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n  CircularProgress,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n}));\n\nconst ModalWaiting = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Waiting for Tutor Confirmation\"}</DialogTitle>\n        <DialogContent>\n          <Box align='center' mb={2}>\n          <img width='100' src='../static/images/boy-1.png'></img>\n          </Box>\n          <DialogContentText id=\"alert-dialog-description\" align='center'>\n              Waiting for tutor to accept extension\n          </DialogContentText>\n          <Box textAlign=\"center\" mb={3}>\n            <CircularProgress color=\"inherit\" />\n          </Box>\n        </DialogContent>\n    </Dialog>\n  );\n};\n\nModalWaiting.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalWaiting;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalSure = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n          <Box align='center' mb={2}>\n          <img width='100' src='../static/images/oli-sad.png'></img>\n          </Box>\n          <DialogContentText id=\"alert-dialog-description\" align='center' >\n              Are you sure?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Yes\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              No\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalSure.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalSure;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Button,\n  Box,\n  Container,\n  TextField,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  rootRate: {\n    // width: 200,\n    display: 'flex',\n  },\n}));\n\nconst RateTutor = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Rate Tutor\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <DialogContentText id=\"alert-dialog-description\" align='center'>\n              How was the session?\n          </DialogContentText>\n          <Box align='center' mb={2} >\n            <Avatar>CS</Avatar>\n          </Box>\n          \n          <Typography variant=\"h4\" align=\"center\" mb={5}>\n            Charles Samoy\n          </Typography>\n          <Box mb={3} align='center' size=\"large\">\n            <Rating\n              size=\"large\"\n              name=\"tutor-rate\"\n              defaultValue={0}\n              precision={0.5}\n              fontsize=\"large\"\n              icon={<StarIcon size=\"large\" />}\n            />\n          </Box>\n\n          <TextField \n            id=\"comments\" \n            label=\"Comments\" \n            variant=\"outlined\" fullWidth\n            multiline\n            rows={4}\n            />\n\n          <Box style={{textAlign: 'center'}} align='center' justify='center'>\n            <FormControlLabel\n              control={<Checkbox name=\"add-tutor\" />}\n              label=\"Add tutor to Favorite Tutor List\"\n              style={{textAlign: 'center'}} align='center'\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Report\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Finish\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nRateTutor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RateTutor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport StarIcon from '@material-ui/icons/Star';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PageviewIcon from '@material-ui/icons/Pageview';\n\nimport FeedbackIcon from '@material-ui/icons/Feedback';\n\n\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n  const rows = [\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Math',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Science',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'LoL',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n  ]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginBottom: \"15px\",\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n  const tableHeaders = props.tableHeaders;\n  const tableRows = props.tableRows;\n  \n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const renderHeaders =()=>{\n  \n    const headerLabels = tableHeaders.map((label, index)=>(\n      label === \"Date\" ?\n          <TableCell sortDirection=\"desc\">\n            <Tooltip\n                enterDelay={300}\n                title=\"Sort\"\n            >\n                <TableSortLabel\n                active\n                direction=\"desc\"\n                >\n                Date\n                </TableSortLabel>\n            </Tooltip>\n          </TableCell>\n        :\n          <TableCell>\n            {label}\n          </TableCell>\n        \n    ))\n\n\n    return (<TableRow>{headerLabels}</TableRow>)\n\n  };\n\n  const renderRows = () =>{\n    \n    if(tableRows != undefined){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((session, index) => {\n        return (\n            <TableRow\n                hover\n                key={session.id}\n            >\n                <TableCell>\n                {session.subject}\n                </TableCell>\n                <TableCell>\n                {session.topic}\n                </TableCell>\n                <TableCell>\n                {session.duration}\n                </TableCell>\n                <TableCell>\n                {session.student}\n                </TableCell>\n                <TableCell>\n                  <Box mx={1} component='span' align=\"center\" style={{textAlign: 'center'}}>\n                    <Button variant='contained' color='primary' startIcon={<PageviewIcon/>}>View</Button>\n                  </Box>\n                </TableCell>\n                \n            </TableRow>\n        );\n        })\n\n      return rowsResult\n    }\n\n    // if(rowsResult != undefined){\n    //   return (<TableRow>{rowsResult}</TableRow>)\n    // }\n    \n      // {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n      //   .map((session, index) => {\n      //   return (\n      //       <TableRow\n      //           hover\n      //           key={session.id}\n      //       >\n      //           <TableCell>\n      //           {session.date}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.time}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.subject}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.tutor.name}\n      //           </TableCell>\n      //           <TableCell>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='contained' color='primary'>View</Button>\n      //               </Box>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='contained' color='primary'>Chat</Button>\n      //               </Box>\n      //           </TableCell>\n      //       </TableRow>\n      //   );\n      //   })\n      // }\n  };\n\n  return (\n    <div className={classes.root}>\n        <TableContainer >\n          <Table\n            className={classes.table}\n            size={dense}\n          >\n            <TableHead>\n                {renderHeaders()}\n\n                {/* <TableRow>\n                    <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                        enterDelay={300}\n                        title=\"Sort\"\n                    >\n                        <TableSortLabel\n                        active\n                        direction=\"desc\"\n                        >\n                        Date\n                        </TableSortLabel>\n                    </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                    Time\n                    </TableCell>\n                    <TableCell>\n                    Subject\n                    </TableCell>\n                    <TableCell>\n                    Tutor\n                    </TableCell>\n                    <TableCell>\n                    </TableCell>\n                </TableRow> */}\n            </TableHead>\n            <TableBody>\n              {renderRows()}\n                {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((session, index) => {\n                    return (\n                        <TableRow\n                            hover\n                            key={session.id}\n                        >\n                            <TableCell>\n                            {session.date}\n                            </TableCell>\n                            <TableCell>\n                            {session.time}\n                            </TableCell>\n                            <TableCell>\n                            {session.subject}\n                            </TableCell>\n                            <TableCell>\n                            {session.tutor.name}\n                            </TableCell>\n                            <TableCell>\n                                <Box mx={1} component='span'>\n                                <Button variant='contained' color='primary'>View</Button>\n                                </Box>\n                                <Box mx={1} component='span'>\n                                <Button variant='contained' color='primary'>Chat</Button>\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    );\n                    })\n                } */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {/* <TablePagination\n          rowsPerPageOptions={[3]}\n          component=\"div\"\n          count={tableRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        /> */}\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    subject: \"Math\",\n    topic: \"Algebra\",\n    duration: \"1 hour\",\n    student: \"Rolo Pena\"\n  },\n \n]\n\nconst headers = [\"Subject\", \"Topic\", \"Duration\", \"Student\", \"Files\"]\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    // <Card\n    //   className={clsx(classes.root, className)}\n    //   {...rest}\n    // >\n    //   <CardHeader\n    //     title=\"Upcoming Sessions\"\n    //   />\n    //   <Divider />\n    //   <CardContent>\n        <Table tableHeaders={headers} tableRows={rows}/>\n    //   </CardContent>\n    // </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RequestSummary from './RequestSummary';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"100vh\",\n  },\n}));\n\nconst ModalRequest = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    fullWidth={true}\n    maxWidth={'md'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Request\"}</DialogTitle>\n        <DialogContent >\n          <RequestSummary/>\n          <Typography variant=\"body1\" mb={2}  mt={3}>\n            Special Request: None\n          </Typography>\n          <Box style={{textAlign:\"center\"}} mb={2}>\n          <FormControl component=\"fieldset\" >\n            <FormLabel component=\"legend\">Available Schedule</FormLabel>\n            <RadioGroup aria-label=\"sched-date\" name=\"sched-date\">\n              <FormControlLabel value=\"12/01/20\" control={<Radio />} label=\"December 1 2:00-4:00PM\" />\n              <FormControlLabel value=\"12/02/20\" control={<Radio />} label=\"December 2 1:00-3:00PM\" />\n              <FormControlLabel value=\"12/03/20\" control={<Radio />} label=\"December 3 4:00-6:00PM\" />\n            </RadioGroup>\n          </FormControl>\n          </Box>\n          \n          <Grid container style={{textAlign:\"center\"}}>\n          <Grid\n            item\n            lg={4}\n            md={4}\n            xl={4}\n            xs={0}\n          >\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={4}\n            xl={4}\n            xs={12}\n          >\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Start Time</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                \n                label=\"Start Time\"\n              >\n                <MenuItem value={\"14:00\"}>2:00PM</MenuItem>\n                <MenuItem value={\"14:30\"}>2:30PM</MenuItem>\n                <MenuItem value={\"15:00\"}>3:00PM</MenuItem>\n           \n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={4}\n            xl={4}\n            xs={0}\n          >\n          </Grid>\n          </Grid>\n \n        </DialogContent>\n        \n        \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Decline\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Accept\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalRequest;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RequestSummary from './RequestSummary';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalConfRequest = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    // fullWidth={true}\n    // maxWidth={'md'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Details Confirmation\"}</DialogTitle>\n        <DialogContent >\n          <Box mx={8}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Student\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Rolo Pena\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Subject\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Math\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Topic\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Algebra\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Duration\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  1 hour\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Special Request\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  None\n                </Typography>\n              </Grid>\n            </Grid>\n            <Box mt={8} mb={2}>\n              <Grid container spacing={2}>\n                <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                      Date\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='right'>\n                      December 3, 2020\n                    </Typography>\n                  </Grid>\n                  <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                    Time\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='right'>\n                    2:00PM - 3:00PM\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </DialogContent>\n        \n        \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Confirm\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalConfRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalConfRequest;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Button,\n  Box,\n  Container,\n  TextField,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  rootRate: {\n    // width: 200,\n    display: 'flex',\n  },\n}));\n\nconst ModalTutorProfile = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Tutor Profile\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <Box align='center' mb={2} >\n            <Avatar>CS</Avatar>\n          </Box>\n          \n          <Typography variant=\"h4\" align=\"center\" mb={2}>\n            Charles Samoy\n          </Typography>\n          <Typography variant=\"h6\" align=\"center\" mb={2}>\n            Ateneo de Manila University\n          </Typography>\n          <Typography variant=\"h6\" align=\"center\" mb={2}>\n            4 BS Information Technology Techpreneurship\n          </Typography>\n          <Typography variant=\"h6\" align=\"center\" mb={2}>\n            Lan Kwai's DJ of the Year 2019\n          </Typography>\n\n          <Box my={5}>\n            <Grid container spacing={2} style={{textAlign: 'center'}}>\n              <Grid xs={6}>\n                <Typography variant=\"h3\" align=\"center\" mb={2}>\n                  40\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" mb={2}>\n                  hours\n                </Typography>\n              </Grid>\n              <Grid xs={6}>\n                <Typography variant=\"h4\" align=\"center\" mb={2}>\n                  40\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" mb={2}>\n                  Students\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </DialogContent>\n    </Dialog>\n  );\n};\n\nModalTutorProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalTutorProfile;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Button,\n  Box,\n  Container,\n  TextField,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  choicesBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    \"&:hover\": {\n      backgroundColor: '#75c2b7',\n      color: 'white !important',\n    }\n  },\n  selectedBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    backgroundColor: '#75c2b7',\n    color: 'white',\n  },\n  exitBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #EB5531',\n    color: '#EB5531',\n    \"&:hover\": {\n      backgroundColor: '#EB5531',\n      color: 'white !important',\n    }\n  },\n  selectExitBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #EB5531',\n    backgroundColor: '#EB5531',\n    color: 'white',\n  },\n}));\n\nconst ModalTutorProfile = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  const [extendMins, setExtendMins] =  React.useState(false);\n  const [extendHour, setExtendHour] =  React.useState(false);\n  const [endSession, setEndSession] =  React.useState(false);\n\n  function buttonClick(type){\n \n    if(type == 'extendMins'){\n      setExtendMins(true);\n      setExtendHour(false);\n      setEndSession(false);\n    }else if(type == 'extendHour'){\n      setExtendMins(false);\n      setExtendHour(true);\n      setEndSession(false);\n    }else if(type == 'endSession'){\n      setExtendMins(false);\n      setExtendHour(false);\n      setEndSession(true);\n    }\n\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    fullWidth={true}\n    maxWidth={'sm'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Tutor Profile\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <Box align='center' mb={6} >\n            <Typography variant=\"h4\" align=\"center\" mb={2}>\n              End Session?\n            </Typography>\n          </Box>\n\n          <Box py={6}>\n            \n            <Grid container spacing={2} \n              alignItems=\"center\"\n              justify=\"center\"\n              style={{placeItems: 'center', textAlign: 'center'}}>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={12}\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{placeItems: 'center'}}\n                className={classes.buttonContainer}\n              >\n                <Button className={ !extendMins? classes.choicesBtn : classes.selectedBtn} onClick={()=>buttonClick('extendMins') } variant=\"outlined\">\n                  Extend 30 Minutes\n                </Button>\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={12}\n              >\n                \n                <Button className={ !extendHour? classes.choicesBtn : classes.selectedBtn} onClick={()=>buttonClick('extendHour') } variant=\"outlined\">\n                  Extend 1 Hour\n                </Button>\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={4}\n                xl={4}\n                xs={12}\n              >\n                {/* <FormControlLabel value=\"20 hours P9,000\" control={<Radio color=\"primary\" />} label=\"20 hours P9,000\" /> */}\n                <Button className={ !endSession? classes.exitBtn : classes.selectExitBtn} onClick={()=>buttonClick('endSession') } variant=\"outlined\">\n                  End\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          \n          <Box my={5}>\n            <Typography variant=\"body1\" align=\"center\" >\n            Extending the session means you agree to pay for the extension fee (550 for 1 hour and 300 for 20 minutes). You will be charged once the tutor accepts.\n            </Typography>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n              Done\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalTutorProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalTutorProfile;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Button,\n  Box,\n  Container,\n  TextField,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  choicesBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    \"&:hover\": {\n      backgroundColor: '#75c2b7',\n      color: 'white !important',\n    }\n  },\n  selectedBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #75c2b7',\n    backgroundColor: '#75c2b7',\n    color: 'white',\n  },\n  exitBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #EB5531',\n    color: '#EB5531',\n    \"&:hover\": {\n      backgroundColor: '#EB5531',\n      color: 'white !important',\n    }\n  },\n  selectExitBtn: {\n    width: \"17vh\",\n    height: \"17vh\",\n    borderRadius: 15,\n    // boxShadow: \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    border: '2px solid #EB5531',\n    backgroundColor: '#EB5531',\n    color: 'white',\n  },\n}));\n\nconst TutorExtensionForm = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  const [accept, setAccept] =  React.useState(false);\n  const [decline, setDecline] =  React.useState(false);\n \n\n  function buttonClick(type){\n \n    if(type == 'accept'){\n      setAccept(true);\n      setDecline(false);\n    }else if(type == 'decline'){\n      setAccept(false);\n      setDecline(true);\n    }\n\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    fullWidth={true}\n    maxWidth={'sm'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Extension\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <Box align='center' mb={3} >\n            <Typography variant=\"h5\" align=\"center\" mb={2}>\n              The parent wants to extend the session by 1 hour.\n            </Typography>\n          </Box>\n\n          <Box py={6}>\n            \n            <Grid container spacing={2} \n              alignItems=\"center\"\n              justify=\"center\"\n              style={{placeItems: 'center', textAlign: 'center'}}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={12}\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{placeItems: 'center'}}\n                className={classes.buttonContainer}\n              >\n                <Button className={ !accept? classes.choicesBtn : classes.selectedBtn} onClick={()=>buttonClick('accept') } variant=\"outlined\">\n                  Accept\n                </Button>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={12}\n              >\n                {/* <FormControlLabel value=\"20 hours P9,000\" control={<Radio color=\"primary\" />} label=\"20 hours P9,000\" /> */}\n                <Button className={ !decline? classes.exitBtn : classes.selectExitBtn} onClick={()=>buttonClick('decline') } variant=\"outlined\">\n                  Decline\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          \n          <Box my={5}>\n            <Typography variant=\"body1\" align=\"center\" >\n              Accepting the extension will bring you directly to the video call.\n            </Typography>\n          </Box>\n        </DialogContent>\n        {/* <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n              Done\n          </Button>\n        </DialogActions> */}\n    </Dialog>\n  );\n};\n\nTutorExtensionForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TutorExtensionForm;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  rootRate: {\n    // width: 200,\n    display: 'flex',\n  },\n}));\n\nconst FaveTutorDecline = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Reason for Declining Session\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n          <DialogContentText> \n            <Typography variant=\"h6\" align=\"center\" mb={5}>\n              (for fave tutors only)\n            </Typography>\n            <Typography variant=\"h4\" align=\"center\" mb={5}>\n              Session Declined\n            </Typography>\n          </DialogContentText> \n\n          <Box my={5}>\n            <TextField \n              id=\"reason\" \n              label=\"Reason\" \n              variant=\"outlined\" fullWidth\n              multiline\n              rows={4}\n              placeholder=\"Optional\"\n              />\n          </Box>\n            \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Confirm\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nFaveTutorDecline.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FaveTutorDecline;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  },\n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  rootRate: {\n    // width: 200,\n    display: 'flex',\n  },\n}));\n\nconst ModalTutorCancelling = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    \n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Reason for Declining Session\"}</DialogTitle>\n        <DialogContent className={classes.dialogStyle}>\n        \n\n          <Box my={3}>\n            <TextField \n              id=\"reason\" \n              label=\"Reason\" \n              variant=\"outlined\" fullWidth\n              multiline\n              rows={4}\n              placeholder=\"(Optional)\"\n              />\n          </Box>\n\n          <Typography variant=\"body1\" align=\"center\" >\n          *Cancelling multiple sessions less than 48 hours before the session will put you on probation. Check <a>Tutor Policies</a> for more details.\n          </Typography>\n            \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Exit\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Cancel Session\n          </Button>\n        </DialogActions>\n    </Dialog>\n  );\n};\n\nModalTutorCancelling.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalTutorCancelling;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nimport PayMongo from './PayMongo'\nimport Brankas from './Brankas'\nimport Zoom from './Zoom'\nimport Twilio from './Twilio'\nimport Email from './Email'\nimport RandomFact from './RandomFact'\nimport Chat from './Chat'\nimport ModalSessionExtension from './ModalSessionExtension';\nimport ModalDeclined from './ModalDeclined'; \nimport ModalCancelled from './ModalCancelled';\nimport ModalWaiting from './ModalWaiting';\nimport ModalSure from './ModalSure'; //generic are you sure\nimport RateTutor from './RateTutor'; //parent rating tutor\nimport ModalRequest from './ModalRequest'; //Tutor viewing \nimport ModalConfRequest from './ModalConfRequest';\nimport ModalTutorProfile from './ModalTutorProfile'; //profile dets of tutor\nimport ExtensionPrompt from './ExtensionPrompt'; //asking parent if she wants an extension\nimport TutorExtensionForm from './TutorExtensionForm'; //asking tutor if he accepts the extension\nimport FaveTutorDecline from './FaveTutorDecline'; //tutor declining a session\nimport ModalTutorCancelling from './ModalTutorCancelling'; //tutor giving reason for cancelling before actually cancelling\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Playground\"\n    >\n      <Container maxWidth={false}>\n        <Box mb={4}>\n          <Typography variant=\"h4\">\n            Did you know?\n          </Typography>\n          <RandomFact/>\n        </Box>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <PayMongo/>\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <Email/>\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <Twilio/>\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <Zoom/>\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <Brankas/>\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <Chat/>\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <React.Fragment>\n              <CardContent>\n                <Button onClick={handleClickOpen} variant='contained' color='primary'>\n                  Modal Test\n                </Button>\n                {/* <ModalSessionExtension open={open} setOpen={setOpen}/> */}\n                {/* <ModalCancelled open={open} setOpen={setOpen}/> */}\n                {/* <ModalWaiting open={open} setOpen={setOpen}/> */}\n                {/* <ModalSure open={open} setOpen={setOpen}/> */}\n                {/* <RateTutor open={open} setOpen={setOpen}/> */}\n                {/* <ModalRequest open={open} setOpen={setOpen}/> */}\n                {/* <ModalConfRequest open={open} setOpen={setOpen}/> */}\n                {/* <ModalTutorProfile open={open} setOpen={setOpen}/> */}\n                {/* <ExtensionPrompt open={open} setOpen={setOpen}/> */}\n                {/* <TutorExtensionForm open={open} setOpen={setOpen}/> */}\n                {/* <FaveTutorDecline open={open} setOpen={setOpen}/> */}\n                <ModalTutorCancelling open={open} setOpen={setOpen}/>\n              </CardContent>\n            </React.Fragment>\n          </Grid>\n        </Grid>\n        \n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component, useState } from \"react\";\nimport 'intro.js/introjs.css';\nimport { Steps } from 'intro.js-react';\n\nfunction Tutorial(props) {\n    const [enabled, setEnable] = useState(false);\n\n    if(!enabled){\n      if(localStorage.getItem('steps') == undefined){\n        setEnable(true)\n      }\n    }\n\n    const onExit = () => {\n      localStorage.setItem('steps','done')\n      setEnable(false)\n    }\n\n    const steps = [\n      {\n        intro: 'Hello! Welcome to AKADS!'\n      },\n      {\n        element: '#selector1',\n        intro: 'Hello!',\n        // position: 'right',\n        // tooltipClass: 'myTooltipClass',\n        // highlightClass: 'myHighlightClass',\n      },\n      {\n        element: '#selector2',\n        intro: 'Hi!',\n      },\n      {\n        element: '#selector3',\n        intro: 'Hola!',\n      },\n    ];\n\n    return (\n      <Steps\n        enabled={enabled}\n        steps={steps}\n        initialStep={0}\n        onExit={onExit}\n      />\n    );\n}\n\nexport default Tutorial;","import React, { Component, Fragment, useState } from 'react';\nimport { Container, Fade, makeStyles } from '@material-ui/core';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nimport MainLayout from 'src/layouts/MainLayout';\nimport AccountView from 'src/views/account/AccountView';\nimport FindTutorView from 'src/views/customer/FindTutorView';\nimport DashboardView from 'src/views/reports/DashboardView';\nimport AuthView from 'src/views/test/AuthView';\nimport NotFoundView from 'src/views/errors/NotFoundView.jsx';\nimport ProductListView from 'src/views/product/ProductListView';\nimport SettingsView from 'src/views/settings/SettingsView';\nimport TutorDashboardView from 'src/views/TutorDashboardView';\nimport ChatView from 'src/views/chat';\nimport LandingPage from 'src/LandingPage';\nimport Login from 'src/components/login';\nimport CreditStoreView from 'src/views/CreditStore';\nimport Loading from 'src/components/loading';\nimport NoHourView from 'src/components/NoHourView';\nimport PlaygroundView from 'src/views/test/PlaygroundView';\nimport Messenger from 'src/views/chat';\nimport ReactGifted from 'src/components/ReactGiftedChat';\n\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Tutorial from 'src/components/Tutorial';\nimport 'intro.js/introjs.css';\nimport { Steps } from 'intro.js-react';\nimport {Widget} from 'react-chat-widget';\nimport 'src/ChatWidget.css';\nimport oli from 'src/oli.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\n\nfunction DashboardLayout (props){\n  let classes = useStyles();\n  let match = useRouteMatch();\n  let location = useLocation();\n  const [loaded, setLoaded] = useState(false);\n  let [userData, setUserData] = useState();\n  \n\n  if(!loaded){\n    props.getUserData((userData) => {\n      setUserData(userData);\n      setLoaded(true);\n    })\n  }\n\n  return (\n    <div>\n\n    {loaded ? \n    <div className={classes.root}>\n      <TopBar credits={props.credits}/>\n      {/* <Tutorial enabled={true}/> */}\n      {/* <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      /> */}\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <TransitionGroup>\n            \n            <CSSTransition key={location.key} in={true} timeout={{ enter: 300, exit: 300}} classNames={'fade'}>\n\n            <Switch location={location}>\n              <Route exact path={`${match.url}`}>\n                <Container>\n                  <Fragment>\n                    <DashboardView first_name={userData['accountview']['first_name']} credits={props.credits} {...userData['dashboardview']}></DashboardView>\n                  </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}findtutor`}>\n                <Container>\n                <Fragment>\n                  {props.credits == 0 ?\n                    <NoHourView/>\n                  :\n                    <FindTutorView credits={props.credits} {...userData['findtutorview']}/>\n                  }\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}store`}>\n                <Container>\n                <Fragment>\n                  <CreditStoreView addCredit={props.addCredit}/>\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}account`}>\n                <Container>\n                <Fragment>\n                  <AccountView {...userData['accountview']}/>\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}settings`}>\n                <Container>\n                <Fragment>\n                  <SettingsView {...userData['settingsview']}/>\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}messages`}>\n                <Fragment>\n                  <Messenger/> \n                </Fragment>\n              </Route>\n              <Route exact path={`${match.url}playground`}>\n                <Fragment>\n                  <PlaygroundView/>\n                </Fragment>\n              </Route>\n              <Route path='*' component={NotFoundView} /> \n            </Switch>\n\n\n            </CSSTransition>\n\n            </TransitionGroup>\n          </div>\n        </div>\n      </div>\n      {/* <Widget\n      profileAvatar={'src/oli.svg'}\n      title={'Hello there!'}\n      subtitle={'Ask me anything'}\n      /> */}\n    </div>\n    :\n    <Fade in={!loaded}>\n      <Loading/>\n    </Fade>\n    }\n\n    </div>\n\n  );\n\n\n}\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\n\nconst user = {\n  avatar: '/static/images/avatars/rolo.png',\n  jobTitle: 'Professional Breather',\n  name: 'Rolo Pena'\n};\n\nconst items = [\n  {\n    href: '/parent/dashboard',\n    icon: BarChartIcon,\n    title: 'Overview'\n  },\n  {\n    href: '/parent/customers',\n    icon: UsersIcon,\n    title: 'Book A Tutor'\n  },\n  // {\n  //   href: '/parent/products',\n  //   icon: ShoppingBagIcon,\n  //   title: 'Products'\n  // },\n  {\n    href: '/parent/account',\n    icon: UserIcon,\n    title: 'Profile'\n  },\n  {\n    href: '/parent/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  },\n  {\n    href: '/parent/playground',\n    icon: SportsEsportsIcon,\n    title: 'Testing Grounds'\n  },\n  {\n    href: '/parent/tutor-dashboard',\n    icon: BarChartIcon,\n    title: 'Tutor Dashboard'\n  },\n  // {\n  //   href: '/parent/authorization/login',\n  //   icon: LockIcon,\n  //   title: 'Login'\n  // },\n  // {\n  //   href: '/parent/authorization/register',\n  //   icon: UserPlusIcon,\n  //   title: 'Register'\n  // },\n  // {\n  //   href: '/parent/404',\n  //   icon: AlertCircleIcon,\n  //   title: 'Error'\n  // }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.avatar}\n          to=\"/account\"\n        />\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n  Container,\n  Grid,\n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from 'src/components/Logo';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport BookIcon from '@material-ui/icons/Book';\nimport StoreIcon from '@material-ui/icons/Store';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport FaceIcon from '@material-ui/icons/Face';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport InsertInvitationIcon from '@material-ui/icons/InsertInvitation';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport Notifications from \"react-notifications-menu\";\nimport { useConfirm } from 'material-ui-confirm';\nimport 'src/React-Notifs.css'\n\nimport 'intro.js/introjs.css';\nimport { Steps } from 'intro.js-react';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className, credits, notifications,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const anchor = 'left';\n  const [notifs, setNotif] = useState(notifications)\n  const [chatNotif, setChatNotif] = useState(true)\n  const confirm = useConfirm();\n  const logout = () => {\n    confirm({ title:'Logout' , description: 'Would you like to logout?' })\n      .then(() => {\n        localStorage.clear()\n        window.location.replace('/')\n      })\n      .catch(() => {\n      });\n  }\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Overview', 'Book A Tutor', 'Buy Credits', 'Profile', 'Settings'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden xsDown>\n        <Container>\n\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item sm={2}>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/\">\n                <DashboardIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Overview\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid sm={2}>\n              <IconButton color=\"inherit\" href=\"#/viewrequest\">\n                <InsertInvitationIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Requests\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/payout\">\n                <AccountBalanceWalletIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Payout\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/account\">\n                <AccountCircleIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Profile\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n            <Grid item sm={2}>\n              <IconButton color=\"inherit\" href=\"#/settings\">\n                <SettingsIcon/>\n                <Hidden mdDown>\n                  <Box mx={1}>\n                    <h5>\n                      Settings\n                    </h5>\n                  </Box>\n                </Hidden>\n              </IconButton>\n            </Grid>\n          </Grid>\n\n        </Container>\n\n        </Hidden>\n        <Box flexGrow={1} />\n\n        <Hidden xsDown>\n          <Box mx={4}>\n            {/* <h5>\n              Hours: {credits}\n            </h5> */}\n          </Box>\n        </Hidden>\n        <IconButton onClick={() => setChatNotif(false)} color=\"inherit\" href=\"#/messages\">\n          {chatNotif ?\n          <Badge\n            color=\"secondary\"\n            variant=\"dot\"\n          >\n            <ForumIcon/>\n          </Badge>\n          :\n            <ForumIcon/>\n          }\n        </IconButton>\n        <IconButton onClick={() => setNotif([])} color=\"inherit\">\n          {/* <Badge\n            badgeContent={2}\n            color=\"secondary\"\n            variant=\"dot\"\n          > */}\n            {/* <NotificationsIcon /> */}\n            <Notifications\n              // data={data}\n              data={notifs}\n              header={{\n                title: 'Notifications',\n                option: { text: 'View All', onClick: () => console.log('Clicked') },\n              }}\n              markAsRead={data => console.log(data)}\n            />\n          {/* </Badge> */}\n        </IconButton>\n        <IconButton onClick={logout} color=\"inherit\">\n            <MeetingRoomIcon/>\n        </IconButton>\n        <Hidden smUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden smUp>\n        <SwipeableDrawer\n      anchor={anchor}\n      open={state[anchor]}\n      onClose={toggleDrawer(anchor, false)}\n      onOpen={toggleDrawer(anchor, true)}\n    >\n      {list(anchor)}\n    </SwipeableDrawer>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className, props, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box \n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Box my={2}>\n            <Avatar\n              className={classes.avatar}\n              src={props.picture}\n            />\n          </Box>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {props.first_name} {props.last_name}\n          </Typography>\n          {/* <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} ${user.country}`}\n          </Typography> */}\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, props, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: props.first_name,\n    lastName: props.last_name,\n    email: props.email,\n    phone: props.phone,\n    state: 'NCR',\n    country: 'Philippines'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            {/* <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid> */}\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  props: PropTypes.array\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport StarIcon from '@material-ui/icons/Star';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PageviewIcon from '@material-ui/icons/Pageview';\n\nimport FeedbackIcon from '@material-ui/icons/Feedback';\n\n\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n  const rows = [\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Math',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Science',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'LoL',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n  ]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {/* {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )} */}\n      <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n      </IconButton>\n      {/* {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )} */}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n  const tableHeaders = props.tableHeaders;\n  const tableRows = props.tableRows;\n  // const sessionType = props.sessionType;\n  const tableType = props.type;\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const renderHeaders =()=>{\n  \n    const headerLabels = tableHeaders.map((label, index)=>(\n      label === \"Date\" ?\n          <TableCell sortDirection=\"desc\">\n            <Tooltip\n                enterDelay={300}\n                title=\"Sort\"\n            >\n                <TableSortLabel\n                active\n                direction=\"desc\"\n                >\n                Date\n                </TableSortLabel>\n            </Tooltip>\n          </TableCell>\n        :\n          <TableCell>\n            {label}\n          </TableCell>\n        \n    ))\n\n\n    return (<TableRow>{headerLabels}</TableRow>)\n\n  };\n\n  const renderRows = () =>{\n    \n    if(tableRows != undefined){\n      if(tableType == \"childList\"){\n          const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((child, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={child.id}\n              >\n                  <TableCell>\n                  {child.name}\n                  </TableCell>\n                  <TableCell>\n                  {child.age}\n                  </TableCell>\n                  <TableCell>\n                  {child.gradeLevel}\n                  </TableCell>\n                  <TableCell>\n                  {child.school}\n                  </TableCell>                  \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary' >Edit</Button>\n                      </Box>\n                      {/* <Box mx={1} component='span'>\n                      <Button variant='outlined' color='primary'>Delete</Button>\n                      </Box> */}\n                  </TableCell>\n              </TableRow>\n          );\n          })\n\n        return rowsResult\n        \n      }else if(tableType == \"faveTutorList\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((tutor, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={tutor.id}\n              >\n                  <TableCell>\n                  {tutor.name}\n                  </TableCell>\n                  <TableCell>\n                  {tutor.subject}\n                  </TableCell>\n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary'>Remove</Button>\n                      </Box>\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }else if(tableType == \"subjectList\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((tutor, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={tutor.id}\n              >\n\n                  <TableCell>\n                  {tutor.subject}\n                  </TableCell>\n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary'>Remove</Button>\n                      </Box>\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }\n      \n    }\n\n    // if(rowsResult != undefined){\n    //   return (<TableRow>{rowsResult}</TableRow>)\n    // }\n    \n      // {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n      //   .map((session, index) => {\n      //   return (\n      //       <TableRow\n      //           hover\n      //           key={session.id}\n      //       >\n      //           <TableCell>\n      //           {session.date}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.time}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.subject}\n      //           </TableCell>\n      //           <TableCell>\n      //           {session.tutor.name}\n      //           </TableCell>\n      //           <TableCell>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>View</Button>\n      //               </Box>\n      //               <Box mx={1} component='span'>\n      //               <Button variant='outlined' color='primary'>Chat</Button>\n      //               </Box>\n      //           </TableCell>\n      //       </TableRow>\n      //   );\n      //   })\n      // }\n  };\n\n  return (\n    <div className={classes.root}>\n        {/* <EnhancedTableToolbar/> */}\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size={dense}\n          >\n            <TableHead>\n                {renderHeaders()}\n\n                {/* <TableRow>\n                    <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                        enterDelay={300}\n                        title=\"Sort\"\n                    >\n                        <TableSortLabel\n                        active\n                        direction=\"desc\"\n                        >\n                        Date\n                        </TableSortLabel>\n                    </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                    Time\n                    </TableCell>\n                    <TableCell>\n                    Subject\n                    </TableCell>\n                    <TableCell>\n                    Tutor\n                    </TableCell>\n                    <TableCell>\n                    </TableCell>\n                </TableRow> */}\n            </TableHead>\n            <TableBody>\n              {renderRows()}\n                {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((session, index) => {\n                    return (\n                        <TableRow\n                            hover\n                            key={session.id}\n                        >\n                            <TableCell>\n                            {session.date}\n                            </TableCell>\n                            <TableCell>\n                            {session.time}\n                            </TableCell>\n                            <TableCell>\n                            {session.subject}\n                            </TableCell>\n                            <TableCell>\n                            {session.tutor.name}\n                            </TableCell>\n                            <TableCell>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>View</Button>\n                                </Box>\n                                <Box mx={1} component='span'>\n                                <Button variant='outlined' color='primary'>Chat</Button>\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                    );\n                    })\n                } */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[3]}\n          component=\"div\"\n          count={tableRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    name: 'Nate Mercado',\n    age: '14',\n    gradeLevel:'Grade 10',\n    school: 'Ateneo High School'\n  },\n  {\n    name: 'Nate Mercado',\n    age: '10',\n    gradeLevel:'Grade 6',\n    school: 'Ateneo High School'\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Name\", \"Age\", \"Grade Level\", \"School\", \"\"]\n\n// const sessionType = \"childrenList\"\n\nconst type = \"childList\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Children = ({ className, children, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const rows = []\n  children.map((child) => {\n    rows.push({\n      'name':child.first_name + ' ' + child.last_name,\n      'age':child.age,\n      'gradeLevel':child.year_level,\n      'school':child.school,\n    })\n  })\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Your Children\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nChildren.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Children;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  // {\n  //   name: 'Adam Crisostomo',\n  //   subject: 'English'\n  // },\n  // {\n  //   name: 'Carl Castillo',\n  //   subject: 'Math'\n  // },\n  // {\n  //   name: 'Eedijk Roque',\n  //   subject: 'Science'\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Name\", \"Subject\", \"\"]\n\n// const sessionType = \"childrenList\"\n\nconst type = \"faveTutorList\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Children = ({ className, favtutors, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Favorite Tutors\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nChildren.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Children;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    subject : 'Math',\n  },\n  {\n    subject : 'Science',\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Subject\", \"\"]\n\n// const sessionType = \"childrenList\"\n\nconst type = \"subjectList\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Children = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Your Subject Area\"\n      />\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nChildren.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Children;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, totalEarnings, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Total Earnings\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              Php {totalEarnings}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AttachMoneyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.orange[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst AveRating = ({ className, aveRating, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Average Rating\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {aveRating}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <StarBorderIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAveRating.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AveRating;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalStudents = ({ className, noStudents, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              # of Students\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {noStudents}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalStudents.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalStudents;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, totalHours, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              Total Hours\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {totalHours}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <HourglassEmptyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box, Grid, Container} from '@material-ui/core';\n\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TimelineIcon from '@material-ui/icons/Timeline';\n\nimport TotalProfit from './TotalProfit';\nimport AveRating from './AveRating';\nimport TotalStudents from './TotalStudents';\nimport TotalHours from './TotalHours';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      // margin: theme.spacing(1),\n      // width: theme.spacing(16),\n      // height: theme.spacing(16),\n      // margin: '5vh',\n      width: '110vh',\n      height: '25vh',\n      // marginBottom: '10vh',\n      padding: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function BoxContent(props) {\n  const classes = useStyles();\n  const noStudents = props.noStudents;\n  const aveRating = props.aveRating;\n  const totalHours = props.totalHours;\n  const totalEarnings = props.totalEarnings;\n\n\n  return (\n  \n    <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n\n          <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={12}\n          >\n            <AveRating aveRating={aveRating}/>\n          </Grid>\n          <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={12}\n          >  \n            <TotalStudents noStudents={noStudents}/>\n            </Grid>\n            <Grid\n            item\n            lg={6}\n            sm={6}\n            xl={6}\n            xs={12}\n            >\n                <TotalHours totalHours={totalHours}/>\n            </Grid>\n            <Grid\n              item\n              lg={6}\n              sm={6}\n              xl={6}\n              xs={12}\n            >\n                <TotalProfit totalEarnings={totalEarnings}/>\n                {/* <div className={classes.root}>\n                  <Paper elevation={3}>Total Earnings</Paper>\n                </div> */}\n            </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n          </Grid>\n        </Grid>\n    </Container>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  Typography,\n} from '@material-ui/core';\n\nimport MetricsBoxes from './MetricsBoxes';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Metrics = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    // <Card\n    //   className={clsx(classes.root, className)}\n    //   {...rest}\n    // >\n    //   <CardHeader\n    //     title=\"Upcoming Sessions\"\n    //   />\n    //   <Divider />\n    //   <CardContent>\n    //     <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n    //   </CardContent>\n    // </Card>\n   <React.Fragment>\n   <Divider/>\n    <Grid container spacing={2}>\n      <Grid\n        item\n        lg={12}\n        md={12}\n        xl={12}\n        xs={12}\n      >\n      <Box mt={2}>\n        <Typography variant='h1'>\n          Metrics\n        </Typography>\n      </Box>\n      </Grid>\n      <Grid\n        item\n        lg={6}\n        md={6}\n        xl={6}\n        xs={12}\n      >\n        <Box mb={2}>\n         <Typography variant='h2' align='center' gutterBottom='true'>\n            This Month\n          </Typography>\n        </Box>\n          <MetricsBoxes noStudents={0} aveRating={'N/A'} totalHours={0} totalEarnings={0}/>\n      </Grid>\n      <Grid\n        item\n        lg={6}\n        md={6}\n        xl={6}\n        xs={12}\n      >\n        <Box mb={2}>\n          <Typography variant='h2' align='center' gutterBottom='true'>\n            All-Time\n          </Typography>\n        </Box>\n        <MetricsBoxes noStudents={0} aveRating={'N/A'} totalHours={0} totalEarnings={0}/>\n      </Grid>\n    </Grid>\n    </React.Fragment>\n  );\n};\n\nMetrics.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Metrics;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\nimport Children from './Children';\nimport FaveTutors from './FaveTutors'; \nimport SubjectArea from './SubjectArea';\nimport Metrics from './Metrics';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst TutorAccountView = (props) => {\n  const classes = useStyles();\n  const accountType = 'parent';\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Profile\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          direction=\"row\"\n          alignItems=\"center\"\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            {/* <Box flexGrow={1}/> */}\n            <Profile props={props}/>\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails props={props}/>\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <Metrics/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default TutorAccountView;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    // DialogTitle,\n  } from '@material-ui/core';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport RequestSummary from '../RequestPage/RequestSummary';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalConfRequest = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    // fullWidth={true}\n    // maxWidth={'md'}\n    >\n        <DialogTitle onClose={handleClose} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Session Details\"}</DialogTitle>\n        <DialogContent >\n          <Box mx={8}>\n            <Grid container spacing={2}>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Student\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Rolo Pena\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Subject\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Math\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Topic\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  Algebra\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Duration\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  1 hour\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                  Special Request\n                </Typography>\n              </Grid>\n              <Grid\n                item\n                lg={6}\n                md={6}\n                xl={6}\n                xs={6}\n              >\n                <Typography variant='h6' align='right'>\n                  None\n                </Typography>\n              </Grid>\n            </Grid>\n            <Box mt={8} mb={2}>\n              <Grid container spacing={2}>\n                <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                      Date\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={6}\n                    md={6}\n                    xl={6}\n                    xs={6}\n                  >\n                    <Typography variant='h6' align='right'>\n                      December 3, 2020\n                    </Typography>\n                  </Grid>\n                  <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='left' style={{fontWeight: 'bold'}}>\n                    Time\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  lg={6}\n                  md={6}\n                  xl={6}\n                  xs={6}\n                >\n                  <Typography variant='h6' align='right'>\n                    2:00PM - 3:00PM\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </DialogContent>\n{/*         \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n              Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Confirm\n          </Button>\n        </DialogActions> */}\n    </Dialog>\n  );\n};\n\nModalConfRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalConfRequest;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport {Button, Box} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport StarIcon from '@material-ui/icons/Star';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PageviewIcon from '@material-ui/icons/Pageview';\n\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport ModalSessionDetails from './ModalSessionDetails'\n\n\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n  const rows = [\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Math',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Science',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'LoL',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n    {\n      date: 'July 7',\n      time: '4 PM',\n      subject: 'Filipino',\n      tutor: {\n        name: 'Adrienne Soliven'\n      },\n    },\n  ]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n  const tableHeaders = props.tableHeaders;\n  const tableRows = props.tableRows;\n  const sessionType = props.sessionType;\n  const tableType = props.type;\n  const [openSessionDets, setOpenSessionDets] = React.useState(false);\n\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const renderHeaders =()=>{\n  \n    const headerLabels = tableHeaders.map((label, index)=>(\n      label === \"Date\" ?\n          <TableCell sortDirection=\"desc\">\n            <Tooltip\n                enterDelay={300}\n                title=\"Sort\"\n            >\n                <TableSortLabel\n                active\n                direction=\"desc\"\n                >\n                Date\n                </TableSortLabel>\n            </Tooltip>\n          </TableCell>\n        :\n          <TableCell>\n            {label}\n          </TableCell>\n        \n    ))\n\n\n    return (<TableRow>{headerLabels}</TableRow>)\n\n  };\n\n  const renderRows = () =>{\n    \n    if(tableRows != undefined){\n      if(tableType == \"session\"){\n          const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((session, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={session.id}\n              >\n                  <TableCell>\n                  {session.date}\n                  </TableCell>\n                  <TableCell>\n                  {session.time}\n                  </TableCell>\n                  <TableCell>\n                  {session.subject}\n                  </TableCell>\n                  <TableCell>\n                  {session.duration}\n                  </TableCell>\n                  <TableCell>\n                  {session.student}\n                  </TableCell>\n                  <TableCell>\n                  {session.grade}\n                  </TableCell>\n                  <TableCell>\n                  {session.status}\n                  </TableCell>\n                  <TableCell>\n                  {session.payout}\n                  </TableCell>\n                  \n                  \n                  {sessionType == \"payout\" ? \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary' startIcon={<PageviewIcon/>} onClick={() => setOpenSessionDets(true)}>View</Button>\n                        <ModalSessionDetails open={openSessionDets} setOpen={setOpenSessionDets}/>\n                      </Box>\n                     \n                  </TableCell>\n                  :\n                 \n                  <TableCell>\n                      <Box mx={1} component='span'>\n                        <Button variant='outlined' color='primary' startIcon={<FeedbackIcon/>}>Give Feedback</Button>\n                      </Box>\n                  </TableCell>\n                  }\n              </TableRow>\n          );\n          })\n\n        return rowsResult\n        \n      }else if(tableType == \"transaction\"){\n        const rowsResult = tableRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n          .map((transaction, index) => {\n          return (\n              <TableRow\n                  hover\n                  key={transaction.id}\n              >\n                  <TableCell>\n                  {transaction.date}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.time}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.subject}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.student}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.parent}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.amount}\n                  </TableCell>\n                  <TableCell>\n                  {transaction.sessionNo}\n                  </TableCell>\n              </TableRow>\n          );\n          })\n        \n        return rowsResult;\n      }\n      \n    }\n\n    \n  };\n\n  return (\n    <div className={classes.root}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size={dense}\n          >\n            <TableHead>\n                {renderHeaders()}\n\n                \n            </TableHead>\n            <TableBody>\n              {renderRows()}\n                \n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[3]}\n          component=\"div\"\n          count={tableRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    date: 'September 29',\n    time: '4 PM',\n    subject: 'Filipino',\n    duration: '1 hr',\n    student: 'Rolo Pena',\n    grade: 'Grade 10',\n    status: 'Completed',\n    payout: 'P300'\n  },\n  {\n    date: 'September 30',\n    time: '4 PM',\n    subject: 'Math',\n    duration: '1 hr',\n    student: 'Rolo Pena',\n    grade: 'Grade 10',\n    status: 'Completed',\n    payout: 'P300'\n  },\n  {\n    date: 'October 1',\n    time: '4 PM',\n    subject: 'Science',\n    duration: '1 hr',\n    student: 'Rolo Pena',\n    grade: 'Grade 10',\n    status: 'Completed',\n    payout: 'P300'\n  },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'LoL',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n  // {\n  //   date: 'July 7',\n  //   time: '4 PM',\n  //   subject: 'Filipino',\n  //   tutor: {\n  //     name: 'Adrienne Soliven'\n  //   },\n  // },\n]\n\nconst headers = [\"Date\", \"Time\", \"Subject\", \"Duration\", \"Student\", \"Grade\", \"Status\", \"Payout\", \"\"]\n\nconst sessionType = \"payout\"\n\nconst type = \"session\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst WeeklySessions = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <CardHeader\n        title=\"Upcoming Sessions\"\n      /> */}\n      <Divider />\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nWeeklySessions.propTypes = {\n  className: PropTypes.string\n};\n\nexport default WeeklySessions;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n  TextField,\n  InputAdornment,\n  Snackbar,\n  Typography, \n  IconButton,\n  Backdrop,\n} from '@material-ui/core';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    Modal\n    // DialogTitle,\n  } from '@material-ui/core';\n\n  \nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\n  \nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  },\n  closeButton: {\n    float:'right', marginTop: '5px'\n\n  },\n  dialogTitle:{\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '4px 2px 5px 20px',\n  }, \n  dialogStyle:{\n    minWidth: \"60vh\",\n  },\n}));\n\nconst ModalConfRequest = ({open, setOpen, className, ...rest }) => {\n  const classes = useStyles();\n  // const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleClose = (event) => {\n    setOpen(false);\n    event.stopPropagation()\n  };\n\n  const DialogTitle = withStyles(useStyles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <React.Fragment>\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n          <Typography variant=\"h4\">{children}</Typography>\n          {onClose ? (\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </MuiDialogTitle>\n        <Divider/>\n        <br/>\n      </React.Fragment>\n    );\n  });\n\n  return (\n    <Modal\n    open={open}\n    onClose={handleClose}\n    >\n\n    <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n    className={classes.dialogStyle}\n    // fullWidth={true}\n    // maxWidth={'md'}\n    >\n        <DialogTitle onClose={(event)=>handleClose(event)} id=\"alert-dialog-title\" className={classes.dialogTitle}>{\"Receipt\"}</DialogTitle>\n        <DialogContent >\n          <Box align='center' mb={2}>\n            <img width='300' src='../static/images/temp_receipt.png'></img>\n          </Box>\n        </DialogContent>\n        \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Done\n          </Button>\n        </DialogActions>\n    </Dialog>\n\n    </Modal>\n\n  );\n};\n\nModalConfRequest.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ModalConfRequest;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Table from './Table' \n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\n\nimport Upcoming from './WeeklySessions';\n\n\nimport ModalReceipt from './ModalReceipt';\n\n\nconst rows = [\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Filipino',\n    student: 'Rolo Pena',\n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Math',\n    student: 'Rolo Pena',\n  },\n  {\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Science',\n    student: 'Rolo Pena',\n  },\n\n]\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    textAlign: 'center',\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  makingEven:{\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  receiptButton: {\n    // alignItems: 'center',\n    // textAlign: 'center',\n    // justify: 'center',\n    // placeItem: 'center',\n    // position: 'absolute',\n    // top: '50%', \n    // transform: 'translateY(-50%)',\n    // placeItems: 'center'\n    justifyContent: 'center'\n  },\n  },\n}));\n\nconst PayoutHeaders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [openReceipt, setOpenReceipt] = React.useState(false);\n\n  const handleClickReceipt=(event)=>{\n    event.stopPropagation()\n    setOpenReceipt(true)\n    event.stopPropagation()\n  }\n\n  return (\n    <div className={classes.root}>\n      <Accordion >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n        >\n          <div className={clsx(classes.column, classes.makingEven)}>\n            <Typography className={classes.heading}>From: 09/25/2020 <br/> To: 10/1/2020</Typography>\n          </div>\n          <div className={clsx(classes.column, classes.helper)}>\n            <Typography className={classes.heading}>2 <br/> Complete hours</Typography>\n          </div>\n          <div className={clsx(classes.column, classes.helper)}>\n            <Typography className={classes.heading}>Php 600 <br/> Pending Amount</Typography>\n          </div>\n          <div className={clsx(classes.column, classes.helper)}>\n            <Typography className={classes.heading}>10/2/2020 <br/> Payout Date</Typography>\n          </div>\n          <div className={clsx(classes.column)}>\n            <Box my={2}>\n              <Button startIcon={<ReceiptIcon/>} color='primary' variant='outlined'\n                onClick={(event) => handleClickReceipt(event)}\n                onFocus={(event) => event.stopPropagation()}\n              >View Receipt</Button>\n              <ModalReceipt open={openReceipt} setOpen={setOpenReceipt}/>\n            </Box>\n\n          </div>\n        </AccordionSummary>\n        <AccordionDetails style={{display: 'block', padding: '0'}}>\n          <Upcoming/>\n          {/* <div className={classes.column} />\n          <div className={classes.column}>\n            <Chip label=\"Barbados\" onDelete={() => {}} />\n          </div>\n          <div className={clsx(classes.column, classes.helper)}>\n            <Typography variant=\"caption\">\n              Select your destination of choice\n              <br />\n              <a href=\"#secondary-heading-and-columns\" className={classes.link}>\n                Learn more\n              </a>\n            </Typography>\n          </div> */}\n        </AccordionDetails>\n        {/* <Divider />\n        <AccordionActions>\n          <Button size=\"small\">Cancel</Button>\n          <Button size=\"small\" color=\"primary\">\n            Save\n          </Button>\n        </AccordionActions> */}\n      </Accordion>\n    </div>\n    // <Card\n    //   className={clsx(classes.root, className)}\n    //   {...rest}\n    // >\n    //   <CardHeader\n    //     title=\"Upcoming Sessions\"\n    //   />\n    //   <Divider />\n    //   <CardContent>\n    //     <Table tableHeaders={headers} tableRows={rows} sessionType={sessionType} type={type}/>\n    //   </CardContent>\n    // </Card>\n  );\n};\n\nPayoutHeaders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PayoutHeaders;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  Box,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PayoutHeaders from './PayoutHeaders';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <Box mb={4}>\n          <Typography variant=\"h1\" align=\"center\">\n            Payout & History\n          </Typography>\n        </Box>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <PayoutHeaders/>\n          </Grid>\n          <Grid item xs={12}>\n            <PayoutHeaders/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors,\n  Grid,\n  Tooltip,\n  Button,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport Calendar from 'react-calendar'\nimport Table from './Table' \n\nconst rows = [\n  {\n    type: 'Single',\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Filipino',\n    topic: 'Mga Tula',\n    duration:'1 hour',\n    student: 'Grade 10',\n  },\n  {\n    type: 'Bundle',\n    date: 'July 7',\n    time: '4 PM',\n    subject: 'Math',\n    topic: 'Algebra',\n    duration:'1 hour',\n    student: 'Grade 9',\n  },\n  \n]\n\nconst headers = [\"Subject\", \"Topic\", \"Duration\", \"Student\", \"\"]\n\n// const sessionType = \"requests\"\n\nconst type = \"requests\"\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Requests = ({ className, pending, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const rows = []\n  pending.forEach(request => {\n    console.log(request)\n    rows.push({\n      'subject': request.subject.subject_field,\n      'topic': request.request.topics,\n      'duration': request.request.time + ' hours',\n      'student': request.child.first_name + ' (' + request.child.year_level + ')'\n    })\n  })\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <CardHeader\n        title=\"Requests\"\n      />\n      <Divider /> */}\n      <CardContent>\n        <Table tableHeaders={headers} tableRows={rows} type={type}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nRequests.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Requests;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  Box,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\n\nimport Page from 'src/components/Page';\nimport Requests from './Requests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RequestView = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Requests\"\n    >\n      <Container maxWidth={false}>\n        <Box mb={4}>\n          <Typography variant=\"h1\" align=\"center\">\n            Requests\n          </Typography>\n        </Box>\n        <Requests pending={props.pending}/>\n      </Container>\n    </Page>\n  );\n};\n\nexport default RequestView;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n}));\n\nconst CustomerListView = (props) => {\n\n  let classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Find Tutor\" \n    >\n      <Container maxWidth={false}>\n      <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          mt={8}\n        >\n          <Container maxWidth=\"md\">\n            <Box mb={4} textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Under development\"\n                src=\"/static/images/oli-happy.png\"\n              />\n            </Box>\n            <h2 align=\"center\">\n              There are no pending requests.\n            </h2>\n          </Container>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CustomerListView;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n}));\n\nconst CustomerListView = (props) => {\n\n  let classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Find Tutor\" \n    >\n      <Container maxWidth={false}>\n      <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          mt={8}\n        >\n          <Container maxWidth=\"md\">\n            <Box mb={4} textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Under development\"\n                src=\"/static/images/oli-happy.png\"\n              />\n            </Box>\n            <h2 align=\"center\">\n              There are no payouts yet.\n            </h2>\n          </Container>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default CustomerListView;\n","import React, { Component, Fragment, useState } from 'react';\nimport { Container, Fade, makeStyles } from '@material-ui/core';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nimport MainLayout from 'src/layouts/MainLayout';\nimport TutorAccountView from 'src/views/tutorAccount/AccountView';\nimport FindTutorView from 'src/views/customer/FindTutorView';\nimport PlaygroundView from 'src/views/test/PlaygroundView';\nimport AuthView from 'src/views/test/AuthView';\nimport NotFoundView from 'src/views/errors/NotFoundView.jsx';\nimport ProductListView from 'src/views/product/ProductListView';\nimport SettingsView from 'src/views/settings/SettingsView';\nimport TutorDashboardView from 'src/views/TutorDashboardView';\nimport PayoutHistory from 'src/views/PayoutHistory';\nimport RequestPage from 'src/views/RequestPage';\nimport ChatView from 'src/views/chat';\nimport LandingPage from 'src/LandingPage';\nimport Login from 'src/components/login';\nimport CreditStoreView from 'src/views/CreditStore';\nimport Loading from 'src/components/loading';\nimport NoRequestView from 'src/components/NoRequestView';\nimport Messenger from 'src/views/chat';\n\nimport TutorExtensionForm from 'src/components/TutorExtensionForm'; //asking tutor if he accepts the extension\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Tutorial from 'src/components/Tutorial';\nimport 'intro.js/introjs.css';\nimport { Steps } from 'intro.js-react';\nimport NoPayoutView from 'src/components/NoPayoutView';\n\nimport ReactPolling from 'react-polling';\n\nimport {get_user} from 'src/Api';\n\nimport jwt from 'jwt-decode';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\n\nfunction TutorDashboardLayout (props){\n  let classes = useStyles();\n  let match = useRouteMatch();\n  let location = useLocation();\n  const [loaded, setLoaded] = useState(false);\n  let [userData, setUserData] = useState();\n  const [payoutPresent, setPayoutPresent] = useState(true);\n  const [setUpcoming, changeUpcoming] = useState(false);\n  const [setHistory, changeHistory] = useState(false);\n  const [open, setOpen] = useState(false);\n  const user_id = jwt(localStorage.getItem('session_token')).id\n  const notifData = [\n                {\n                  image: '../static/images/oli-happy.png',\n                  message: 'New request for Math (Algebra)',\n                  detailPage: '#/viewrequest',\n                  receivedTime:'5m ago'\n                },\n                // {\n                //   image: '../static/images/oli-happy.png',\n                //   message: 'Accepted a session December 3, 2020 2PM-3PM',\n                //   detailPage: '/',\n                // },\n              ]\n\n  const [notifications, setNotifs] = useState(notifData);\n  if(!loaded){\n    props.getUserData((userData) => {\n      setUserData(userData);\n      setLoaded(true);\n    })\n  }\n\n  return (\n    <div>\n\n    {loaded ? \n    <div className={classes.root}>\n      <ReactPolling\n        url={'https://akadsph.pythonanywhere.com/poll?q='+user_id}\n        interval= {3000} // in milliseconds(ms)\n        onSuccess={(res) => {\n          const command = Number(res['res'])\n          console.log(command)\n          if(command == 1){\n            changeUpcoming(true)\n            changeHistory(true)\n          }else if(command == 2){\n            setOpen(true)\n          }\n          return true\n        }\n        }\n        onFailure={() => console.log('error on poll')} // this is optional\n        method={'GET'}\n        // headers={} // this is optional\n        // body={JSON.stringify(data)} // data to send in a post call. Should be stringified always\n        render={({ startPolling, stopPolling, isPolling }) => {\n          return null\n        }}\n      />\n      <TopBar notifications={notifications} credits={props.credits}/>\n      {/* <Tutorial enabled={true}/> */}\n      {/* <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      /> */}\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <TransitionGroup>\n            \n            <CSSTransition key={location.key} in={true} timeout={{ enter: 300, exit: 300}} classNames={'fade'}>\n\n            <Switch location={location}>\n              <Route exact path={`${match.url}`}>\n                <Container>\n                  <Fragment>\n                    <TutorDashboardView open={open} setOpen={setOpen} setHistory ={setHistory} setUpcoming={setUpcoming} first_name={userData['accountview']['first_name']} requests={userData['requestsview'].pending.length} {...userData['dashboardview']}></TutorDashboardView>\n                  </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}viewrequest`}>\n                <Container>\n                <Fragment>\n                  {userData['requestsview'].pending.length == 0 ?\n                    <NoRequestView/>\n                  :\n                    <RequestPage {...userData['requestsview']}/>\n                  }\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}payout`}>\n                <Container>\n                <Fragment>\n                  {payoutPresent ?\n                    <PayoutHistory/> \n                  :\n                    <NoPayoutView/>\n                  }\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}account`}>\n                <Container>\n                <Fragment>\n                  <TutorAccountView {...userData['accountview']}/>\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}settings`}>\n                <Container>\n                <Fragment>\n                  <SettingsView {...userData['settingsview']}/>\n                </Fragment>\n                </Container>\n              </Route>\n              <Route exact path={`${match.url}messages`}>\n                <Fragment>\n                  <Messenger/> \n                </Fragment>\n              </Route>\n              <Route path='*' component={NotFoundView} /> \n            </Switch>\n\n            </CSSTransition>\n\n            </TransitionGroup>\n          </div>\n        </div>\n      </div>\n    </div>\n    :\n    <Fade in={!loaded}>\n      <Loading/>\n    </Fade>\n    }\n\n    </div>\n\n  );\n\n\n}\n\nexport default TutorDashboardLayout;\n","import React, { Component } from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nexport class NotFoundView extends Component {\n\n  render(){\n    return (\n      <Page\n        title=\"404\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"md\">\n            <h2 align=\"center\">\n              Our servers are under maintenance.\n            </h2>\n            <Box mb={4}>\n            <h3 align=\"center\">\n              Kindly try again later. If this persists, kindly contact akadsph@gmail.com\n            </h3>\n            </Box>\n            <Box textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Under development\"\n                src=\"/static/images/oli-confused.png\"\n              />\n            </Box>\n          </Container>\n        </Box>\n      </Page>\n    );\n  }\n\n};\n\nexport default NotFoundView;\n","import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport {Paper} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MuiPhoneNumber from 'material-ui-phone-number';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst styles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignUp extends Component{\n\n    constructor(props){\n      super(props);\n      this.state = {\n        givenName: props.givenName,\n        familyName: props.familyName,\n        email: props.email,\n        googleId: props.googleId,\n        phone: '',\n        picture: props.picture,\n      }\n      props.setAccount(this.state);\n    }\n\n    submitHandler = (event) => {\n      event.preventDefault();\n      this.props.register(this.state)\n    }\n\n    changeHandler = (event) => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({[nam]: val}, () => {\n        this.props.setAccount(this.state);\n      });\n    }\n\n    phoneChangeHandler = (val) => {\n      this.setState({phone: val});\n      this.props.setAccount(this.state);\n    }\n\n    render(){\n    const props = this.props;\n    const {classes} = this.props;\n    if(props.googleId == undefined){\n        window.location.replace('/')\n    }else{\n  return (\n    <React.Fragment>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12}>\n              <img\n                src={this.state.picture}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"givenName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                defaultValue={props.givenName}\n                value={this.state.firstName}\n                label=\"First Name\"\n                autoFocus\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"familyName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                defaultValue={props.familyName}\n                value={this.state.lastName}\n                autoComplete=\"lname\"\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={props.email}\n                autoComplete=\"email\"\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n                <MuiPhoneNumber name=\"phone\" value={this.state.phone} fullWidth variant=\"outlined\" defaultCountry={'ph'} onlyCountries={['ph']} onChange={this.phoneChangeHandler} autoFormat={false} countryCodeEditable={false}/>,\n            </Grid>\n            \n          </Grid>\n      </React.Fragment>\n  );\n    }\n    }\n}\n\nexport default withStyles(styles)(SignUp);","import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport {Paper} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MuiPhoneNumber from 'material-ui-phone-number';\n\n\n\nconst styles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignUp extends Component{\n\n    constructor(props){\n      super(props);\n      this.state = {\n        promo: ''\n      }\n      props.setPromo(this.state)\n    }\n\n  \n    changeHandler = (event) => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({[nam]: val});\n      this.props.setPromo(this.state)\n    }\n\n   \n\n    render(){\n    \n  return (\n    <React.Fragment>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"promo\"\n                helperText=\"Optional\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"promo-code\"\n                defaultValue=\"AKADSPH2020\"\n                label=\"Promo Code\"\n                autoFocus\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n            \n          </Grid>\n      </React.Fragment>\n  );\n    \n    }\n}\n\nexport default withStyles(styles)(SignUp);","import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport {Paper} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst styles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  addChild: {\n    textAlign: 'center',\n  },\n});\n\nclass ChildDetails extends Component{\n\n    constructor(props){\n      super(props);\n      this.state = {\n        first_name: props.first_name,\n        last_name: props.last_name,\n        age: props.age,\n        year_level: props.year_level,\n        school: props.school,\n      }\n      props.setChild(this.state)\n    }\n\n    changeHandler = (event) => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({[nam]: val}, () => {\n        this.props.setChild(this.state)\n      });\n    }\n\n    render(){\n    const props = this.props;\n    const {classes} = this.props;\n\n  return (\n    <React.Fragment>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                defaultValue={props.firstName}\n                label=\"First Name\"\n                autoFocus\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                defaultValue={props.lastName}\n                autoComplete=\"lname\"\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"age\"\n                label=\"Age\"\n                name=\"age\"\n                defaultValue={props.age}\n                autoComplete=\"age\"\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"grade-level\"\n                label=\"Grade Level\"\n                name=\"year_level\"\n                defaultValue={props.grade}\n                autoComplete=\"grade level\"\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"school\"\n                  label=\"School\"\n                  name=\"school\"\n                  defaultValue={props.school}\n                  autoComplete=\"school\"\n                  helperText=\"Optional\"\n                  onChange={this.changeHandler}\n                />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                startIcon={<AddIcon/>}\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.addChild}\n                >\n                Add Another Child\n              </Button>\n            </Grid>\n          </Grid>\n      </React.Fragment>\n  );\n    }\n}\n\nexport default withStyles(styles)(ChildDetails);","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AccountDetails from './AccountDetails';\nimport Grid from '@material-ui/core/Grid';\nimport PromoCode from './PromoCode';\nimport Box from '@material-ui/core/Box';\nimport ChildDetails from './ChildDetails';\n\nimport LoadingBack from 'src/components/loadingBack';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    // marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    \n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n    //   marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    textAlign: 'right',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(0),\n  },\n  alreadyLink: {\n    marginBottom: theme.spacing(3),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginBottom: theme.spacing(6),\n    },\n  },\n\n}));\n\n\n\nexport default function ParentRegister(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [accountDetails, setAccount] = React.useState({\n    givenName:props.givenName,\n    familyName:props.familyName,\n    email:props.email,\n    googleId:props.googleId,\n    picture:props.picture,\n  });\n  const [childDetails, setChild] = React.useState();\n  const [promoDetails, setPromo] = React.useState();\n \n  const steps = ['Account Details', 'Child Details', 'Promo Code'];\n\n  useEffect(() => {\n    if(activeStep === steps.length){\n      const data = accountDetails;\n      data['child'] = childDetails;\n      props.register(data)\n    }\n  },[activeStep])\n\n  function getStepContent(step, props) {\n    switch (step) {\n      case 0:\n        return <AccountDetails setAccount={setAccount} {...accountDetails}/>;\n      case 1:\n        return <ChildDetails setChild={setChild} {...childDetails}/>;\n      case 2:\n        return <PromoCode setPromo={setPromo} {...promoDetails}/>;\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  const handleNext = () => {\n    console.log(activeStep);\n    console.log(accountDetails)\n    console.log(childDetails)\n    console.log(promoDetails)\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const submitHandler = (event, props) => {\n    event.preventDefault();\n    // this.props.register(this.state)\n  }\n\n  return (\n    <React.Fragment>\n      {/* <CssBaseline />\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Company name\n          </Typography>\n        </Toolbar>\n      </AppBar> */}\n      <main className={classes.layout}>\n        <LoadingBack processing={activeStep === steps.length}/>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Parent Account Registration\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h1\" gutterBottom>\n                  Successfully Registered!\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep, props)}\n                <Box>\n\n                <Grid container spacing={0} className={classes.buttons}>\n                  <Grid item\n                  lg={1}\n                  md={1}\n                  xl={0}\n                  xs={0}\n                  ></Grid>\n                  <Grid item\n                  lg={5}\n                  md={5}\n                  xl={5}\n                  xs={6}\n                  align='right'\n                  >\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  {/* </Grid>\n                  <Grid item\n                  lg={5}\n                  md={5}\n                  xl={5}\n                  xs={6}\n                  > */}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                    align='right'\n                    style={{textAlign: 'right'}}\n                  >\n                    {activeStep === steps.length - 1 ? 'Sign Up' : 'Next'}\n                  </Button>\n                  </Grid>\n                </Grid>\n\n                </Box>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Grid container justify=\"flex-end\">\n        <Grid item>\n            <Link href=\"#/login\" variant=\"body2\" className={classes.alreadyLink}>\n            Already have an account? Sign in\n            </Link>\n        </Grid>\n        </Grid>\n        <Box mt={5}>\n            <Copyright />\n        </Box>\n      </main>\n    </React.Fragment>\n  );\n}","import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport {Paper} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport ParentRegister from './ParentRegister';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst styles = (theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass SignUp extends Component{\n\n    constructor(props){\n      super(props);\n      this.state = {\n        firstName: props.givenName,\n        lastName: props.familyName,\n        email: props.email,\n        googleId: props.googleId,\n        picture: props.picture,\n        phone: '',\n      }\n    }\n\n    submitHandler = (event) => {\n      event.preventDefault();\n      this.props.register(this.state)\n    }\n    changeHandler = (event) => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({[nam]: val});\n    }\n\n    phoneChangeHandler = (val) => {\n      this.setState({phone: val});\n    }\n    \n    changeState = (state) => {\n      this.setState(state);\n    }\n\n    render(){\n    const props = this.props;\n    const {classes} = this.props;\n    if(props.googleId == undefined){\n        window.location.replace('/')\n    }else{\n  return (\n    <Container component=\"main\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Box mt={6}>\n            <Container align=\"center\">\n              <img height=\"100\" src='./img/logo.png'/>\n            </Container>\n        </Box>\n        <Container align=\"center\">\n          <ParentRegister register={this.props.register} changeState={this.changeState} givenName={this.state.firstName} familyName={this.state.lastName} email={this.state.email} googleId={this.state.googleId} picture={this.state.picture}/>\n        </Container>\n        {/* <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <h2>\n          Sign up\n        </h2>\n        <form onSubmit={this.submitHandler} className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                defaultValue={props.givenName}\n                label=\"First Name\"\n                autoFocus\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                defaultValue={props.familyName}\n                autoComplete=\"lname\"\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={props.email}\n                autoComplete=\"email\"\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n                <MuiPhoneNumber name=\"phone\" fullWidth variant=\"outlined\" defaultCountry={'ph'} onlyCountries={['ph']} onChange={this.phoneChangeHandler} autoFormat={false} countryCodeEditable={false}/>,\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form> */}\n      </div>\n      {/* <Box mt={5}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n    }\n    }\n}\n\nexport default withStyles(styles)(SignUp);","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, customers, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.length === customers.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCustomerIds.length > 0\n                      && selectedCustomerIds.length < customers.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Phone\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers.slice(0, limit).map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Avatar\n                        className={classes.avatar}\n                        src={customer.avatarUrl}\n                      >\n                        {getInitials(customer.name)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {customer.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {customer.email}\n                  </TableCell>\n                  <TableCell>\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\n                  </TableCell>\n                  <TableCell>\n                    {customer.phone}\n                  </TableCell>\n                  <TableCell>\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button className={classes.importButton}>\n          Import\n        </Button>\n        <Button className={classes.exportButton}>\n          Export\n        </Button>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Add customer\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  Select,\n  FormControl,\n  InputLabel,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { Search as SearchIcon } from 'react-feather';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {DropzoneArea} from 'material-ui-dropzone'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ChildDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const subjectselections = ['Math', 'English', 'Filipino', 'Science'];\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Tutoring Details\n      </Typography> */}\n      <Box mx={2}>\n        <Card>\n        <CardHeader\n          subheader=\"Input the relevant information\"\n          title=\"Application Form\"\n        />\n        <Divider />\n          <CardContent >\n            <Box mx={2} /*maxWidth={1000}*/>\n\n              <Grid container spacing={3} >\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <TextField id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" fullWidth/>\n                </Grid> \n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" fullWidth/>\n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Sex</FormLabel>\n                    <RadioGroup row name=\"tutor-sex\">\n                      <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                      <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                      \n                    </RadioGroup>\n                  </FormControl>\n                </Grid> \n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <TextField id=\"outlined-basic\" label=\"Birth Date\" variant=\"outlined\" type=\"date\" InputLabelProps={{ shrink: true }}fullWidth/>\n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={8}\n                  md={8}\n                  xl={8}\n                  xs={12}\n                >\n                  <TextField id=\"outlined-basic\" label=\"Email Address\" type=\"email\" variant=\"outlined\" fullWidth/>\n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                ></Grid>\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <TextField id=\"outlined-basic\" label=\"Cellphone Number (+63)\" type=\"phone\" variant=\"outlined\"           InputProps={{\n            startAdornment: <InputAdornment position=\"start\">+63</InputAdornment>,\n          }}fullWidth/>\n                </Grid> \n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <Autocomplete\n                    multiple\n                    id=\"tags-filled\"\n                    options={subjectselections.map((option) => option)}\n                    freeSolo\n                    variant=\"outlined\"\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\" label=\"What subjects do you teach?\" />\n                    )}\n                  />\n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                ></Grid>\n\n                <Grid\n                  item\n                  lg={8}\n                  md={8}\n                  xl={8}\n                  xs={12}\n                >\n                  <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\n                    <InputLabel>How much tutoring experience do you have?</InputLabel>\n                    <Select\n                      native\n\n                      label=\"How much tutoring experience do you have?\"\n                      inputProps={{\n                        name: 'subject-matter',\n                        id: 'subject-matter',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={10}>None</option>\n                      <option value={20}>Less than 12 months</option>\n                      <option value={10}>More than a year</option>\n                      \n                    </Select>\n                  </FormControl> \n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                ></Grid>\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={8}\n                  md={8}\n                  xl={8}\n                  xs={12}\n                >\n                  <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\n                    <InputLabel>What Grade Levels were the students you taught?</InputLabel>\n                    <Select\n                      native\n\n                      label=\"What Grade Levels were the students you taught?\"\n                      inputProps={{\n                        name: 'subject-matter',\n                        id: 'subject-matter',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={10}>Grade 1-4 (Lower Sec)</option>\n                      <option value={20}>Grade 5-7 (Middle Sec)</option>\n                      <option value={10}>Grade 8-12 (High Sec)</option>\n                      \n                    </Select>\n                  </FormControl> \n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                ></Grid>\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={8}\n                  md={8}\n                  xl={8}\n                  xs={12}\n                >\n                  <Typography variant=\"h5\">\n                    School or Government ID\n                  </Typography>\n                  <DropzoneArea filesLimit={3}/>\n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                ></Grid>\n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={8}\n                  md={8}\n                  xl={8}\n                  xs={12}\n                >\n                  <Typography variant=\"h5\">\n                    Transcript of Records from High School or College (Optional)\n                  </Typography>\n                  <DropzoneArea filesLimit={3}/>\n                </Grid> \n                <Grid\n                  item\n                  lg={2}\n                  md={2}\n                  xl={2}\n                  xs={0}\n                ></Grid>\n                \n              </Grid>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nChildDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ChildDetails;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n}));\n\nconst AppSent= (props) => {\n\n  let classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      // title=\"Find Tutor\" \n    >\n      <Container maxWidth={false}>\n      <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          mt={8}\n        >\n          <Container maxWidth=\"md\">\n            <Box mb={4} textAlign=\"center\">\n              <img width=\"400\"\n                alt=\"Under development\"\n                src=\"/static/images/oli-happy.png\"\n              />\n            </Box>\n            <h2 align=\"center\">\n              Thank you for applying! We'll review your documents and let you know the following steps through email.\n            </h2>\n           <Box mt={2} textAlign='center'>\n              <Button size=\"large\" variant=\"contained\" color=\"primary\" href='#/'>\n                Go back to home page\n              </Button>\n           </Box>\n          </Container>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default AppSent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst SpecialRequests = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            // subheader=\"Bundles that are for more than 1 hour are consummable for anytime\"\n            title=\"Write any special request you have\"\n          />\n          <Divider />\n          <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n            <TextField \n            id=\"special-request\" \n            label=\"Special Requests\" \n            variant=\"outlined\" fullWidth\n            multiline\n            rows={4}\n            />\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nSpecialRequests.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SpecialRequests;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Container,\n  CardHeader,\n  Divider,\n  Select,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    // marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    // marginRight: theme.spacing(1)\n  },\n  bundleButton: {\n    minWidth: \"30vh\",\n    paddingTop: \"7%\",\n    paddingBottom: \"7%\",\n  },\n}));\n\nconst Payment = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {/* <Typography variant=\"h4\" align='center'>\n            Choose a Bundle\n      </Typography> */}\n      <Box /*mt={3}*/>\n        <Card style={{justifyContent: 'center', placeItems: 'center'}}>\n          <CardHeader\n            subheader=\"Choose your preferred payment method\"\n            title=\"Payment Methods\"\n          />\n          <Divider />\n          <CardContent style={{justifyContent: 'center', placeItems: 'center'}}>\n            <Box style={{justifyContent: 'center', placeItems: 'center'}} /*maxWidth={1000}*/>\n              <Grid container spacing={2} style={{justifyContent: 'center', placeItems: 'center'}}>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                </Grid>\n                <Grid\n                  item\n                  lg={4}\n                  md={4}\n                  xl={4}\n                  xs={12}\n                >\n                  <FormControl variant=\"outlined\" className={classes.formControl} style={{justifyContent: 'center', placeItems: 'center'}}>\n                    <InputLabel>Pay Through</InputLabel>\n                    <Select\n                      fullWidth\n                      native\n  \n                      label=\"Pay Through\"\n                      inputProps={{\n                        name: 'payment-method',\n                        id: 'payment-method',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={10}>Credit Cards  </option>\n                      <option value={20}>Bank Transfers    </option>\n                      <option value={20}>Gcash </option>\n                      <option value={20}>Grab Pay  </option>\n                    \n                    </Select>\n                  </FormControl>\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                  </Grid>\n                  <Grid\n                    item\n                    lg={12}\n                    md={12}\n                    xl={12}\n                    xs={12}\n                  >\n                    <Divider />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                    <TextField\n                    \n                      label=\"Credit Card Number\"\n                      name=\"creditcardno\"\n                      variant=\"outlined\"\n                      // helperText=\"(e.g. Algebra, Trigonometry, Vocalubary)\"\n                      />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                    <TextField\n                    \n                      label=\"Expiry Date\"\n                      placeholder=\"MM/YYYY\"\n                      name=\"expiryDate\"\n                      variant=\"outlined\"\n                      // helperText=\"MM/YYYY\"\n                      />\n                  </Grid>\n                  <Grid\n                    item\n                    lg={4}\n                    md={4}\n                    xl={4}\n                    xs={12}\n                  >\n                    <TextField\n                    \n                      label=\"CVV Number\"\n                      name=\"ccvNo\"\n                      variant=\"outlined\"\n                  \n                      />\n                  </Grid>\n                \n              </Grid>\n              {/* <Grid container spacing={2} style={{justifyContent: 'center', placeItems: 'center'}}>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Credit Card\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Bank Transfer\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  Gcash\n                  </Button>\n                </Grid>\n                <Grid\n                  item\n                  lg={3}\n                  md={3}\n                  xl={3}\n                  xs={12}\n                >\n                  <Button className={classes.bundleButton}  \n                  color=\"primary\"\n                  variant=\"contained\">\n                  GrabPay\n                  </Button>\n                </Grid>\n              </Grid> */}\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nPayment.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Payment;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Typography,\n  Grid,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport data from './data';\nimport FormDetails from './FormDetails';\nimport SpecialRequests from './SpecialRequests';\nimport Payment from './Payment';\nimport AppSent from './AppSent'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  nextButton: {\n    placeItems: \"center\",\n    justifyContent: \"center\",\n    // marginRight: theme.spacing(1)\n   \n  },\n  backButton: {\n    // backgroundColor: \"white\",\n    // color: theme.palette.primary,\n    // textColor: theme.palette.primary,\n    // border: \"10px solid theme.palette.primary\",\n    // borderColor: theme.palette.primary,\n    // // marginRight: theme.spacing(1)\n    // \"&:hover\": {\n    //   backgroundColor: theme.palette.primary,\n    // }\n  },\n}));\n\n\n\n\nconst CustomerListView = () => {\n  const classes = useStyles();\n  const [customers] = useState(data);\n  const [detailsDone, setDetailsDone] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n\n  const handleSend = (event) => {\n    setDetailsDone(!detailsDone);\n  };\n\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Tutor Application - AKADSPH\" \n    >\n      <Container>\n        {/* <Toolbar /> */}\n        <Box mb={4}>\n          <Typography variant=\"h1\" align='center'>\n            Tutor Application\n          </Typography>\n        </Box>\n        {!detailsDone ? \n        <React.Fragment>\n          <Grid\n            container\n            spacing={3}\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              <FormDetails/>\n            </Grid>\n            \n            <Grid\n              item\n              lg={12}\n              md={12}\n              xl={12}\n              xs={12}\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{textAlign: \"center\"}}\n            >\n              <Button className={classes.nextButton}  \n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleSend}\n                alignItems=\"center\"\n                justify=\"center\"\n                >\n                  Register\n              </Button>\n            </Grid>\n          </Grid>\n        </React.Fragment>\n        : \n        \n        <React.Fragment>\n          <AppSent/>\n        </React.Fragment>\n        }\n        {/* <Box mt={3}>\n          <Results customers={customers} />\n        </Box> */}\n      </Container>\n    </Page>\n  );\n};\n\nexport default CustomerListView;\n","import React, { Component, Fragment } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport TutorDashboardLayout from 'src/layouts/TutorDashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport AccountView from 'src/views/account/AccountView';\nimport FindTutorView from 'src/views/customer/FindTutorView';\nimport DashboardView from 'src/views/reports/DashboardView';\nimport PlaygroundView from 'src/views/test/PlaygroundView';\nimport AuthView from 'src/views/test/AuthView';\nimport NotFoundView from 'src/views/errors/NotFoundView.jsx';\nimport NotOnline from 'src/views/errors/NotOnline.jsx';\nimport ProductListView from 'src/views/product/ProductListView';\nimport SettingsView from 'src/views/settings/SettingsView';\nimport TutorDashboardView from 'src/views/TutorDashboardView';\nimport LandingView from 'src/LandingPage';\nimport Login from 'src/components/login';\nimport SignUp from 'src/components/signup.jsx';\nimport axios from 'axios';\nimport TutorApp from 'src/views/TutorApp';\nimport {api, get_user, verify_token, check_admin_token, get_api, post_api} from './Api';\nimport CreditStore from 'src/views/CreditStore';\nimport PayoutHistory from 'src/views/PayoutHistory';\nimport ReactPolling from 'react-polling';\n\n\nimport 'src/Calendar.css'\n\nclass App extends Component {\n\n  constructor(props){\n      super(props);\n      this.state = {\n        session: localStorage.getItem('session_token'),\n        offline: false,\n      };\n  }\n\n  componentDidMount(){\n    this.checkBackend((res) => {\n      this.setState({offline: !res})\n    })\n  }\n\n  checkBackend = (_callback) => {\n    check_admin_token(res => {\n      if(res){\n        if(this.state.session != null){\n          verify_token((res) => {\n            if(res['verified']){\n              this.setState({id:res['id'], type: res['type']})\n              _callback(true)\n            }else{\n              localStorage.clear()\n              window.location.replace('/')\n            }\n          })\n        }\n        _callback(true)\n      }else{\n        _callback(false)\n      }\n    });\n  }\n\n  login = (accessToken, idToken) => {\n    const data = {\n      'id_token':idToken\n    }\n    post_api('login-parent', data, (res) =>{\n      if(res['exists']){\n        localStorage.setItem('session_token',res['session_token'])\n        window.location.replace('/')\n      }else{\n        const registerProps = {\n          'familyName': res['family_name'],\n          'givenName': res['given_name'],\n          'email': res['email'],\n          'googleId': res['sub'],\n          'picture': res['picture'],\n        }\n        this.setState({\n          registerProps\n        }, () => {\n          this.props.history.replace('/register')\n        })\n      }\n    })\n  }\n\n  login_tutor = (accessToken, idToken) => {\n    const data = {\n      'id_token':idToken\n    }\n    post_api('login-tutor', data, (res) =>{\n      console.log(res);\n      if(res['exists']){\n        localStorage.setItem('session_token',res['session_token'])\n        window.location.replace('/')\n      }else{\n        this.props.history.replace('/')\n      }\n    })\n  }\n\n  register = (raw_data) => {\n    const data = {\n      username: raw_data['googleId'],\n      first_name: raw_data['givenName'],\n      last_name: raw_data['familyName'],\n      email: raw_data['email'],\n      phone: raw_data['phone'],\n      picture: raw_data['picture'],\n      child: raw_data['child'],\n    }\n    console.log(data)\n    post_api('register-parent', data, (res) => {\n      console.log(res)\n      localStorage.setItem('session_token',res)\n      window.location.replace('/')\n    })\n  }\n\n  addCredit = (credits) => {\n    console.log('adding credits')\n    console.log(credits)\n    this.setState({\n      credits: this.state.credits + credits\n    })\n  }\n\n  getParentData = (_callback) => {\n\n    get_user((res) => {\n      const id = res['id']\n      const data = {\n        'parent_id': id\n      }\n      post_api('all-parent-details', data, (res) => {\n        console.log(res)\n        const parent = res['parent']\n        const children = res['children'] \n        const subjects = res['subjects']\n        const settings = res['settings']\n        console.log(subjects)\n        this.setState({\n          credits: parent['credits']\n\n        }, () => {\n          const data = {\n            'accountview': {\n              'picture': parent['picture'],\n              'first_name': parent['first_name'],\n              'last_name': parent['last_name'],\n              'email': parent['email'],\n              'phone': '',\n              'children': children,\n              'favtutors': [],\n            },\n            'dashboardview': {\n              'upcoming':[\n                  {\n                  date: 'November 19',\n                  time: '2 PM',\n                  subject: 'Filipino',\n                  tutor: {\n                    name: 'Carl Cornejo'\n                  },\n                },\n                {\n                  date: 'November 20',\n                  time: '4 PM',\n                  subject: 'Math',\n                  tutor: {\n                    name: 'Tristan Reyes'\n                  },\n                },\n                {\n                  date: 'November 23',\n                  time: '6 PM',\n                  subject: 'Science',\n                  tutor: {\n                    name: 'Carla Cordero'\n                  },\n                },\n            ],\n              'pending': [],\n              'history': [],\n              'transaction': []\n            },\n            'findtutorview': {\n              'tutees':children,\n              'favtutors':[\"Carl Cornejo\", \"Carla Cordero\"],\n              'levels':[],\n              'subjects':subjects,\n              'lengths':[\n                {\n                  value: 1,\n                  name: '1 hour'\n                },\n                {\n                  value: 2,\n                  name: '2 hours'\n                },\n                {\n                  value: 3,\n                  name: '3 hours'\n                },\n              ],\n            },\n            'settingsview': {\n              'selected':[],\n            },\n            'chatview': {\n              'chatlist':[],\n            },\n          }\n          _callback(data)\n        })\n      })\n    })\n\n  }\n\n  getTutorData = (_callback) => {\n\n    get_user((res) => {\n      const id = res['id']\n      const data = {\n        'tutor_id': id\n      }\n      post_api('all-tutor-details', data, (res) => {\n        console.log(res)\n        const tutor = res['tutor']\n        const subjects = res['subjects']\n        const requests = res['pending_requests']\n        const settings = res['settings']\n        console.log(subjects)\n        this.setState({\n        }, () => {\n          const data = {\n            'accountview': {\n              'picture': tutor['picture'],\n              'first_name': tutor['first_name'],\n              'last_name': tutor['last_name'],\n              'email': tutor['email'],\n            },\n            'dashboardview': {\n              'upcoming':[\n                  {\n                  date: 'November 19',\n                  time: '2 PM',\n                  subject: 'Filipino',\n                  tutor: {\n                    name: 'Carl Cornejo'\n                  },\n                },\n                {\n                  date: 'November 20',\n                  time: '4 PM',\n                  subject: 'Math',\n                  tutor: {\n                    name: 'Tristan Reyes'\n                  },\n                },\n                {\n                  date: 'November 23',\n                  time: '6 PM',\n                  subject: 'Science',\n                  tutor: {\n                    name: 'Carla Cordero'\n                  },\n                },\n              ],\n              'pending': [],\n              'history': [],\n              'transaction': []\n            },\n            'requestsview': {\n              'pending':requests,\n            },\n            'settingsview': {\n              'selected':[],\n            },\n            'chatview': {\n              'chatlist':[],\n            },\n          }\n          _callback(data)\n        })\n      })\n    })\n\n  }\n\n  render(){\n    return (\n      <div>\n      {this.state.offline == false ?\n      <Router>\n        {this.state.session == null &&\n        // Not Logged In\n        <Switch> \n          <Route exact path='/' component={LandingView} /> \n          <Route exact path='/login'> \n            <Login login={this.login} login_tutor={this.login_tutor} />\n          </Route>\n          <Route exact path='/register'> \n            <SignUp {...this.state.registerProps} register={this.register} />\n          </Route>\n          <Route exact path='/tutor-form'> \n            <TutorApp/>\n          </Route>\n          <Route exact path='/payout-history'> \n            <PayoutHistory/>\n          </Route>\n          <Route path='*' component={NotFoundView} /> \n        </Switch>\n        }\n        {this.state.type == 'parent' &&\n        // Parent Logged In\n        <Switch>\n          <Route path='/'> \n            <DashboardLayout credits={this.state.credits} addCredit={this.addCredit} getUserData={this.getParentData}/>\n          </Route>\n          <Route path='*' component={NotFoundView} /> \n        </Switch>\n        }\n        {this.state.type == 'tutor' &&\n        // Tutor Logged In\n        <Switch>\n          <Route path='/'> \n            <TutorDashboardLayout getUserData={this.getTutorData}/>\n          </Route>\n          <Route path='*' component={NotFoundView} /> \n        </Switch>\n        }\n        {this.state.type == 'admin' &&\n        // Admin Logged In\n        <Switch>\n          <Route path='*' component={NotFoundView} /> \n        </Switch>\n        }\n      </Router>\n      :\n      <NotOnline/>\n      }\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App);","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#EEF1FF',\n      default: colors.common.white,\n      paper: colors.common.white,\n    },\n    primary: {\n      main: '#4655A5',\n      second: '#6CC2B6',\n      third: '#0A3243',\n      fourth: '#EB5531',\n    },\n    secondary: {\n      main: '#6CC2B6',\n      second: '#D4D4D4',\n      third: '#EBEBEB',\n      fourth: '#FFFFFF',\n    },\n    whiteButton: {\n      main: '#FFFFFF',\n    },\n    text: {\n      primary: '#0A3243',\n      secondary: '#212121'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    color: '#4655A5',\n    fontWeight: 700,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    color: '#4655A5',\n    fontWeight: 400,\n    fontSize: 28,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    color: '#4655A5',\n    fontStyle: 'bold',\n    fontWeight: 700,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport theme from 'src/theme';\nimport { ConfirmProvider } from 'material-ui-confirm';\n\nReactDOM.render((\n  <Router>\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <ConfirmProvider>\n        <App/>\n      </ConfirmProvider>\n    </ThemeProvider>\n  </Router>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}